{"version":3,"file":"index.umd.js","sources":["../src/core/contexts/SnackbarContext.tsx","../src/core/contexts/FireCMSContext.tsx","../src/core/contexts/BreacrumbsContext.tsx","../src/core/contexts/ModeState.tsx","../src/core/util/navigation_utils.ts","../src/core/util/navigation_from_path.ts","../src/core/internal/useBuildSideEntityController.tsx","../src/models/entities.ts","../src/core/util/objects.ts","../src/core/util/property_builder.ts","../src/core/utils.ts","../src/core/internal/useBuildNavigationContext.tsx","../src/core/internal/useBuildAuthController.tsx","../src/core/util/storage.tsx","../src/core/FireCMS.tsx","../src/core/components/ErrorView.tsx","../src/preview/components/AsyncPreviewComponent.tsx","../src/core/internal/ErrorBoundary.tsx","../src/core/util/hash.ts","../src/core/util/chip_utils.ts","../src/core/util/enums.ts","../src/preview/components/CustomChip.tsx","../src/preview/components/StringPreview.tsx","../src/preview/components/ArrayOfStringsPreview.tsx","../src/preview/components/ArrayEnumPreview.tsx","../src/preview/components/ArrayPropertyEnumPreview.tsx","../src/preview/components/BooleanPreview.tsx","../src/preview/components/Markdown.tsx","../src/preview/components/EmptyValue.tsx","../src/preview/util.ts","../src/preview/components/ImagePreview.tsx","../src/preview/components/ArrayOfMapsPreview.tsx","../src/preview/components/NumberPreview.tsx","../src/core/util/dates.ts","../src/hooks/useFireCMSContext.tsx","../src/hooks/data/useDataSource.tsx","../src/hooks/data/useCollectionFetch.tsx","../src/hooks/data/useEntityFetch.tsx","../src/hooks/data/save.ts","../src/hooks/data/delete.ts","../src/form/useClearRestoreValue.tsx","../src/hooks/useNavigation.tsx","../src/hooks/useResolvedNavigationFrom.tsx","../src/hooks/useStorageSource.tsx","../src/hooks/useAuthController.tsx","../src/hooks/useSideEntityController.tsx","../src/hooks/useSnackbarController.tsx","../src/hooks/useModeState.tsx","../src/hooks/useClipboard.tsx","../src/preview/components/TimestampPreview.tsx","../src/preview/components/UrlComponentPreview.tsx","../src/preview/components/SkeletonComponent.tsx","../src/preview/components/StorageThumbnail.tsx","../src/preview/components/ArrayOfStorageComponentsPreview.tsx","../src/preview/components/ReferencePreview.tsx","../src/preview/components/ArrayOfReferencesPreview.tsx","../src/preview/components/MapPreview.tsx","../src/preview/components/ArrayPreview.tsx","../src/preview/components/ArrayOneOfPreview.tsx","../src/preview/PreviewComponent.tsx","../src/core/util/property_icons.tsx","../src/core/components/EntityPreview.tsx","../src/core/components/CollectionTable/internal/common.tsx","../src/core/components/CollectionTable/internal/SearchBar.tsx","../src/core/components/CollectionTable/internal/CollectionTableToolbar.tsx","../src/core/components/CollectionTable/internal/CollectionRowActions.tsx","../src/core/components/Table/common.tsx","../src/core/components/Table/TableCell.tsx","../src/form/validation.ts","../src/core/components/CollectionTable/internal/fields/TableInput.tsx","../src/core/components/CollectionTable/internal/fields/TableSelect.tsx","../src/core/components/CollectionTable/internal/fields/TableNumberInput.tsx","../src/core/components/CollectionTable/internal/fields/TableSwitch.tsx","../src/core/components/CollectionTable/internal/fields/TableDateField.tsx","../src/core/components/CollectionTable/internal/fields/TableReferenceField.tsx","../src/core/components/CollectionTable/internal/fields/TableStorageUpload.tsx","../src/core/components/CollectionTable/internal/PropertyTableCell.tsx","../src/core/components/CollectionTable/internal/popup_field/useDraggable.tsx","../src/core/components/CollectionTable/internal/popup_field/useWindowSize.tsx","../src/form/components/ArrayContainer.tsx","../src/form/components/FieldDescription.tsx","../src/form/components/LabelWithIcon.tsx","../src/form/fields/Select.tsx","../src/form/fields/ArrayEnumSelect.tsx","../src/form/fields/StorageUploadField.tsx","../src/form/fields/TextField.tsx","../src/form/fields/SwitchField.tsx","../src/form/fields/DateTimeField.tsx","../src/form/fields/ReferenceField.tsx","../src/form/fields/ArrayDefaultField.tsx","../src/form/fields/ArrayOneOfField.tsx","../src/form/fields/ReadOnlyField.tsx","../src/form/fields/MarkdownField.tsx","../src/form/fields/ArrayOfReferencesField.tsx","../src/form/form_factory.tsx","../src/form/fields/MapField.tsx","../src/form/components/ErrorFocus.tsx","../src/form/components/CustomIdField.tsx","../src/form/EntityForm.tsx","../src/core/components/CollectionTable/internal/popup_field/ElementResizeListener.tsx","../src/core/components/CollectionTable/internal/popup_field/PopupFormField.tsx","../src/core/components/CollectionTable/column_builder.tsx","../src/core/components/CollectionTable/CollectionTable.tsx","../src/core/components/ReferenceDialog.tsx","../src/core/components/CollectionTable/internal/DeleteEntityDialog.tsx","../src/core/util/csv.ts","../src/core/components/CollectionTable/internal/ExportButton.tsx","../src/core/util/permissions.ts","../src/core/components/EntityCollectionView.tsx","../src/core/components/CircularProgressCenter.tsx","../src/core/components/FireCMSHomePage.tsx","../src/core/components/Table/styles.tsx","../src/core/components/Table/filters/StringNumberFilterField.tsx","../src/core/components/Table/filters/BooleanFilterField.tsx","../src/core/components/Table/filters/DateTimeFilterfield.tsx","../src/core/components/Table/TableHeader.tsx","../src/core/components/Table/Table.tsx","../src/hooks/useBreadcrumbsContext.tsx","../src/core/components/NotFoundPage.tsx","../src/core/NavigationRoutes.tsx","../src/core/components/FireCMSLogo.tsx","../src/core/Drawer.tsx","../src/core/internal/FireCMSAppBar.tsx","../src/core/Scaffold.tsx","../src/core/internal/SlideFadeTransition.tsx","../src/core/internal/SideDialogDrawer.tsx","../src/core/internal/common.tsx","../src/core/internal/EntityView.tsx","../src/core/internal/useUnsavedChangesDialog.tsx","../src/core/SideEntityDialogs.tsx","../src/core/theme.ts","../src/core/builders.ts","../src/firebase_app/hooks/useFirebaseAuthDelegate.ts","../src/firebase_app/hooks/useFirestoreDataSource.ts","../src/firebase_app/hooks/useFirebaseStorageSource.ts","../src/firebase_app/hooks/useInitialiseFirebase.ts","../src/firebase_app/components/social_icons.tsx","../src/firebase_app/components/FirebaseLoginView.tsx","../src/firebase_app/FirebaseCMSApp.tsx","../src/firebase_app/models/text_search.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\nimport { SnackbarController, SnackbarMessageType } from \"../../hooks\";\n\nconst DEFAULT_STATE = {\n    isOpen: false,\n    close: () => {\n    },\n    open: (props: {\n        type: SnackbarMessageType;\n        message: string;\n    }) => {\n    }\n};\n\nexport const SnackbarContext = React.createContext<SnackbarController>(DEFAULT_STATE);\n\nexport const SnackbarProvider: React.FC = ({ children }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [title, setTitle] = useState<string | undefined>(undefined);\n    const [message, setMessage] = useState<string | undefined>(undefined);\n    const [type, setType] = useState<SnackbarMessageType | undefined>(undefined);\n\n    const close = () => {\n        setIsOpen(false);\n        setTitle(undefined);\n        setMessage(undefined);\n        setType(undefined);\n    };\n\n    const open = (props: {\n        type: SnackbarMessageType;\n        title?: string;\n        message: string;\n    }) => {\n        const { type, message, title } = props;\n        setType(type);\n        setMessage(message);\n        setTitle(title);\n        setIsOpen(true);\n    };\n\n    return (\n        <SnackbarContext.Provider\n            value={{\n                isOpen,\n                close,\n                open\n            }}\n        >\n\n            {children}\n\n            <Snackbar open={isOpen}\n                      autoHideDuration={3000}\n                      onClose={(_) => close()}>\n                <Alert elevation={1}\n                       variant=\"filled\"\n                       onClose={(_) => close()}\n                       severity={type}>\n\n                    {title && <div>{title}</div>}\n                    {message && <div>{message}</div>}\n\n                </Alert>\n            </Snackbar>\n\n        </SnackbarContext.Provider>\n    );\n};\n","import React from \"react\";\nimport { FireCMSContext } from \"../../models\";\n\n\nexport const FireCMSContextInstance = React.createContext<FireCMSContext>({\n    sideEntityController: {} as any,\n    navigationContext: {} as any,\n    dataSource: {} as any,\n    storageSource: {} as any,\n    authController: {} as any,\n    snackbarController: {} as any\n});\n\n\n/**\n *\n * @category Core\n */\nexport const FireCMSContextProvider: React.FC<React.PropsWithChildren<FireCMSContext>> = ({\n                                                                                              children,\n                                                                                              ...context\n                                                                                          }) => {\n\n    return (\n        <FireCMSContextInstance.Provider\n            value={context}\n        >\n            {children}\n        </FireCMSContextInstance.Provider>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    BreadcrumbEntry,\n    BreadcrumbsController\n} from \"../../hooks/useBreadcrumbsContext\";\n\nconst DEFAULT_BREADCRUMBS_CONTROLLER = {\n    breadcrumbs: [],\n    set: (props: {\n        breadcrumbs: BreadcrumbEntry[];\n    }) => {\n    }\n};\n\n\nexport const BreadcrumbContext = React.createContext<BreadcrumbsController>(DEFAULT_BREADCRUMBS_CONTROLLER);\n\n\ninterface BreadcrumbsProviderProps {\n    children: React.ReactNode;\n}\n\nexport const BreadcrumbsProvider: React.FC<BreadcrumbsProviderProps> = ({ children }) => {\n\n    const [breadcrumbs, setBreadcrumbs] = useState<BreadcrumbEntry[]>([]);\n\n    const set = (props: {\n        breadcrumbs: BreadcrumbEntry[];\n    }) => {\n        setBreadcrumbs(props.breadcrumbs);\n    };\n\n    return (\n        <BreadcrumbContext.Provider\n            value={{\n                breadcrumbs,\n                set\n            }}\n        >\n            {children}\n        </BreadcrumbContext.Provider>\n    );\n};\n","import { useMediaQuery } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ModeState } from \"../../hooks\";\n\nconst DEFAULT_MODE_STATE: ModeState = {\n    mode: \"light\",\n    setMode: (mode: \"light\" | \"dark\") => {\n    },\n    toggleMode: () => {\n    }\n};\n\n\nexport const ModeStateContext = React.createContext<ModeState>(DEFAULT_MODE_STATE);\n\n\ninterface ModeProviderProps {\n    children: React.ReactNode;\n}\n\nexport const ModeProvider: React.FC<ModeProviderProps> = ({ children }) => {\n\n    const prefersDarkModeQuery = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const prefersDarkModeStorage: boolean | null = localStorage.getItem(\"prefers-dark-mode\") != null ? localStorage.getItem(\"prefers-dark-mode\") === \"true\" : null;\n    const prefersDarkMode = prefersDarkModeStorage ?? prefersDarkModeQuery;\n    const [mode, setMode] = useState<\"light\" | \"dark\">(prefersDarkMode ? \"dark\" : \"light\");\n\n    useEffect(() => {\n        setMode(prefersDarkMode ? \"dark\" : \"light\");\n    }, [prefersDarkMode]);\n\n    const toggleMode = () => {\n        if (mode === \"light\") {\n            if (!prefersDarkModeQuery)\n                localStorage.setItem(\"prefers-dark-mode\", \"true\");\n            else\n                localStorage.removeItem(\"prefers-dark-mode\");\n            setMode(\"dark\");\n        } else {\n            if (prefersDarkModeQuery)\n                localStorage.setItem(\"prefers-dark-mode\", \"false\");\n            else\n                localStorage.removeItem(\"prefers-dark-mode\");\n            setMode(\"light\");\n        }\n    };\n\n    return (\n        <ModeStateContext.Provider\n            value={{\n                mode,\n                setMode,\n                toggleMode\n            }}\n        >\n            {children}\n        </ModeStateContext.Provider>\n    );\n};\n","import { EntityCollection, NavigationContext } from \"../../models\";\n\nexport function removeInitialAndTrailingSlashes(s: string): string {\n    return removeInitialSlash(removeTrailingSlash(s));\n}\n\nexport function removeInitialSlash(s: string) {\n    if (s.startsWith(\"/\"))\n        return s.slice(1);\n    else return s;\n}\n\nexport function removeTrailingSlash(s: string) {\n    if (s.endsWith(\"/\"))\n        return s.slice(0, -1);\n    else return s;\n}\n\n\nexport function addInitialSlash(s: string) {\n    if (s.startsWith(\"/\"))\n        return s;\n    else return `/${s}`;\n}\n\nexport function getLastSegment(path: string) {\n    const cleanPath = removeInitialAndTrailingSlashes(path);\n    if (cleanPath.includes(\"/\")) {\n        const segments = cleanPath.split(\"/\");\n        return segments[segments.length - 1];\n    }\n    return cleanPath;\n}\n\n\n/**\n * Find the corresponding view at any depth for a given path.\n * @param path\n * @param collections\n */\nexport function getCollectionByPath<M>(path: string, collections?: EntityCollection[]): EntityCollection<M> | undefined {\n\n    if (!collections)\n        return undefined;\n\n    const subpaths = removeInitialAndTrailingSlashes(path).split(\"/\");\n    if (subpaths.length % 2 === 0) {\n        throw Error(`Collection paths must have an odd number of segments: ${path}`);\n    }\n\n    return getCollectionFromCollectionsInternal(removeInitialAndTrailingSlashes(path), collections);\n\n}\n\nfunction getCollectionFromCollectionsInternal<M extends { [Key: string]: any }>(path: string, collectionViews: EntityCollection[]): EntityCollection | undefined {\n\n    const subpaths = removeInitialAndTrailingSlashes(path).split(\"/\");\n    const subpathCombinations = getCollectionPathsCombinations(subpaths);\n\n    let result: EntityCollection | undefined;\n    for (let i = 0; i < subpathCombinations.length; i++) {\n        const subpathCombination = subpathCombinations[i];\n        const navigationEntry = collectionViews && collectionViews.find((entry) => entry.path === subpathCombination);\n\n        if (navigationEntry) {\n\n            if (subpathCombination === path) {\n                result = navigationEntry;\n            } else if (navigationEntry.subcollections) {\n                const newPath = path.replace(subpathCombination, \"\").split(\"/\").slice(2).join(\"/\");\n                if (newPath.length > 0)\n                    result = getCollectionFromCollectionsInternal(newPath, navigationEntry.subcollections);\n            }\n        }\n        if (result) break;\n    }\n    return result;\n}\n\n/**\n * Get the subcollection combinations from a path:\n * \"sites/es/locales\" => [\"sites/es/locales\", \"sites\"]\n * @param subpaths\n */\nexport function getCollectionPathsCombinations(subpaths: string[]): string[] {\n    const entries = subpaths.length > 0 && subpaths.length % 2 === 0 ? subpaths.splice(0, subpaths.length - 1) : subpaths;\n\n    const length = entries.length;\n    const result: string[] = [];\n    for (let i = length; i > 0; i = i - 2) {\n        result.push(entries.slice(0, i).join(\"/\"));\n    }\n    return result;\n\n}\n\nexport interface TopNavigationEntry {\n    url: string;\n    name: string;\n    description?: string;\n    group?: string;\n}\n\nexport type TopNavigationResult = {\n    navigationEntries: TopNavigationEntry[],\n    groups: string[]\n};\n\nexport function computeTopNavigation(\n    navigationContext: NavigationContext,\n    includeHiddenViews: boolean\n): TopNavigationResult {\n\n    const navigation = navigationContext.navigation;\n    if (!navigation)\n        throw Error(\"You can only use `computeTopNavigation` with an initialised navigationContext\");\n\n    const navigationEntries: TopNavigationEntry[] = [\n        ...navigation.collections.map(collection => ({\n            url: navigationContext.buildUrlCollectionPath(collection.path),\n            name: collection.name,\n            description: collection.description,\n            group: collection.group\n        })),\n        ...(navigation.views ?? []).map(view =>\n            includeHiddenViews || !view.hideFromNavigation\n                ? ({\n                    url: navigationContext.buildCMSUrlPath(Array.isArray(view.path) ? view.path[0] : view.path),\n                    name: view.name,\n                    description: view.description,\n                    group: view.group\n                })\n                : undefined)\n            .filter((view) => !!view) as TopNavigationEntry[]\n    ];\n\n    const groups: string[] = Array.from(new Set(\n        Object.values(navigationEntries).map(e => e.group).filter(Boolean) as string[]\n    ).values());\n\n    return { navigationEntries, groups };\n}\n","import { EntityCollection, EntityCustomView } from \"../../models\";\nimport {\n    getCollectionPathsCombinations,\n    removeInitialAndTrailingSlashes\n} from \"./navigation_utils\";\n\nexport type NavigationViewInternal<M> =\n    | NavigationViewEntityInternal<M>\n    | NavigationViewCollectionInternal<M>\n    | NavigationViewEntityCustomInternal<M>;\n\ninterface NavigationViewEntityInternal<M> {\n    type: \"entity\";\n    entityId: string;\n    path: string;\n    parentCollection: EntityCollection<M>;\n}\n\ninterface NavigationViewCollectionInternal<M> {\n    type: \"collection\";\n    path: string;\n    collection: EntityCollection<M>;\n}\n\ninterface NavigationViewEntityCustomInternal<M> {\n    type: \"custom_view\";\n    path: string;\n    view: EntityCustomView<M>;\n}\n\nexport function getNavigationEntriesFromPathInternal<M extends { [Key: string]: any }>(props: {\n    path: string,\n    collections: EntityCollection[],\n    customViews?: EntityCustomView<M>[],\n    currentFullPath?: string\n}): NavigationViewInternal<M> [] {\n\n    const {\n        path,\n        collections,\n        currentFullPath\n    } = props;\n\n    const subpaths = removeInitialAndTrailingSlashes(path).split(\"/\");\n    const subpathCombinations = getCollectionPathsCombinations(subpaths);\n\n    const result: NavigationViewInternal<M> [] = [];\n    for (let i = 0; i < subpathCombinations.length; i++) {\n        const subpathCombination = subpathCombinations[i];\n\n        const collection = collections && collections.find((entry) => entry.path === subpathCombination);\n\n        if (collection) {\n            const collectionPath = currentFullPath && currentFullPath.length > 0\n                ? (currentFullPath + \"/\" + collection.path)\n                : collection.path;\n\n            result.push({\n                type: \"collection\",\n                path: collectionPath,\n                collection\n            });\n            const restOfThePath = removeInitialAndTrailingSlashes(removeInitialAndTrailingSlashes(path).replace(subpathCombination, \"\"));\n            const nextSegments = restOfThePath.length > 0 ? restOfThePath.split(\"/\") : [];\n            if (nextSegments.length > 0) {\n                const entityId = nextSegments[0];\n                const fullPath = collectionPath + \"/\" + entityId;\n                result.push({\n                    type: \"entity\",\n                    entityId: entityId,\n                    path: collectionPath,\n                    parentCollection: collection\n                });\n                if (nextSegments.length > 1) {\n                    const newPath = nextSegments.slice(1).join(\"/\");\n                    const customViews = collection.schema.views;\n                    const customView = customViews && customViews.find((entry) => entry.path === newPath);\n                    if (customView) {\n                        const path = currentFullPath && currentFullPath.length > 0\n                            ? (currentFullPath + \"/\" + customView.path)\n                            : customView.path;\n                        result.push({\n                            type: \"custom_view\",\n                            path: path,\n                            view: customView\n                        });\n                    } else if (collection.subcollections) {\n                        result.push(...getNavigationEntriesFromPathInternal({\n                            path: newPath,\n                            customViews: customViews,\n                            collections: collection.subcollections,\n                            currentFullPath: fullPath\n                        }));\n                    }\n                }\n            }\n            break;\n        }\n\n    }\n    return result;\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n    EntityCollection,\n    NavigationContext,\n    SideEntityController,\n    SideEntityPanelProps\n} from \"../../models\";\nimport {\n    getNavigationEntriesFromPathInternal,\n    NavigationViewInternal\n} from \"../util/navigation_from_path\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { removeInitialAndTrailingSlashes } from \"../util/navigation_utils\";\n\nconst NEW_URL_HASH = \"new\";\n\nexport const useBuildSideEntityController = (navigationContext: NavigationContext): SideEntityController => {\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const initialised = useRef<boolean>(false);\n    const [sidePanels, setSidePanels] = useState<SideEntityPanelProps[]>([]);\n\n    const collections = navigationContext.navigation?.collections;\n\n    const state = location.state as any;\n    const baseLocation = state && state.base_location ? state.base_location : location;\n\n    const updatePanels = useCallback((newPanels: SideEntityPanelProps[]) => {\n        setSidePanels(newPanels);\n        navigationContext.removeAllOverridesExcept(newPanels);\n    }, []);\n\n    useEffect(() => {\n        if (navigationContext.initialised) {\n            if (location?.state && state.panels) {\n                const statePanel = state.panels as SideEntityPanelProps[];\n                updatePanels(statePanel);\n            } else {\n                updatePanels([]);\n            }\n        }\n    }, [location?.state, navigationContext.initialised]);\n\n    // only on initialisation\n    useEffect(() => {\n        if (collections && !initialised.current) {\n            if (navigationContext.isUrlCollectionPath(location.pathname)) {\n                const newFlag = location.hash === `#${NEW_URL_HASH}`;\n                const entityOrCollectionPath = navigationContext.urlPathToDataPath(location.pathname);\n                const sidePanels = buildSidePanelsFromUrl(entityOrCollectionPath, collections, newFlag);\n                updatePanels(sidePanels);\n            }\n            initialised.current = true;\n        }\n    }, [location, collections, sidePanels]);\n\n    const close = useCallback(() => {\n\n        if (sidePanels.length === 0)\n            return;\n\n        const lastSidePanel = sidePanels[sidePanels.length - 1];\n        const locationPanels = location?.state && state.panels;\n        if (locationPanels && locationPanels.length > 0) {\n            const updatedPanels = [...locationPanels.slice(0, -1)];\n            // setSidePanels(updatedPanels);\n            navigate(-1);\n        } else {\n            const newPath = navigationContext.buildUrlCollectionPath(lastSidePanel.path);\n            // setSidePanels([]);\n            navigate(newPath, { replace: true });\n        }\n\n    }, [sidePanels, location]);\n\n    const open = useCallback(({\n                      path,\n                      entityId,\n                      selectedSubpath,\n                      copy,\n                      width,\n                      ...schemaProps\n                  }: SideEntityPanelProps) => {\n\n        if (copy && !entityId) {\n            throw Error(\"If you want to copy an entity you need to provide an entityId\");\n        }\n\n        if (schemaProps &&\n            (schemaProps.schema !== undefined ||\n                schemaProps.permissions !== undefined ||\n                schemaProps.subcollections !== undefined)) {\n            const permissions = schemaProps.permissions;\n            const schemaOrResolver = schemaProps.schema;\n            const subcollections = schemaProps.subcollections;\n            const overrideSchemaRegistry = schemaProps.overrideSchemaRegistry;\n            navigationContext.setOverride(\n                {\n                    path,\n                    entityId,\n                    schemaConfig: {\n                        permissions,\n                        schema: typeof schemaOrResolver !== \"function\" ? schemaOrResolver : undefined,\n                        schemaResolver: typeof schemaOrResolver === \"function\" ? schemaOrResolver : undefined,\n                        subcollections,\n                        callbacks: schemaProps.callbacks\n                    },\n                    overrideSchemaRegistry\n                }\n            );\n        }\n\n        const cleanPath = removeInitialAndTrailingSlashes(path);\n        const newPath = entityId\n            ? navigationContext.buildUrlCollectionPath(`${cleanPath}/${entityId}/${selectedSubpath || \"\"}`)\n            : navigationContext.buildUrlCollectionPath(`${cleanPath}#${NEW_URL_HASH}`);\n\n        const lastSidePanel = sidePanels.length > 0 ? sidePanels[sidePanels.length - 1] : undefined;\n\n        // If the side dialog is open currently, we update it\n        if (entityId &&\n            lastSidePanel &&\n            lastSidePanel.path === path &&\n            lastSidePanel?.entityId === entityId) {\n\n            const updatedPanel: SideEntityPanelProps = {\n                ...lastSidePanel,\n                selectedSubpath\n            };\n            const updatedPanels = [...sidePanels.slice(0, -1), updatedPanel];\n            updatePanels(updatedPanels);\n            navigate(\n                navigationContext.buildUrlCollectionPath(`${cleanPath}/${entityId}/${selectedSubpath || \"\"}`),\n                {\n                    replace: true,\n                    state: {\n                        base_location: baseLocation,\n                        panels: updatedPanels\n                    }\n                }\n            );\n\n        } else {\n            const newPanel: SideEntityPanelProps = {\n                path,\n                entityId,\n                copy: copy !== undefined && copy,\n                width,\n                selectedSubpath\n            };\n            const updatedPanels = [...sidePanels, newPanel];\n            updatePanels(updatedPanels);\n            navigate(\n                newPath,\n                {\n                    state: {\n                        base_location: baseLocation,\n                        panels: updatedPanels\n                    }\n                }\n            );\n        }\n    }, [sidePanels, location]);\n\n    return {\n        sidePanels,\n        close,\n        open\n    };\n};\n\nfunction buildSidePanelsFromUrl(path: string, collections: EntityCollection[], newFlag: boolean): SideEntityPanelProps[] {\n\n    const navigationViewsForPath: NavigationViewInternal<any>[] = getNavigationEntriesFromPathInternal({\n        path,\n        collections\n    });\n\n    const sidePanels: SideEntityPanelProps[] = [];\n    let lastCollectionPath = \"\";\n    for (let i = 0; i < navigationViewsForPath.length; i++) {\n        const navigationEntry = navigationViewsForPath[i];\n\n        if (navigationEntry.type === \"collection\") {\n            lastCollectionPath = navigationEntry.path;\n        }\n\n        if (i > 0) { // the first collection is handled by the main navigation\n            const previousEntry = navigationViewsForPath[i - 1];\n            if (navigationEntry.type === \"entity\") {\n                if (previousEntry.type === \"collection\") {\n                    sidePanels.push({\n                            path: navigationEntry.path,\n                            entityId: navigationEntry.entityId,\n                            copy: false\n                        }\n                    );\n                }\n            } else if (navigationEntry.type === \"custom_view\") {\n                if (previousEntry.type === \"entity\") {\n                    const lastSidePanel: SideEntityPanelProps = sidePanels[sidePanels.length - 1];\n                    if (lastSidePanel)\n                        lastSidePanel.selectedSubpath = navigationEntry.view.path;\n                }\n            } else if (navigationEntry.type === \"collection\") {\n                if (previousEntry.type === \"entity\") {\n                    const lastSidePanel: SideEntityPanelProps = sidePanels[sidePanels.length - 1];\n                    if (lastSidePanel)\n                        lastSidePanel.selectedSubpath = navigationEntry.collection.path;\n                }\n            }\n        }\n\n    }\n\n    if (newFlag) {\n        sidePanels.push({\n            path: lastCollectionPath,\n            copy: false\n        });\n    }\n\n    return sidePanels;\n}\n","import { EnumValues, Properties, PropertiesOrBuilder } from \"./properties\";\n\n/**\n * Specification for defining an entity\n * @category Models\n */\nexport interface EntitySchema<M extends { [Key: string]: any } = any> {\n\n    /**\n     * Singular name of the entity as displayed in an Add button . E.g. Product\n     */\n    name: string;\n\n    /**\n     * Description of this entity\n     */\n    description?: string;\n\n    /**\n     * If this prop is not set, the ID of the document will be created by the\n     * datasource.\n     *\n     * You can set the value to 'true' to force the users to choose the ID.\n     *\n     * You can set the value to 'optional' to allow the users to choose the ID,\n     * If the ID is empty, an automatic ID will be set.\n     *\n     * You can also pass a set of values (as an {@link EnumValues} object) to\n     * allow users to pick from only those.\n     */\n    customId?: boolean | \"optional\" | EnumValues;\n\n    /**\n     * Set of properties that compose an entity\n     */\n    properties: PropertiesOrBuilder<M>;\n\n    /**\n     * When creating a new entity, set some values as already initialized\n     */\n    defaultValues?: any;\n\n    /**\n     * Array of builders for rendering additional panels in an entity view.\n     * Useful if you need to render custom views\n     */\n    views?: EntityCustomView<M>[];\n\n}\n\n/**\n * @category Models\n */\nexport type EntitySchemaResolverProps<M = any> = {\n    entityId?: string | undefined,\n    values?: Partial<EntityValues<M>>,\n    previousValues?: Partial<EntityValues<M>>,\n};\n\n/**\n * Use to resolve the schema properties for specific path, entity id or values.\n * @category Models\n */\nexport type EntitySchemaResolver<M = any> = ({\n                                                 entityId,\n                                                 values,\n                                                 previousValues\n                                             }: EntitySchemaResolverProps<M>) => ResolvedEntitySchema<M>;\n\n/**\n * This is the same entity schema you define, only all the property builders\n * are resolved to regular `Property` objects.\n * @category Models\n */\nexport type ResolvedEntitySchema<M> =\n    Omit<EntitySchema<M>, \"properties\"> &\n    {\n        properties: Properties<M>,\n        originalSchema: EntitySchema<M>\n    }\n\n/**\n * New or existing status\n * @category Models\n */\nexport type EntityStatus = \"new\" | \"existing\" | \"copy\";\n\n/**\n * Representation of an entity fetched from the datasource\n * @category Models\n */\nexport interface Entity<M extends { [Key: string]: any }> {\n\n    /**\n     * Id of the entity\n     */\n    id: string;\n\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n    path: string;\n\n    /**\n     * Current values\n     */\n    values: EntityValues<M>;\n}\n\n/**\n * This type represents a record of key value pairs as described in an\n * entity schema.\n * @category Models\n */\nexport type EntityValues<M> = M;\n\n/**\n * Class used to create a reference to an entity in a different path\n */\nexport class EntityReference {\n    /**\n     * Id of the entity\n     */\n    readonly id: string;\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n    readonly path: string;\n\n    constructor(id: string, path: string) {\n        this.id = id;\n        this.path = path;\n    }\n\n    get pathWithId() {\n        return `${this.path}/${this.id}`;\n    }\n}\n\nexport class GeoPoint {\n\n    /**\n     * The latitude of this GeoPoint instance.\n     */\n    readonly latitude: number;\n    /**\n     * The longitude of this GeoPoint instance.\n     */\n    readonly longitude: number;\n\n    constructor(latitude: number, longitude: number) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n    }\n}\n\n/**\n * @ignore\n */\nexport type InferSchemaType<S extends EntitySchema> = S extends EntitySchema<infer M> ? M : never;\n\n/**\n * You can use this builder to render a custom panel in the entity detail view.\n * It gets rendered as a tab.\n * @category Models\n */\nexport type EntityCustomView<M = any> =\n    {\n        path: string,\n        name: string,\n        builder: (extraActionsParams: EntityCustomViewParams<M>) => React.ReactNode\n    }\n\n/**\n * Parameters passed to the builder in charge of rendering a custom panel for\n * an entity view.\n * @category Models\n */\nexport interface EntityCustomViewParams<M extends { [Key: string]: any } = any> {\n\n    /**\n     * Schema used by this entity\n     */\n    schema: ResolvedEntitySchema<M>;\n\n    /**\n     * Entity that this view refers to. It can be undefined if the entity is new\n     */\n    entity?: Entity<M>;\n\n    /**\n     * Modified values in the form that have not been saved yet.\n     * If the entity is not new and the values are not modified, these values\n     * are the same as in `entity`\n     */\n    modifiedValues?: EntityValues<M>;\n}\n\n","import hash from \"object-hash\";\nimport { GeoPoint } from \"../../models\";\n\nexport const pick: <T>(obj: T, ...args: any[]) => T = (obj: any, ...args: any[]) => ({\n    ...args.reduce((res, key) => ({ ...res, [key]: obj[key] }), {})\n});\n\nexport function isObject(item: any) {\n    return (item && typeof item === \"object\" && !Array.isArray(item));\n}\n\nexport function mergeDeep<T>(target: T, source: any): T {\n    const output:T = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isObject(source[key])) {\n                if (!(key in target))\n                    Object.assign(output, { [key]: source[key] });\n                else\n                    (output as any)[key] = mergeDeep((target as any)[key], source[key]);\n            } else {\n                Object.assign(output, { [key]: source[key] });\n            }\n        });\n    }\n    return output;\n}\n\nexport function getValueInPath(o: object | undefined, path: string): any {\n    if (typeof o === \"object\") {\n        if (path in o) {\n            return (o as any)[path];\n        }\n        if (path.includes(\".\")) {\n            const pathSegments = path.split(\".\");\n            return getValueInPath((o as any)[pathSegments[0]], pathSegments.slice(1).join(\".\"))\n        }\n    }\n    return undefined;\n}\n\nexport function getHashValue<T>(v: T) {\n    if (!v) return null;\n    if (typeof v === \"object\") {\n        if (\"id\" in v)\n            return (v as any).id;\n        else if (v instanceof Date)\n            return v.toLocaleString();\n        else if (v instanceof GeoPoint)\n            return hash(v);\n    }\n    return hash(v, { ignoreUnknown: true });\n}\n","import {\n    CMSType,\n    EntityValues,\n    Property,\n    PropertyOrBuilder\n} from \"../../models\";\nimport { mergeDeep } from \"./objects\";\n\n\nexport function buildPropertyFrom<T extends CMSType, M extends { [Key: string]: any }>\n({\n     propertyOrBuilder,\n     values,\n     previousValues,\n     path,\n     entityId,\n     propertyOverride\n }: {\n     propertyOrBuilder: PropertyOrBuilder<T, M>,\n     values: Partial<EntityValues<M>>,\n     previousValues?: Partial<EntityValues<M>>,\n     path: string,\n     entityId?: string,\n     propertyOverride?: Partial<Property<T>>\n }\n): Property<T> | null {\n    let result: any;\n    if (typeof propertyOrBuilder === \"function\") {\n        result = propertyOrBuilder({ values, previousValues, entityId, path });\n        if (!result) {\n            console.debug(\"Property builder not returning `Property` so it is not rendered\", path, entityId, propertyOrBuilder);\n            return null;\n        }\n    } else {\n        result = propertyOrBuilder;\n    }\n    if (propertyOverride)\n        result = mergeDeep(result, propertyOverride);\n\n    return result;\n}\n","import {\n    Entity,\n    EntityReference,\n    EntitySchema,\n    EntitySchemaResolver,\n    EntityStatus,\n    EntityValues,\n    GeoPoint,\n    Properties,\n    PropertiesOrBuilder,\n    Property,\n    ResolvedEntitySchema\n} from \"../models\";\nimport { buildPropertyFrom } from \"./util/property_builder\";\n\nexport function isReadOnly(property: Property<any>): boolean {\n    if (property.readOnly)\n        return true;\n    if (property.dataType === \"timestamp\") {\n        if (property.autoValue)\n            return true;\n    }\n    if (property.dataType === \"reference\") {\n        return !property.path;\n    }\n    return false;\n}\n\nexport function isHidden(property: Property<any>): boolean {\n    return typeof property.disabled === \"object\" && Boolean(property.disabled.hidden);\n}\n\n\n/**\n *\n * @param schema\n * @param values\n * @param path\n * @param entityId\n * @ignore\n */\nexport function computeSchema<M extends { [Key: string]: any }>(\n    { schemaOrResolver, path, entityId, values, previousValues }: {\n        schemaOrResolver: EntitySchema<M> | ResolvedEntitySchema<M> | EntitySchemaResolver<M>,\n        path: string,\n        entityId?: string | undefined,\n        values?: Partial<EntityValues<M>>,\n        previousValues?: Partial<EntityValues<M>>,\n    }): ResolvedEntitySchema<M> {\n\n    if (typeof schemaOrResolver === \"function\") {\n        return schemaOrResolver({ entityId, values, previousValues });\n    } else {\n\n        const properties = computeProperties({\n            propertiesOrBuilder: schemaOrResolver.properties,\n            path,\n            entityId,\n            values,\n            previousValues\n        });\n\n        return {\n            ...schemaOrResolver,\n            properties,\n            originalSchema: schemaOrResolver\n        };\n    }\n}\n\n/**\n *\n * @param propertiesOrBuilder\n * @param values\n * @param previousValues\n * @param path\n * @param entityId\n * @ignore\n */\nexport function computeProperties<M extends { [Key: string]: any }>(\n    { propertiesOrBuilder, path, entityId, values, previousValues }: {\n        propertiesOrBuilder: PropertiesOrBuilder<M>,\n        path: string,\n        entityId?: string | undefined,\n        values?: Partial<EntityValues<M>>,\n        previousValues?: Partial<EntityValues<M>>,\n    }): Properties<M> {\n    return Object.entries(propertiesOrBuilder)\n        .map(([key, propertyOrBuilder]) => {\n            const property = buildPropertyFrom({\n                propertyOrBuilder,\n                values: values ?? {},\n                previousValues: previousValues ?? values ?? {},\n                path,\n                entityId\n            });\n            if (property === null) return null;\n            return {\n                [key]: property\n            };\n        })\n        .filter((a) => a !== null)\n        .reduce((a, b) => ({ ...a, ...b }), {}) as Properties<M>;\n}\n\n\n\nexport function initWithProperties<M extends { [Key: string]: any }>\n(properties: Properties<M>, defaultValues?: Partial<EntityValues<M>>): EntityValues<M> {\n    return Object.entries(properties)\n        .map(([key, property]) => {\n            const propertyDefaultValue = defaultValues && key in defaultValues ? (defaultValues as any)[key] : undefined;\n            const value = initPropertyValue(key, property as Property, propertyDefaultValue);\n            return value === undefined ? {} : { [key]: value };\n        })\n        .reduce((a, b) => ({ ...a, ...b }), {}) as EntityValues<M>;\n}\n\nfunction initPropertyValue(key: string, property: Property, defaultValue: any) {\n    let value: any;\n    if (property.dataType === \"map\" && property.properties) {\n        value = initWithProperties(property.properties as Properties, defaultValue);\n    } else if (defaultValue !== undefined) {\n        value = defaultValue;\n    } else {\n        value = undefined;\n    }\n    return value;\n}\n\n/**\n * Update the automatic values in an entity before save\n * @category Datasource\n */\n\nexport function updateAutoValues<M extends { [Key: string]: any }>({\n                                                                       inputValues,\n                                                                       properties,\n                                                                       status,\n                                                                       timestampNowValue,\n                                                                       referenceConverter,\n                                                                       geopointConverter\n                                                                   }:\n                                                                       {\n                                                                           inputValues: Partial<EntityValues<M>>,\n                                                                           properties: Properties<M>,\n                                                                           status: EntityStatus,\n                                                                           timestampNowValue: any,\n                                                                           referenceConverter?: (value: EntityReference) => any,\n                                                                           geopointConverter?: (value: GeoPoint) => any\n                                                                       }): EntityValues<M> {\n    return traverseValues(\n        inputValues,\n        properties,\n        (inputValue, property) => {\n            if (property.dataType === \"timestamp\") {\n                if (status === \"existing\" && property.autoValue === \"on_update\") {\n                    return timestampNowValue;\n                } else if ((status === \"new\" || status === \"copy\") &&\n                    (property.autoValue === \"on_update\" || property.autoValue === \"on_create\")) {\n                    return timestampNowValue;\n                } else {\n                    return inputValue;\n                }\n            } else if (referenceConverter && property.dataType === \"reference\") {\n                if (inputValue instanceof EntityReference) {\n                    return referenceConverter(inputValue);\n                }\n            } else if (geopointConverter && property.dataType === \"geopoint\") {\n                if (inputValue instanceof GeoPoint) {\n                    return geopointConverter(inputValue);\n                }\n            } else {\n                return inputValue;\n            }\n        }\n    );\n}\n\n\n/**\n * Add missing required fields, expected in the schema, to the values of an entity\n * @param values\n * @param properties\n * @category Datasource\n */\nexport function sanitizeData<M extends { [Key: string]: any }>\n(\n    values: EntityValues<M>,\n    properties: Properties<M>\n) {\n    const result: any = values;\n    Object.entries(properties)\n        .forEach(([key, property]) => {\n            if (values && values[key] !== undefined) result[key] = values[key];\n            else if ((property as Property).validation?.required) result[key] = null;\n        });\n    return result;\n}\n\nexport function getReferenceFrom(entity: Entity<any>): EntityReference {\n    return new EntityReference(entity.id, entity.path);\n}\n\n\nexport function traverseValues<M extends { [Key: string]: any }>(\n    inputValues: Partial<EntityValues<M>>,\n    properties: Properties<M>,\n    operation: (value: any, property: Property) => any\n): EntityValues<M> {\n    const updatedValues = Object.entries(properties)\n        .map(([key, property]) => {\n            const inputValue = inputValues && (inputValues as any)[key];\n            const updatedValue = traverseValue(inputValue, property as Property, operation);\n            if (updatedValue === undefined) return {};\n            return ({ [key]: updatedValue });\n        })\n        .reduce((a, b) => ({ ...a, ...b }), {}) as EntityValues<M>;\n    return { ...inputValues, ...updatedValues };\n}\n\nexport function traverseValue(inputValue: any,\n                              property: Property,\n                              operation: (value: any, property: Property) => any): any {\n\n    let value;\n    if (property.dataType === \"map\" && property.properties) {\n        value = traverseValues(inputValue, property.properties as Properties, operation);\n    } else if (property.dataType === \"array\") {\n        if (property.of && Array.isArray(inputValue)) {\n            value = inputValue.map((e) => traverseValue(e, property.of as Property, operation));\n        } else if (property.oneOf && Array.isArray(inputValue)) {\n            const typeField = property.oneOf!.typeField ?? \"type\";\n            const valueField = property.oneOf!.valueField ?? \"value\";\n            value = inputValue.map((e) => {\n                if (e === null) return null;\n                if (typeof e !== \"object\") return e;\n                const type = e[typeField];\n                const childProperty = property.oneOf!.properties[type];\n                if (!type || !childProperty) return e;\n                return {\n                    [typeField]: type,\n                    [valueField]: traverseValue(e[valueField], childProperty, operation)\n                };\n            });\n        } else {\n            value = inputValue;\n        }\n    } else {\n        value = operation(inputValue, property);\n    }\n\n    return value;\n}\n\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n    AuthController,\n    ConfigurationPersistence,\n    DataSource,\n    EntityCollection,\n    EntityCollectionResolver,\n    EntitySchema,\n    EntitySchemaResolver,\n    EntitySchemaResolverProps,\n    Locale,\n    Navigation,\n    NavigationBuilder,\n    NavigationContext,\n    PartialEntityCollection,\n    PartialEntitySchema,\n    PartialProperties,\n    SchemaOverrideHandler,\n    StorageSource,\n    User\n} from \"../../models\";\nimport {\n    getCollectionByPath,\n    removeInitialAndTrailingSlashes\n} from \"../util/navigation_utils\";\nimport { getValueInPath, mergeDeep } from \"../util/objects\";\nimport { computeProperties } from \"../utils\";\n\nexport function useBuildNavigationContext<UserType>({\n                                                        basePath,\n                                                        baseCollectionPath,\n                                                        authController,\n                                                        navigationOrBuilder,\n                                                        schemaOverrideHandler,\n                                                        dateTimeFormat,\n                                                        locale,\n                                                        dataSource,\n                                                        storageSource,\n                                                        userConfigPersistence\n                                                    }: {\n    basePath: string,\n    baseCollectionPath: string,\n    authController: AuthController<UserType>;\n    navigationOrBuilder: Navigation | NavigationBuilder<UserType> | EntityCollection[];\n    schemaOverrideHandler: SchemaOverrideHandler | undefined;\n    dateTimeFormat?: string;\n    locale?: Locale;\n    dataSource: DataSource;\n    storageSource: StorageSource;\n    userConfigPersistence?: ConfigurationPersistence;\n}): NavigationContext {\n\n    const [navigation, setNavigation] = useState<Navigation | undefined>(undefined);\n    const [navigationLoading, setNavigationLoading] = useState<boolean>(false);\n    const [navigationLoadingError, setNavigationLoadingError] = useState<Error | undefined>(undefined);\n\n    const schemaConfigRecord = useRef<Record<string, Partial<EntityCollectionResolver> & { overrideSchemaRegistry?: boolean }>>({});\n    const cleanBasePath = removeInitialAndTrailingSlashes(basePath);\n    const cleanBaseCollectionPath = removeInitialAndTrailingSlashes(baseCollectionPath);\n\n    const homeUrl = cleanBasePath ? `/${cleanBasePath}` : \"/\";\n\n    const fullCollectionPath = cleanBasePath ? `/${cleanBasePath}/${cleanBaseCollectionPath}` : `/${cleanBaseCollectionPath}`;\n\n    const initialised = navigation?.collections !== undefined;\n\n    useEffect(() => {\n        if (!authController.canAccessMainView) {\n            return;\n        }\n        setNavigationLoading(true);\n        getNavigation({\n            navigationOrCollections: navigationOrBuilder,\n            user: authController.user,\n            authController,\n            dateTimeFormat,\n            locale,\n            dataSource,\n            storageSource\n        }).then((result: Navigation) => {\n            setNavigation(result);\n            setNavigationLoading(false);\n        }).catch(setNavigationLoadingError);\n    }, [authController.user, authController.canAccessMainView, navigationOrBuilder, authController, dateTimeFormat, locale, dataSource, storageSource]);\n\n\n    const getSchemaOverride = useCallback(<M extends any>(path: string): PartialEntitySchema<M> | undefined => {\n        if (!userConfigPersistence)\n            return undefined\n        const collectionOverride = userConfigPersistence.getCollectionConfig<M>(path);\n        return collectionOverride?.schema;\n    }, [userConfigPersistence]);\n\n    const buildSchemaResolver = useCallback(<M extends { [Key: string]: any } = any>({\n                                                                                         schema,\n                                                                                         path\n                                                                                     }: { schema: EntitySchema<M>, path: string }): EntitySchemaResolver<M> =>\n        ({\n             entityId,\n             values,\n             previousValues\n         }: EntitySchemaResolverProps<M>) => {\n\n            const schemaOverride = getSchemaOverride<M>(path);\n            const storedProperties: PartialProperties<M> | undefined = getValueInPath(schemaOverride, \"properties\");\n\n            const properties = computeProperties({\n                propertiesOrBuilder: schema.properties,\n                path,\n                entityId,\n                values: values ?? schema.defaultValues,\n                previousValues\n            });\n\n        return {\n            ...schema,\n            properties: mergeDeep(properties, storedProperties),\n            originalSchema: schema\n        };\n    }, [getSchemaOverride]);\n\n    const getCollectionOverride = useCallback(<M extends any>(path: string): PartialEntityCollection<M> | undefined => {\n        if (!userConfigPersistence)\n            return undefined\n        const dynamicCollectionConfig = { ...userConfigPersistence.getCollectionConfig<M>(path) };\n        delete dynamicCollectionConfig.schema;\n        return dynamicCollectionConfig;\n    }, [userConfigPersistence]);\n\n\n    const getCollectionResolver = useCallback(<M extends { [Key: string]: any }>(path: string, entityId?: string, collection?: EntityCollection<M>): EntityCollectionResolver<M> => {\n\n        const collections = navigation?.collections;\n\n        const baseCollection = collection ?? (collections && getCollectionByPath<M>(removeInitialAndTrailingSlashes(path), collections));\n\n        const collectionOverride = getCollectionOverride(path);\n\n        console.log(\"baseCollection11\", baseCollection)\n        console.log(\"collectionOverride11\", collectionOverride)\n        const resolvedCollection = baseCollection ? mergeDeep(baseCollection, collectionOverride) : undefined;\n\n        const sidePanelKey = getSidePanelKey(path, entityId);\n\n        let result: Partial<EntityCollectionResolver> = {};\n\n        const overriddenProps = schemaConfigRecord.current[sidePanelKey];\n        const resolvedProps: Partial<EntityCollectionResolver> | undefined = schemaOverrideHandler && schemaOverrideHandler({\n            entityId,\n            path: removeInitialAndTrailingSlashes(path)\n        });\n\n        if (resolvedProps)\n            result = resolvedProps;\n\n        if (overriddenProps) {\n            // override schema resolver default to true\n            const shouldOverrideRegistry = overriddenProps.overrideSchemaRegistry === undefined || overriddenProps.overrideSchemaRegistry;\n            if (shouldOverrideRegistry)\n                result = {\n                    ...overriddenProps,\n                    permissions: result.permissions || overriddenProps.permissions,\n                    schemaResolver: result.schemaResolver || overriddenProps.schemaResolver,\n                    subcollections: result.subcollections || overriddenProps.subcollections,\n                    callbacks: result.callbacks || overriddenProps.callbacks\n                };\n            else\n                result = {\n                    ...result,\n                    permissions: overriddenProps.permissions ?? result.permissions,\n                    schemaResolver: overriddenProps.schemaResolver ?? result.schemaResolver,\n                    subcollections: overriddenProps.subcollections ?? result.subcollections,\n                    callbacks: overriddenProps.callbacks ?? result.callbacks\n                };\n\n        }\n        console.log(\"resolvedCollection3\", resolvedCollection)\n        if (resolvedCollection) {\n            const schema = resolvedCollection.schema;\n            const subcollections = resolvedCollection.subcollections;\n            const callbacks = resolvedCollection.callbacks;\n            const permissions = resolvedCollection.permissions;\n            result = {\n                ...result,\n                schemaResolver: result.schemaResolver ?? buildSchemaResolver({\n                    schema,\n                    path\n                }),\n                subcollections: result.subcollections ?? subcollections,\n                callbacks: result.callbacks ?? callbacks,\n                permissions: result.permissions ?? permissions\n            };\n        }\n        console.log(\"res11\", result)\n        if (result && Object.keys(result).length) {\n            if (!result.schemaResolver) {\n                if (!result.schema)\n                    throw Error(`Not able to resolve schema for ${sidePanelKey}`);\n                result.schemaResolver = buildSchemaResolver({\n                    schema: result.schema,\n                    path\n                });\n            }\n        }\n\n        return { ...resolvedCollection, ...(result as EntityCollectionResolver<M>) };\n\n    }, [navigation?.collections, getCollectionOverride, schemaOverrideHandler, buildSchemaResolver]);\n\n    const setOverride = useCallback(({\n                                         path,\n                                         entityId,\n                                         schemaConfig,\n                                         overrideSchemaRegistry\n                                     }: {\n                                         path: string,\n                                         entityId?: string,\n                                         schemaConfig?: Partial<EntityCollectionResolver>\n                                         overrideSchemaRegistry?: boolean\n                                     }\n    ) => {\n\n        const key = getSidePanelKey(path, entityId);\n        if (!schemaConfig) {\n            delete schemaConfigRecord.current[key];\n            return undefined;\n        } else {\n\n            schemaConfigRecord.current[key] = {\n                ...schemaConfig,\n                overrideSchemaRegistry\n            };\n            return key;\n        }\n    }, []);\n\n    const removeAllOverridesExcept = useCallback((entityRefs: {\n        path: string, entityId?: string\n    }[]) => {\n        const keys = entityRefs.map(({\n                                         path,\n                                         entityId\n                                     }) => getSidePanelKey(path, entityId));\n        Object.keys(schemaConfigRecord.current).forEach((currentKey) => {\n            if (!keys.includes(currentKey))\n                delete schemaConfigRecord.current[currentKey];\n        });\n    }, []);\n\n    const isUrlCollectionPath = useCallback(\n        (path: string): boolean => removeInitialAndTrailingSlashes(path + \"/\").startsWith(removeInitialAndTrailingSlashes(fullCollectionPath) + \"/\"),\n        [fullCollectionPath]);\n\n    const urlPathToDataPath = useCallback((path: string): string => {\n        if (path.startsWith(fullCollectionPath))\n            return path.replace(fullCollectionPath, \"\");\n        throw Error(\"Expected path starting with \" + fullCollectionPath);\n    }, [fullCollectionPath]);\n\n    const buildUrlCollectionPath = useCallback((path: string): string => `${baseCollectionPath}/${removeInitialAndTrailingSlashes(path)}`,\n        [baseCollectionPath]);\n\n    const buildCMSUrlPath = useCallback((path: string): string => `/${removeInitialAndTrailingSlashes(path)}`,\n        []);\n\n    const onCollectionModifiedForUser = useCallback(<M extends any>(path: string, partialCollection: PartialEntityCollection<M>) => {\n        if (userConfigPersistence) {\n            const currentStoredConfig = userConfigPersistence.getCollectionConfig(path);\n            userConfigPersistence.onCollectionModified(path, mergeDeep(currentStoredConfig, partialCollection));\n        }\n    }, [userConfigPersistence]);\n\n    return {\n        navigation,\n        loading: navigationLoading,\n        navigationLoadingError,\n        homeUrl,\n        basePath,\n        baseCollectionPath,\n        onCollectionModifiedForUser,\n        initialised,\n        getCollectionResolver,\n        setOverride,\n        removeAllOverridesExcept,\n        isUrlCollectionPath,\n        urlPathToDataPath,\n        buildUrlCollectionPath,\n        buildCMSUrlPath\n    };\n}\n\nconst getNavigation = async <UserType extends any>({\n                                                       navigationOrCollections,\n                                                       user,\n                                                       authController,\n                                                       dateTimeFormat,\n                                                       locale,\n                                                       dataSource,\n                                                       storageSource\n                                                   }:\n                                                       {\n                                                           navigationOrCollections: Navigation | NavigationBuilder<UserType> | EntityCollection[],\n                                                           user: User | null,\n                                                           authController: AuthController<UserType>,\n                                                           dateTimeFormat?: string,\n                                                           locale?: Locale,\n                                                           dataSource: DataSource,\n                                                           storageSource: StorageSource\n                                                       }\n): Promise<Navigation> => {\n\n    if (Array.isArray(navigationOrCollections)) {\n        return {\n            collections: navigationOrCollections\n        };\n    } else if (typeof navigationOrCollections === \"function\") {\n        return navigationOrCollections({\n            user,\n            authController,\n            dateTimeFormat,\n            locale,\n            dataSource,\n            storageSource\n        });\n    } else {\n        return navigationOrCollections;\n    }\n};\n\n\nexport function getSidePanelKey(path: string, entityId?: string) {\n    if (entityId)\n        return `${removeInitialAndTrailingSlashes(path)}/${removeInitialAndTrailingSlashes(entityId)}`;\n    else\n        return removeInitialAndTrailingSlashes(path);\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n    AuthController,\n    AuthDelegate,\n    Authenticator,\n    DataSource,\n    Locale,\n    StorageSource,\n    User\n} from \"../../models\";\n\nexport function useBuildAuthController<UserType>({\n                                           authDelegate,\n                                           authentication,\n                                           dateTimeFormat,\n                                           locale,\n                                           dataSource,\n                                           storageSource\n                                       }: {\n    authDelegate: AuthDelegate,\n    authentication?: boolean | Authenticator<UserType>,\n    dateTimeFormat?: string;\n    locale?: Locale;\n    dataSource: DataSource;\n    storageSource: StorageSource;\n}): AuthController<UserType> {\n\n    const [user, setUser] = useState<User | null>(null);\n    const [authLoading, setAuthLoading] = useState<boolean>(false);\n    const [notAllowedError, setNotAllowedError] = useState<any>(false);\n    const [extra, setExtra] = useState<any>();\n\n    const loginSkipped = authDelegate.loginSkipped;\n\n    const authenticationEnabled = authentication === undefined || !!authentication;\n    const canAccessMainView = (!authenticationEnabled || Boolean(user) || Boolean(loginSkipped)) && !notAllowedError;\n\n    const authController: AuthController<UserType> = useMemo(() => ({\n        user,\n        loginSkipped,\n        canAccessMainView,\n        initialLoading: authDelegate.initialLoading ?? false,\n        authLoading: authLoading,\n        notAllowedError,\n        signOut: authDelegate.signOut,\n        extra,\n        setExtra,\n        authDelegate\n    }), [authDelegate, authLoading, canAccessMainView, extra, loginSkipped, notAllowedError, user]);\n\n    const checkAuthentication = useCallback(async () => {\n        const delegateUser = authDelegate.user;\n        if (authentication instanceof Function && delegateUser) {\n            setAuthLoading(true);\n            try {\n                const allowed = await authentication({\n                    user: delegateUser,\n                    authController,\n                    dateTimeFormat,\n                    locale,\n                    dataSource,\n                    storageSource\n                });\n                if (allowed)\n                    setUser(delegateUser);\n                else\n                    setNotAllowedError(true);\n            } catch (e) {\n                setNotAllowedError(e);\n                authDelegate.signOut();\n            }\n            setAuthLoading(false);\n        } else {\n            setUser(delegateUser);\n        }\n    }, [authDelegate.user]);\n\n    useEffect(() => {\n        checkAuthentication();\n    }, [authDelegate.user, checkAuthentication]);\n\n\n    return authController;\n}\n","import { PartialEntityCollection } from \"../../models\";\nimport { ConfigurationPersistence } from \"../../models/config_persistence\";\n\n/**\n * Remove the entity ids from a given path\n * `products/B44RG6APH/locales` => `products/locales`\n * @param path\n */\nfunction stripCollectionPath(path: string): string {\n    return path\n        .split(\"/\")\n        .filter((e, i) => i % 2 === 0)\n        .reduce((a, b) => `${a}/${b}`);\n}\n\nexport function useBuildStorageConfigurationPersistence(): ConfigurationPersistence {\n    function saveStorageCollectionConfig<M>(path: string, data: PartialEntityCollection<M>) {\n        const storageKey = `collection_config_${stripCollectionPath(path)}`;\n        localStorage.setItem(storageKey, JSON.stringify(data));\n    }\n\n    function getStorageCollectionConfig<M>(path: string): PartialEntityCollection<M> {\n        const storageKey = `collection_config_${stripCollectionPath(path)}`;\n        const item = localStorage.getItem(storageKey);\n        return item ? JSON.parse(item) : {};\n    }\n\n    return {\n        onCollectionModified: saveStorageCollectionConfig,\n        getCollectionConfig: getStorageCollectionConfig\n    }\n}\n\n\n","import React from \"react\";\n\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport * as locales from \"date-fns/locale\";\n\nimport {\n    AuthDelegate,\n    Authenticator,\n    DataSource,\n    EntityCollection,\n    EntityLinkBuilder,\n    FireCMSContext,\n    Locale,\n    Navigation,\n    NavigationBuilder,\n    SchemaOverrideHandler,\n    StorageSource\n} from \"../models\";\nimport { SnackbarContext, SnackbarProvider } from \"./contexts/SnackbarContext\";\nimport { FireCMSContextProvider } from \"./contexts/FireCMSContext\";\nimport { BreadcrumbsProvider } from \"./contexts/BreacrumbsContext\";\nimport { ModeProvider, ModeStateContext } from \"./contexts/ModeState\";\nimport { useBuildSideEntityController } from \"./internal/useBuildSideEntityController\";\nimport { useBuildNavigationContext } from \"./internal/useBuildNavigationContext\";\nimport { useBuildAuthController } from \"./internal/useBuildAuthController\";\nimport { useBuildStorageConfigurationPersistence } from \"./util/storage\";\n\nconst DEFAULT_COLLECTION_PATH = \"/c\";\n\n/**\n * @category Core\n */\nexport interface FireCMSProps<UserType> {\n\n    /**\n     * Use this function to return the components you want to render under\n     * FireCMS\n     * @param props\n     */\n    children: (props: {\n        /**\n         * Context of the app\n         */\n        context: FireCMSContext;\n        /**\n         * Main color scheme\n         */\n        mode: \"dark\" | \"light\";\n        /**\n         * Is one of the main processes, auth and navigation resolving, currently\n         * loading. If you are building your custom implementation, you probably\n         * want to show a loading indicator if this flag is `true`\n         */\n        loading: boolean;\n    }) => React.ReactNode;\n\n    /**\n     * Use this prop to specify the views that will be generated in the CMS.\n     * You usually will want to create a `Navigation` object that includes\n     * collection views where you specify the path and the schema.\n     * Additionally you can add custom views to the root navigation.\n     * In you need to customize the navigation based on the logged user you\n     * can use a `NavigationBuilder`\n     */\n    navigation: Navigation | NavigationBuilder<UserType> | EntityCollection[];\n\n    /**\n     * Do the users need to log in to access the CMS.\n     * You can specify an Authenticator function to discriminate which users can\n     * access the CMS or not.\n     * If not specified, authentication is enabled but no user restrictions\n     * apply.\n     */\n    authentication?: boolean | Authenticator<UserType>;\n\n    /**\n     * Used to override schemas based on the collection path and entityId.\n     * This resolver allows to override the schema for specific entities, or\n     * specific collections, app wide.\n     *\n     * This overrides schemas **all through the app.**\n     *\n     * You can also override schemas in place, when using {@link useSideEntityController}\n     */\n    schemaOverrideHandler?: SchemaOverrideHandler;\n\n    /**\n     * Format of the dates in the CMS.\n     * Defaults to 'MMMM dd, yyyy, HH:mm:ss'\n     */\n    dateTimeFormat?: string;\n\n    /**\n     * Locale of the CMS, currently only affecting dates\n     */\n    locale?: Locale;\n\n    /**\n     * Connector to your database\n     */\n    dataSource: DataSource;\n\n    /**\n     * Connector to your file upload/fetch implementation\n     */\n    storageSource: StorageSource;\n\n    /**\n     * Delegate for implementing your auth operations.\n     * @see useFirebaseAuthDelegate\n     */\n    authDelegate: AuthDelegate;\n\n    /**\n     * Optional link builder you can add to generate a button in your entity forms.\n     * The function must return a URL that gets opened when the button is clicked\n     */\n    entityLinkBuilder?: EntityLinkBuilder;\n\n    /**\n     * Default path under the navigation routes of the CMS will be created\n     */\n    basePath?: string;\n\n    /**\n     * Default path under the collection routes of the CMS will be created\n     */\n    baseCollectionPath?: string;\n\n}\n\n\n/**\n * If you are using independent components of the CMS\n * you need to wrap them with this main component, so the internal hooks work.\n *\n * @constructor\n * @category Core\n */\nexport function FireCMS<UserType>(props: FireCMSProps<UserType>) {\n\n    const {\n        children,\n        navigation: navigationOrBuilder,\n        entityLinkBuilder,\n        authentication,\n        dateTimeFormat,\n        locale,\n        authDelegate,\n        schemaOverrideHandler,\n        storageSource,\n        dataSource,\n        basePath,\n        baseCollectionPath\n    } = props;\n\n    const usedBasePath = basePath ?? \"/\";\n    const usedBasedCollectionPath = baseCollectionPath ?? DEFAULT_COLLECTION_PATH;\n\n    const dateUtilsLocale = locale ? locales[locale] : undefined;\n    const authController = useBuildAuthController({\n        authDelegate,\n        authentication,\n        dateTimeFormat,\n        locale,\n        dataSource,\n        storageSource\n    });\n\n    const userConfigPersistence = useBuildStorageConfigurationPersistence();\n\n    const navigationContext = useBuildNavigationContext({\n        basePath: usedBasePath,\n        baseCollectionPath: usedBasedCollectionPath,\n        authController,\n        navigationOrBuilder,\n        dateTimeFormat,\n        locale,\n        dataSource,\n        storageSource,\n        schemaOverrideHandler,\n        userConfigPersistence\n    });\n\n    const sideEntityController = useBuildSideEntityController(navigationContext);\n\n    const loading = authController.authLoading || authController.initialLoading || navigationContext.loading;\n\n    if (navigationContext.navigationLoadingError) {\n        return (\n            <div>\n                <p>There was an error while loading your navigation config</p>\n                <p>{navigationContext.navigationLoadingError}</p>\n            </div>\n        );\n    }\n\n    return (\n        <ModeProvider>\n            <SnackbarProvider>\n                <SnackbarContext.Consumer>\n                    {(snackbarController) => {\n\n                        const context: FireCMSContext = {\n                            authController,\n                            sideEntityController,\n                            entityLinkBuilder,\n                            dateTimeFormat,\n                            locale,\n                            navigationContext,\n                            dataSource,\n                            storageSource,\n                            snackbarController\n                        };\n\n                        return (\n                            <FireCMSContextProvider {...context} >\n                                <BreadcrumbsProvider>\n                                    <LocalizationProvider\n                                        dateAdapter={AdapterDateFns}\n                                        utils={DateFnsUtils}\n                                        locale={dateUtilsLocale}>\n                                            <ModeStateContext.Consumer>\n                                                {({ mode }) => {\n                                                    return children({\n                                                        context,\n                                                        mode,\n                                                        loading\n                                                    });\n                                                }}\n                                            </ModeStateContext.Consumer>\n                                    </LocalizationProvider>\n                                </BreadcrumbsProvider>\n                            </FireCMSContextProvider>\n                        );\n                    }}\n                </SnackbarContext.Consumer>\n            </SnackbarProvider>\n        </ModeProvider>\n    );\n\n}\n\n\n\n\n\n\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport { Theme, Tooltip } from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        flexCenter: {\n            display: \"flex\",\n            alignItems: \"center\"\n        },\n        smallMargin: {\n            margin: theme.spacing(1)\n        },\n        text: {\n            paddingLeft: theme.spacing(2)\n        }\n    })\n);\n\n/**\n * @category Components\n */\nexport interface ErrorViewProps {\n    error: string,\n    tooltip?: string\n}\n\n/**\n * Generic error view. Displayed for example when an unexpected value comes\n * from the datasource in a collection view.\n * @param error\n * @param tooltip\n * @constructor\n * @category Components\n */\nexport function ErrorView({\n                              error,\n                              tooltip\n                          }: ErrorViewProps): React.ReactElement {\n    const classes = useStyles();\n    const body = (\n        <div\n            className={clsx(classes.flexCenter, classes.smallMargin)}>\n            <ErrorIcon fontSize={\"small\"} color={\"error\"}/>\n            <div className={classes.text}>{error}</div>\n        </div>\n    );\n\n    if (tooltip) {\n        return (\n            <Tooltip title={tooltip}>\n                {body}\n            </Tooltip>\n        );\n    }\n    return body;\n}\n","import { Skeleton } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport interface AsyncPreviewComponentProps {\n\n    builder: Promise<React.ReactNode>;\n\n}\n\nfunction AsyncPreviewComponentInternal<M extends { [Key: string]: any }>(\n    {\n        builder\n    }: AsyncPreviewComponentProps): JSX.Element {\n\n    const [loading, setLoading] = useState<boolean>(true);\n    const [result, setResult] = useState<React.ReactNode>(null);\n\n    useEffect(() => {\n        let unmounted = false;\n        builder\n            .then((res) => {\n                if (!unmounted) {\n                    setLoading(false);\n                    setResult(res);\n                }\n            })\n            .catch(error => {\n                setLoading(false);\n                console.error(error);\n            });\n        return () => {\n            unmounted = true;\n        };\n    }, [builder]);\n\n    if (loading)\n        return <Skeleton variant=\"text\"/>;\n\n    return <React.Fragment>{result}</React.Fragment>;\n\n}\n\n/**\n * Utility component used to render the result of an async execution.\n * It shows a loading indicator while at it.\n *\n * @category Preview components\n */\nexport const AsyncPreviewComponent = React.memo(AsyncPreviewComponentInternal) as React.FunctionComponent<AsyncPreviewComponentProps>;\n","import { Box, Typography } from \"@mui/material\";\nimport React, { ErrorInfo } from \"react\";\n\nimport ErrorIcon from \"@mui/icons-material/Error\";\n\n\nexport class ErrorBoundary extends React.Component<{}, { hasError: boolean }> {\n    constructor(props: any) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    // eslint-disable-next-line node/handle-callback-err\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true };\n    }\n\n    // eslint-disable-next-line node/handle-callback-err\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        // logErrorToMyService(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <Box\n                    display={\"flex\"}\n                    flexDirection={\"column\"}\n                    m={0.5}>\n                    <Box\n                        display={\"flex\"}\n                        alignItems={\"center\"}\n                        m={0.5}>\n                        <ErrorIcon color={\"error\"} fontSize={\"small\"}/>\n                        <Box marginLeft={1}>Error</Box>\n                    </Box>\n                    <Typography variant={\"caption\"}>\n                        See the error in the console\n                    </Typography>\n                </Box>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n","export function hashString(str: string): number {\n    let hash = 0; let i; let chr;\n    for (i = 0; i < str.length; i++) {\n        chr = str.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n}\n","import { hashString } from \"./hash\";\nimport { ChipColor } from \"../../models\";\n\nexport interface ChipColorSchema {\n    color: string;\n    text: string;\n}\n\nexport const CHIP_COLORS: Record<string, ChipColorSchema> = {\n    blueLighter: { color: \"#cfdfff\", text: \"#102046\" },\n    cyanLighter: { color: \"#d0f0fd\", text: \"#04283f\" },\n    tealLighter: { color: \"#c2f5e9\", text: \"#012524\" },\n    greenLighter: { color: \"#d1f7c4\", text: \"#0b1d05\" },\n    yellowLighter: { color: \"#ffeab6\", text: \"#3b2501\" },\n    orangeLighter: { color: \"#fee2d5\", text: \"#6b2613\" },\n    redLighter: { color: \"#ffdce5\", text: \"#4c0c1c\" },\n    pinkLighter: { color: \"#ffdaf6\", text: \"#400832\" },\n    purpleLighter: { color: \"#ede2fe\", text: \"#280b42\" },\n    grayLighter: { color: \"#eee\", text: \"#040404\" },\n\n    blueLight: { color: \"#9cc7ff\", text: \"#102046\" },\n    cyanLight: { color: \"#77d1f3\", text: \"#04283f\" },\n    tealLight: { color: \"#72ddc3\", text: \"#012524\" },\n    greenLight: { color: \"#93e088\", text: \"#0b1d05\" },\n    yellowLight: { color: \"#ffd66e\", text: \"#3b2501\" },\n    orangeLight: { color: \"#ffa981\", text: \"#6b2613\" },\n    redLight: { color: \"#ff9eb7\", text: \"#4c0c1c\" },\n    pinkLight: { color: \"#f99de2\", text: \"#400832\" },\n    purpleLight: { color: \"#cdb0ff\", text: \"#280b42\" },\n    grayLight: { color: \"#ccc\", text: \"#040404\" },\n\n    blueDark: { color: \"#2d7ff9\", text: \"#fff\" },\n    cyanDark: { color: \"#18bfff\", text: \"#fff\" },\n    tealDark: { color: \"#20d9d2\", text: \"#fff\" },\n    greenDark: { color: \"#20c933\", text: \"#fff\" },\n    yellowDark: { color: \"#fcb400\", text: \"#fff\" },\n    orangeDark: { color: \"#ff6f2c\", text: \"#fff\" },\n    redDark: { color: \"#f82b60\", text: \"#fff\" },\n    pinkDark: { color: \"#ff08c2\", text: \"#fff\" },\n    purpleDark: { color: \"#8b46ff\", text: \"#fff\" },\n    grayDark: { color: \"#666\", text: \"#fff\" },\n\n    blueDarker: { color: \"#2750ae\", text: \"#cfdfff\" },\n    cyanDarker: { color: \"#0b76b7\", text: \"#d0f0fd\" },\n    tealDarker: { color: \"#06a09b\", text: \"#c2f5e9\" },\n    greenDarker: { color: \"#338a17\", text: \"#d1f7c4\" },\n    yellowDarker: { color: \"#b87503\", text: \"#ffeab6\" },\n    orangeDarker: { color: \"#d74d26\", text: \"#fee2d5\" },\n    redDarker: { color: \"#ba1e45\", text: \"#ffdce5\" },\n    pinkDarker: { color: \"#b2158b\", text: \"#ffdaf6\" },\n    purpleDarker: { color: \"#6b1cb0\", text: \"#ede2fe\" },\n    grayDarker: { color: \"#444\", text: \"#eee\" }\n};\n\nexport function getColorSchemeForSeed(seed: string): ChipColorSchema {\n    const hash: number = hashString(seed);\n    const colorKeys = Object.keys(CHIP_COLORS);\n    const index = hash % colorKeys.length;\n    return CHIP_COLORS[colorKeys[index]];\n}\n\nexport function getColorSchemeForKey(key: ChipColor): ChipColorSchema {\n    return CHIP_COLORS[key];\n}\n\n","import { ChipColor, EnumValueConfig, EnumValues } from \"../../models\";\n\nexport function enumToObjectEntries(enumValues: EnumValues): [string | number, string | EnumValueConfig][] {\n    return enumValues instanceof Map\n        ? Array.from(enumValues.entries())\n        : Object.entries<string | EnumValueConfig>(enumValues);\n}\n\nexport function getLabelOrConfigFrom(enumValues: EnumValues, key: string | number): string | EnumValueConfig | undefined {\n    return enumValues instanceof Map\n        ? enumValues.get(key)\n        : enumValues[key];\n}\n\nexport function getColorSchemaKey(enumValues: EnumValues, key: string | number): ChipColor | undefined {\n    const labelOrConfig = getLabelOrConfigFrom(enumValues, key);\n    if (typeof labelOrConfig === \"object\" && \"color\" in labelOrConfig) {\n        return labelOrConfig.color;\n    }\n    return undefined;\n}\n\nexport function isEnumValueDisabled(labelOrConfig?: string | EnumValueConfig) {\n    return typeof labelOrConfig === \"object\" && (labelOrConfig as EnumValueConfig).disabled;\n}\n\n\nexport function buildEnumLabel(\n    labelOrConfig?: string | EnumValueConfig\n): string | undefined {\n    if (labelOrConfig === undefined)\n        return undefined;\n    if (typeof labelOrConfig === \"object\") {\n        return labelOrConfig.label;\n    } else {\n        return labelOrConfig;\n    }\n}\n\n","import { Chip, Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React, { useMemo } from \"react\";\nimport {\n    ChipColorSchema,\n    getColorSchemeForKey,\n    getColorSchemeForSeed\n} from \"../../core/util/chip_utils\";\nimport { ChipColor, EnumValues } from \"../../models\";\nimport {\n    buildEnumLabel,\n    getColorSchemaKey,\n    getLabelOrConfigFrom\n} from \"../../core/util/enums\";\n\nconst useStyles = makeStyles<Theme, { schema: ChipColorSchema, error: any }>((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: \"100%\",\n            backgroundColor: ({\n                                  schema,\n                                  error\n                              }) => error ? \"#eee\" : schema.color\n        },\n        label: {\n            color: ({ schema, error }) => error ? \"red\" : schema.text,\n            fontWeight: theme.typography.fontWeightRegular\n        }\n    })\n);\n\n\ninterface EnumValuesChipProps {\n    enumValues: EnumValues;\n    enumKey: any;\n    small: boolean;\n}\n\n/**\n * @category Preview components\n */\nexport function EnumValuesChip({\n                                   enumValues,\n                                   enumKey,\n                                   small\n                               }: EnumValuesChipProps) {\n    const enumValue = enumKey !== undefined ? getLabelOrConfigFrom(enumValues, enumKey.toString()) : undefined;\n    const label = buildEnumLabel(enumValue);\n    const colorSchemaKey = getColorSchemaKey(enumValues, enumKey.toString());\n    return <CustomChip\n        colorSeed={`${enumKey}`}\n        colorSchemaKey={colorSchemaKey}\n        label={label !== undefined ? label : enumKey}\n        error={!label}\n        outlined={false}\n        small={small}/>;\n}\n\n\ninterface EnumChipProps {\n    colorSeed: string;\n    colorSchemaKey?: ChipColor;\n    label: string;\n    error?: boolean;\n    outlined?: boolean;\n    small: boolean;\n}\n\n/**\n * @category Preview components\n */\nexport function CustomChip({\n                               colorSeed,\n                               label,\n                               colorSchemaKey,\n                               error,\n                               outlined,\n                               small\n                           }: EnumChipProps) {\n\n    const schema = useMemo(() =>\n        colorSchemaKey\n            ? getColorSchemeForKey(colorSchemaKey)\n            : getColorSchemeForSeed(colorSeed), [colorSeed, colorSchemaKey]);\n    const classes = useStyles({ schema, error });\n\n    return (\n        <Chip\n            classes={{\n                root: classes.root,\n                label: classes.label\n            }}\n            size={small ? \"small\" : \"medium\"}\n            variant={outlined ? \"outlined\" : \"filled\"}\n            label={label}\n        />\n    );\n}\n","import React from \"react\";\n\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { CustomChip, EnumValuesChip } from \"./CustomChip\";\nimport { PreviewComponentProps } from \"../internal\";\n\n/**\n * @category Preview components\n */\nexport function StringPreview({\n                                  name,\n                                  value,\n                                  property,\n                                  size\n                              }: PreviewComponentProps<string>): React.ReactElement {\n\n    if (property.config?.enumValues) {\n        const enumKey = value;\n        const enumValues = property.config.enumValues;\n        return <EnumValuesChip\n            enumKey={enumKey}\n            enumValues={enumValues}\n            small={size !== \"regular\"}/>;\n    } else if (property.config?.previewAsTag) {\n        return (\n            <ErrorBoundary>\n                <CustomChip\n                    colorSeed={name ?? \"\"}\n                    label={value}\n                    small={size !== \"regular\"}\n                />\n            </ErrorBoundary>);\n    } else {\n        return <>\n            {value && (value.includes(\"\\n\")\n                ? value.split(\"\\n\").map((str, index) =>\n                    <div key={`string_preview_${index}`}>{str}</div>)\n                : value)}\n        </>;\n    }\n}\n","import React from \"react\";\nimport { StringProperty } from \"../../models\";\nimport { PreviewComponentProps } from \"../internal\";\n\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { StringPreview } from \"./StringPreview\";\nimport { Theme } from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        array: {\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        arrayWrap: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n        },\n        arrayItem: {\n            margin: theme.spacing(0.5)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayOfStringsPreview({\n                                          name,\n                                          value,\n                                          property,\n                                          size\n                                      }: PreviewComponentProps<string[]>) {\n\n    const classes = useStyles();\n\n    if (!property.of || property.dataType !== \"array\" || property.of.dataType !== \"string\")\n        throw Error(\"Picked wrong preview component ArrayOfStringsPreview\");\n\n    if (value && !Array.isArray(value)) {\n        return <div>{`Unexpected value: ${value}`}</div>;\n    }\n    const stringProperty = property.of as StringProperty;\n\n    return (\n        <div className={classes.array}>\n            {value &&\n            value.map((v, index) =>\n                <div className={classes.arrayItem}\n                     key={`preview_array_strings_${name}_${index}`}>\n                    <ErrorBoundary>\n                        <StringPreview name={name}\n                                       property={stringProperty}\n                                       value={v}\n                                       size={size}/>\n                    </ErrorBoundary>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { EnumValues } from \"../../models\";\n\nimport React from \"react\";\n\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { EnumValuesChip } from \"./CustomChip\";\nimport { Theme } from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        arrayWrap: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n        },\n        arrayItem: {\n            margin: theme.spacing(0.5)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayEnumPreview({\n                                     name,\n                                     value,\n                                     enumValues,\n                                     size\n                                 }: {\n    value: string[] | number[],\n    name: string | undefined,\n    enumValues: EnumValues,\n    size: \"regular\" | \"small\" | \"tiny\"\n}) {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.arrayWrap}>\n            {value &&\n            (value as any[]).map((enumKey, index) => {\n                    return (\n                        <div className={classes.arrayItem}\n                             key={`preview_array_ref_${name}_${index}`}>\n                            <ErrorBoundary>\n                                <EnumValuesChip\n                                    enumKey={enumKey}\n                                    enumValues={enumValues}\n                                    small={size !== \"regular\"}/>\n                            </ErrorBoundary>\n                        </div>\n                    );\n                }\n            )}\n        </div>\n    );\n}\n","import { PreviewComponentProps } from \"../internal\";\nimport { NumberProperty, StringProperty } from \"../../models\";\nimport { ArrayEnumPreview } from \"./ArrayEnumPreview\";\n\n/**\n * @category Preview components\n */\nexport function ArrayPropertyEnumPreview({\n                                             name,\n                                             value,\n                                             property,\n                                             size\n                                         }: PreviewComponentProps<string[] | number[]>) {\n\n    if (property.dataType !== \"array\")\n        throw Error(\"Picked wrong preview component ArrayEnumPreview\");\n\n    const ofProperty = property.of as StringProperty | NumberProperty;\n    if (!ofProperty.config?.enumValues)\n        throw Error(\"Picked wrong preview component ArrayEnumPreview\");\n\n    if (!value) return null;\n\n    const enumValues = ofProperty.config?.enumValues;\n\n    return <ArrayEnumPreview name={name}\n                             value={value}\n                             enumValues={enumValues}\n                             size={size}/>;\n}\n","import React from \"react\";\nimport { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { PreviewComponentProps } from \"../internal\";\n\n/**\n * @category Preview components\n */\nexport function BooleanPreview({\n                                   name,\n                                   value,\n                                   property,\n                                   size\n                               }: PreviewComponentProps<boolean>): React.ReactElement {\n\n    return value\n        ? <CheckBox color=\"secondary\"/>\n        : <CheckBoxOutlineBlank color=\"disabled\"/>;\n}\n","import React from \"react\";\n\nimport MarkdownPreview from \"@uiw/react-markdown-preview\";\n\ninterface MarkdownProps {\n    source: string\n}\n\n/**\n * @category Preview components\n */\nexport function Markdown({\n                             source\n                         }: MarkdownProps) {\n    return <MarkdownPreview source={typeof source === \"string\" ? source : \"\"}\n                            style={{\n                                fontSize: \"inherit\",\n                                lineHeight: \"inherit\",\n                                fontFamily: \"inherit\"\n                            }}\n                            components={{\n                                a: (props) => <a {...props}\n                                                 onClick={(e) => e.stopPropagation()}\n                                                 target=\"_blank\">{props.children}</a>\n                            }}\n    />;\n}\n\n","import React from \"react\";\nimport { Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n        root: {\n            borderRadius: \"9999px\",\n            backgroundColor: \"rgba(128,128,128,0.1)\",\n            width: \"18px\",\n            height: \"6px\",\n            display: \"inline-block\"\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function EmptyValue() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}/>\n    );\n}\n","import { CollectionSize } from \"../models\";\nimport { PreviewSize } from \"../preview\";\n\nexport const TINY_THUMBNAIL = 40;\nexport const SMALL_THUMBNAIL = 100;\nexport const REGULAR_THUMBNAIL = 200;\n\nexport function getThumbnailMeasure(size: PreviewSize): number {\n    if (size === \"tiny\")\n        return TINY_THUMBNAIL;\n    else if (size === \"small\")\n        return SMALL_THUMBNAIL;\n    else if (size === \"regular\")\n        return REGULAR_THUMBNAIL;\n    else throw Error(\"Thumbnail size not mapped\");\n}\n\nexport function getPreviewSizeFrom(size: CollectionSize): PreviewSize {\n    switch (size) {\n        case \"xs\":\n        case \"s\":\n            return \"tiny\";\n        case \"m\":\n            return \"small\";\n        case \"l\":\n        case \"xl\":\n            return \"regular\";\n        default:\n            throw Error(\"Missing mapping value in getPreviewSizeFrom\");\n    }\n}\n","import React, { CSSProperties, useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { IconButton, Theme, Tooltip } from \"@mui/material\";\nimport ContentPasteIcon from \"@mui/icons-material/ContentPaste\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nimport { PreviewSize } from \"../../preview\";\nimport { getThumbnailMeasure } from \"../util\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\n\nconst useStyles = makeStyles<Theme, { imageSize: number }>(theme => createStyles({\n        image: {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            borderRadius: \"4px\"\n        },\n        imageWrap: {\n            position: \"relative\",\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: ({ imageSize }) => imageSize,\n            height: ({ imageSize }) => imageSize\n        },\n        imageTiny: {\n            position: \"relative\",\n            objectFit: \"cover\",\n            width: ({ imageSize }) => imageSize,\n            height: ({ imageSize }) => imageSize,\n            borderRadius: \"4px\",\n            maxHeight: \"100%\"\n        },\n        copyIcon: {\n            borderRadius: \"9999px\",\n            position: \"absolute\",\n            bottom: -4,\n            right: 32,\n            backgroundColor: theme.palette.common.white\n        },\n        previewIcon: {\n            borderRadius: \"9999px\",\n            position: \"absolute\",\n            bottom: -4,\n            right: -4,\n            backgroundColor: theme.palette.common.white\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport interface ImagePreviewProps {\n    size: PreviewSize,\n    url: string\n}\n\n/**\n * @category Preview components\n */\nexport function ImagePreview({ size, url }: ImagePreviewProps) {\n\n    const [onHover, setOnHover] = useState(false);\n\n    const imageSize = useMemo(() => getThumbnailMeasure(size), [size]);\n    const classes = useStyles({ imageSize });\n\n    if (size === \"tiny\") {\n        return (\n            <img src={url}\n                 key={\"tiny_image_preview_\" + url}\n                 className={classes.imageTiny}/>\n        );\n    }\n\n    const imageStyle: CSSProperties =\n        {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            borderRadius: \"4px\"\n        };\n\n    return (\n        <div\n            className={classes.imageWrap}\n            key={\"image_preview_\" + url}\n            onMouseEnter={() => setOnHover(true)}\n            onMouseMove={() => setOnHover(true)}\n            onMouseLeave={() => setOnHover(false)}>\n\n            <img src={url}\n                 className={classes.image}\n                 style={imageStyle}/>\n\n            {onHover && (\n                <>\n                    <Tooltip title=\"Copy url to clipboard\">\n                        <div className={classes.copyIcon}>\n                            <IconButton\n                                size={\"small\"}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    navigator.clipboard.writeText(url);\n                                }}>\n                                <ContentPasteIcon htmlColor={\"#666\"} fontSize={\"small\"} />\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                    <Tooltip title=\"Open image in new tab\">\n                        <a\n                            className={classes.previewIcon}\n                            href={url}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\">\n                            <IconButton\n                                size={\"small\"}\n                                onClick={(e) => e.stopPropagation()}>\n                                <OpenInNewIcon htmlColor={\"#666\"} fontSize={\"small\"} />\n                            </IconButton>\n                        </a>\n                    </Tooltip>\n                </>\n            )}\n        </div>\n\n    );\n}\n","import React from \"react\";\nimport { ArrayProperty, MapProperty } from \"../../models\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\n\nimport { Table, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport { PreviewComponent, PreviewComponentProps } from \"../internal\";\n\n/**\n * @category Preview components\n */\nexport function ArrayOfMapsPreview({\n                                          name,\n                                          value,\n                                          property,\n                                          size\n                                      }: PreviewComponentProps<object[]>) {\n\n    if (property.dataType !== \"array\" || !property.of || property.of.dataType !== \"map\")\n        throw Error(\"Picked wrong preview component ArrayOfMapsPreview\");\n\n    const properties = ((property as ArrayProperty).of as MapProperty).properties;\n    if (!properties) {\n        throw Error(`You need to specify a 'properties' prop (or specify a custom field) in your map property ${name}`);\n    }\n    const values = value;\n    const previewProperties = ((property as ArrayProperty).of as MapProperty).previewProperties;\n\n    if (!values) return null;\n\n\n    let mapProperties = previewProperties;\n    if (!mapProperties || !mapProperties.length) {\n        mapProperties = Object.keys(properties);\n        if (size)\n            mapProperties = mapProperties.slice(0, 3);\n    }\n\n    return (\n        <Table size=\"small\">\n            <TableBody>\n                {values &&\n                values.map((v, index) => {\n                    return (\n                        <TableRow key={`table_${v}_${index}`}\n                                  sx={{\n                                      \"&:last-child th, &:last-child td\": {\n                                          borderBottom: 0\n                                      }\n                                  }}>\n                            {mapProperties && mapProperties.map(\n                                (key) => (\n                                    <TableCell\n                                        key={`table-cell-${key as string}`}\n                                        component=\"th\"\n                                    >\n                                        <ErrorBoundary>\n                                            <PreviewComponent\n                                                name={key as string}\n                                                value={(v as any)[key]}\n                                                property={properties[key as string]}\n                                                size={\"small\"}/>\n                                        </ErrorBoundary>\n                                    </TableCell>\n                                )\n                            )}\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n}\n","import React from \"react\";\n\nimport { EnumValuesChip } from \"./CustomChip\";\nimport { PreviewComponentProps } from \"../internal\";\n\n/**\n * @category Preview components\n */\nexport function NumberPreview({\n                                  name,\n                                  value,\n                                  property,\n                                  size\n                              }: PreviewComponentProps<number>): React.ReactElement {\n\n    if (property.config?.enumValues) {\n        const enumKey = value;\n        const enumValues = property.config.enumValues;\n        return <EnumValuesChip\n            enumKey={enumKey}\n            enumValues={enumValues}\n            small={size !== \"regular\"}/>;\n    } else {\n        return <>{value}</>;\n    }\n}\n","export const defaultDateFormat = \"MMMM dd, yyyy, HH:mm:ss\";\n","import { useContext } from \"react\";\nimport { FireCMSContextInstance } from \"../core/contexts/FireCMSContext\";\n\n/**\n * Hook to retrieve the {@link FireCMSContext}.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS` component.\n *\n * @see FireCMSContext\n * @category Hooks and utilities\n */\nexport const useFireCMSContext = () => useContext(FireCMSContextInstance);\n","import { DataSource } from \"../../models\";\nimport { useFireCMSContext } from \"../useFireCMSContext\";\n\n/**\n * Use this hook to get the datasource being used\n * @category Hooks and utilities\n */\nexport function useDataSource(): DataSource {\n    const context = useFireCMSContext();\n    return context.dataSource;\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Entity, EntitySchemaResolver, FilterValues } from \"../../models\";\nimport { useDataSource } from \"./useDataSource\";\n\n/**\n * @category Hooks and utilities\n */\nexport interface CollectionFetchProps<M extends { [Key: string]: any }> {\n\n    /**\n     * Absolute collection path\n     */\n    path: string;\n\n    /**\n     * Schema of the entity displayed by this collection\n     */\n    schemaResolver: EntitySchemaResolver<M>;\n\n    /**\n     * Number of entities to fetch\n     */\n    itemCount?: number;\n\n    /**\n     * List of entities that will be displayed on top, no matter the ordering.\n     * This is used for reference fields selection\n     */\n    entitiesDisplayedFirst?: Entity<M>[];\n\n    /**\n     * Filter the fetched data by the property\n     */\n    filterValues?: FilterValues<M>;\n\n    /**\n     * Sort the results by\n     */\n    sortBy?: [Extract<keyof M, string>, \"asc\" | \"desc\"];\n\n    /**\n     * Search string\n     */\n    searchString?: string;\n}\n\n/**\n * @category Hooks and utilities\n */\nexport interface CollectionFetchResult<M extends { [Key: string]: any }> {\n    data: Entity<M>[]\n    dataLoading: boolean,\n    noMoreToLoad: boolean,\n    dataLoadingError?: Error\n}\n\n/**\n * This hook is used to fetch collections using a given schema\n * @param path\n * @param schemaResolver\n * @param filterValues\n * @param sortBy\n * @param itemCount\n * @param searchString\n * @param entitiesDisplayedFirst\n * @category Hooks and utilities\n */\nexport function useCollectionFetch<M>(\n    {\n        path,\n        schemaResolver,\n        filterValues,\n        sortBy,\n        itemCount,\n        searchString,\n        entitiesDisplayedFirst\n    }: CollectionFetchProps<M>): CollectionFetchResult<M> {\n\n    const sortByProperty = sortBy ? sortBy[0] : undefined;\n    const currentSort = sortBy ? sortBy[1] : undefined;\n\n    const dataSource = useDataSource();\n    const initialEntities = useMemo(() => entitiesDisplayedFirst ? entitiesDisplayedFirst.filter(e => !!e.values) : [], [entitiesDisplayedFirst]);\n    const [data, setData] = useState<Entity<M>[]>(initialEntities);\n\n    const [dataLoading, setDataLoading] = useState<boolean>(false);\n    const [dataLoadingError, setDataLoadingError] = useState<Error | undefined>();\n    const [noMoreToLoad, setNoMoreToLoad] = useState<boolean>(false);\n\n    const updateData = useCallback((entities: Entity<M>[]) => {\n        if (!initialEntities) {\n            setData(entities);\n        } else {\n            const displayedFirstId = new Set(initialEntities.map((e) => e.id));\n            setData([...initialEntities, ...entities.filter((e) => !displayedFirstId.has(e.id))]);\n        }\n    }, [initialEntities]);\n\n    useEffect(() => {\n\n        setDataLoading(true);\n\n        const onEntitiesUpdate = (entities: Entity<M>[]) => {\n            setDataLoading(false);\n            setDataLoadingError(undefined);\n            updateData(entities);\n            setNoMoreToLoad(!itemCount || entities.length < itemCount);\n        };\n\n        const onError = (error: Error) => {\n            console.error(\"ERROR\", error);\n            setDataLoading(false);\n            setData([]);\n            setDataLoadingError(error);\n        };\n\n        if (dataSource.listenCollection) {\n            return dataSource.listenCollection<M>({\n                path: path,\n                schema: schemaResolver,\n                onUpdate: onEntitiesUpdate,\n                onError,\n                searchString,\n                filter: filterValues,\n                limit: itemCount,\n                startAfter: undefined,\n                orderBy: sortByProperty,\n                order: currentSort\n            });\n        } else {\n            dataSource.fetchCollection<M>({\n                path: path,\n                schema: schemaResolver,\n                searchString,\n                filter: filterValues,\n                limit: itemCount,\n                startAfter: undefined,\n                orderBy: sortByProperty,\n                order: currentSort\n            })\n                .then(onEntitiesUpdate)\n                .catch(onError);\n            return () => {\n            };\n        }\n    }, [path, itemCount, currentSort, sortByProperty, filterValues, searchString]);\n\n    return {\n        data,\n        dataLoading,\n        dataLoadingError,\n        noMoreToLoad\n    };\n\n}\n","import { useEffect, useState } from \"react\";\nimport { Entity, EntitySchema, EntitySchemaResolver } from \"../../models\";\nimport { useDataSource } from \"./useDataSource\";\n\n/**\n * @category Hooks and utilities\n */\nexport interface EntityFetchProps<M extends { [Key: string]: any }> {\n    path?: string;\n    entityId?: string;\n    schema?: EntitySchema<M> | EntitySchemaResolver<M>;\n    useCache?: boolean;\n}\n\n/**\n * @category Hooks and utilities\n */\nexport interface EntityFetchResult<M extends { [Key: string]: any }> {\n    entity?: Entity<M>,\n    dataLoading: boolean,\n    dataLoadingError?: Error\n}\n\nconst CACHE:Record<string, Entity<any>| undefined> = {};\n\n/**\n * This hook is used to fetch an entity.\n * It gives real time updates if the datasource supports it.\n * @param path\n * @param schema\n * @param entityId\n * @param useCache\n * @category Hooks and utilities\n */\n\nexport function useEntityFetch<M extends { [Key: string]: any }>(\n    {\n        path,\n        entityId,\n        schema,\n        useCache = false\n    }: EntityFetchProps<M>): EntityFetchResult<M> {\n\n    const dataSource = useDataSource();\n    const [entity, setEntity] = useState<Entity<M> | undefined>();\n    const [dataLoading, setDataLoading] = useState<boolean>(true);\n    const [dataLoadingError, setDataLoadingError] = useState<Error | undefined>();\n\n    useEffect(() => {\n\n        setDataLoading(true);\n\n        const onEntityUpdate = (updatedEntity: Entity<M> | undefined) => {\n            CACHE[`${path}/${entityId}`] = updatedEntity;\n            setEntity(updatedEntity);\n            setDataLoading(false);\n            setDataLoadingError(undefined);\n        };\n\n        const onError = (error: Error) => {\n            console.error(\"ERROR fetching entity\", error);\n            setDataLoading(false);\n            setEntity(undefined);\n            setDataLoadingError(error);\n        };\n\n        if (useCache && CACHE[`${path}/${entityId}`]) {\n            setEntity(CACHE[`${path}/${entityId}`]);\n            setDataLoading(false);\n            setDataLoadingError(undefined);\n            return () => {\n            };\n        } else if (entityId && path && schema) {\n            if (dataSource.listenEntity) {\n                return dataSource.listenEntity<M>({\n                    path,\n                    entityId,\n                    schema,\n                    onUpdate: onEntityUpdate,\n                    onError\n                });\n            } else {\n                dataSource.fetchEntity<M>({\n                    path,\n                    entityId,\n                    schema\n                })\n                    .then(onEntityUpdate)\n                    .catch(onError);\n                return () => {\n                };\n            }\n        }\n        // if no entityId is provided we do nothing\n        else {\n            onEntityUpdate(undefined);\n            return () => {\n            };\n        }\n    }, [entityId, path]);\n\n    return {\n        entity,\n        dataLoading,\n        dataLoadingError\n    };\n\n}\n","import {\n    DataSource,\n    Entity,\n    EntityCallbacks,\n    EntityValues,\n    FireCMSContext,\n    SaveEntityProps\n} from \"../../models\";\nimport { useDataSource } from \"./useDataSource\";\nimport { computeSchema } from \"../../core/utils\";\n\n/**\n * @category Hooks and utilities\n */\nexport type SaveEntityWithCallbacksProps<M> =\n    SaveEntityProps<M> &\n    {\n        callbacks?: EntityCallbacks<M>;\n        onSaveSuccess?: (updatedEntity: Entity<M>) => void,\n        onSaveFailure?: (e: Error) => void,\n        onPreSaveHookError?: (e: Error) => void,\n        onSaveSuccessHookError?: (e: Error) => void\n    }\n\n/**\n * This function is in charge of saving an entity to the datasource.\n * It will run all the save callbacks specified in the schema.\n * It is also possible to attach callbacks on save success or error, and callback\n * errors.\n *\n * If you just want to save the data without running the `onSaveSuccess`,\n * `onSaveFailure` and `onPreSave` callbacks, you can use the `saveEntity` method\n * in the datasource ({@link useDataSource}).\n *\n * @param schema\n * @param path\n * @param entityId\n * @param callbacks\n * @param values\n * @param previousValues\n * @param status\n * @param dataSource\n * @param context\n * @param onSaveSuccess\n * @param onSaveFailure\n * @param onPreSaveHookError\n * @param onSaveSuccessHookError\n * @see useDataSource\n * @category Hooks and utilities\n */\nexport async function saveEntityWithCallbacks<M, UserType>({\n                                                               schema,\n                                                               path,\n                                                               entityId,\n                                                               callbacks,\n                                                               values,\n                                                               previousValues,\n                                                               status,\n                                                               dataSource,\n                                                               context,\n                                                               onSaveSuccess,\n                                                               onSaveFailure,\n                                                               onPreSaveHookError,\n                                                               onSaveSuccessHookError\n                                                           }: SaveEntityWithCallbacksProps<M> & {\n                                                               dataSource: DataSource,\n                                                               context: FireCMSContext<UserType>,\n                                                           }\n): Promise<void> {\n\n    let updatedValues: Partial<EntityValues<M>>;\n\n    if (callbacks?.onPreSave) {\n        try {\n            const resolvedSchema = computeSchema({\n                values: previousValues as EntityValues<M>,\n                entityId,\n                schemaOrResolver: schema,\n                path\n            });\n            updatedValues = await callbacks.onPreSave({\n                schema: resolvedSchema,\n                path,\n                entityId,\n                values,\n                previousValues,\n                status,\n                context\n            });\n        } catch (e: any) {\n            console.error(e);\n            if (onPreSaveHookError)\n                onPreSaveHookError(e);\n            return;\n        }\n    } else {\n        updatedValues = values;\n    }\n\n    return dataSource.saveEntity({\n        schema,\n        path,\n        entityId,\n        values: updatedValues,\n        previousValues,\n        status\n    }).then((entity) => {\n        try {\n            if (callbacks?.onSaveSuccess) {\n                const resolvedSchema = computeSchema({\n                    values: updatedValues as EntityValues<M>,\n                    entityId,\n                    schemaOrResolver: schema,\n                    path\n                });\n                callbacks.onSaveSuccess({\n                    schema: resolvedSchema,\n                    path,\n                    entityId: entity.id,\n                    values: updatedValues,\n                    previousValues,\n                    status,\n                    context\n                });\n            }\n        } catch (e: any) {\n            if (onSaveSuccessHookError)\n                onSaveSuccessHookError(e);\n        }\n        if (onSaveSuccess)\n            onSaveSuccess(entity);\n    })\n        .catch((e) => {\n            if (callbacks?.onSaveFailure) {\n                const resolvedSchema = computeSchema({\n                    values: updatedValues as EntityValues<M>,\n                    entityId,\n                    schemaOrResolver: schema,\n                    path\n                });\n                callbacks.onSaveFailure({\n                    schema: resolvedSchema,\n                    path,\n                    entityId,\n                    values: updatedValues,\n                    previousValues,\n                    status,\n                    context\n                });\n            }\n            if (onSaveFailure) onSaveFailure(e);\n        });\n}\n","import {\n    DataSource,\n    DeleteEntityProps,\n    Entity,\n    EntityCallbacks,\n    EntityOnDeleteProps,\n    FireCMSContext,\n    ResolvedEntitySchema\n} from \"../../models\";\n\n/**\n * @category Hooks and utilities\n */\nexport type DeleteEntityWithCallbacksProps<M> =\n    DeleteEntityProps<M>\n    & {\n    callbacks?: EntityCallbacks<M>;\n    onDeleteSuccess?: (entity: Entity<M>) => void;\n    onDeleteFailure?: (entity: Entity<M>, e: Error) => void;\n    onPreDeleteHookError?: (entity: Entity<M>, e: Error) => void;\n    onDeleteSuccessHookError?: (entity: Entity<M>, e: Error) => void;\n}\n\n/**\n * This function is in charge of deleting an entity in the datasource.\n * It will run all the delete callbacks specified in the schema.\n * It is also possible to attach callbacks on save success or error, and callback\n * errors.\n *\n * If you just want to delete the data without running the `onPreDelete`,\n * and `onDelete` callbacks, you can use the `deleteEntity` method\n * in the datasource ({@link useDataSource}).\n *\n * @param dataSource\n * @param entity\n * @param schema\n * @param callbacks\n * @param onDeleteSuccess\n * @param onDeleteFailure\n * @param onPreDeleteHookError\n * @param onDeleteSuccessHookError\n * @param context\n * @category Hooks and utilities\n */\nexport async function deleteEntityWithCallbacks<M, UserType>({\n                                                                 dataSource,\n                                                                 entity,\n                                                                 schema,\n                                                                 callbacks,\n                                                                 onDeleteSuccess,\n                                                                 onDeleteFailure,\n                                                                 onPreDeleteHookError,\n                                                                 onDeleteSuccessHookError,\n                                                                 context\n                                                             }: DeleteEntityWithCallbacksProps<M> & {\n                                                                 schema: ResolvedEntitySchema<M>,\n                                                                 dataSource: DataSource,\n                                                                 context: FireCMSContext<UserType>\n                                                             }\n): Promise<boolean> {\n\n    console.debug(\"Deleting entity\", entity.path, entity.id);\n\n    const entityDeleteProps: EntityOnDeleteProps<M> = {\n        entity,\n        schema,\n        entityId: entity.id,\n        path: entity.path,\n        context\n    };\n\n    if (callbacks?.onPreDelete) {\n        try {\n            await callbacks.onPreDelete(entityDeleteProps);\n        } catch (e: any) {\n            console.error(e);\n            if (onPreDeleteHookError)\n                onPreDeleteHookError(entity, e);\n            return false;\n        }\n    }\n    return dataSource.deleteEntity({\n        entity\n    }).then(() => {\n        onDeleteSuccess && onDeleteSuccess(entity);\n        try {\n            if (callbacks?.onDelete) {\n                callbacks.onDelete(entityDeleteProps);\n            }\n            return true;\n        } catch (e: any) {\n            if (onDeleteSuccessHookError)\n                onDeleteSuccessHookError(entity, e);\n            return false;\n        }\n    }).catch((e) => {\n        if (onDeleteFailure) onDeleteFailure(entity, e);\n        return false;\n    });\n}\n","import { useEffect, useRef } from \"react\";\nimport { CMSType, Property } from \"../models\";\n\n/**\n * Hook we use to restore a value after it has been cleared\n * @param property\n * @param value\n * @param setValue\n * @ignore\n */\nexport function useClearRestoreValue<T extends CMSType>({\n                                                            property,\n                                                            value,\n                                                            setValue\n                                                        }:\n                                                            {\n                                                                property: Property<T>,\n                                                                value: T,\n                                                                setValue: (value: T | null, shouldValidate?: boolean) => void\n                                                            }) {\n\n    const clearedValueRef = useRef<T | null>(null);\n    useEffect(() => {\n        const shouldClearValueIfDisabled = typeof property.disabled === \"object\" && Boolean(property.disabled.clearOnDisabled);\n        if (shouldClearValueIfDisabled) {\n            if (value != null) {\n                clearedValueRef.current = value;\n                setValue(null);\n            }\n        } else if (clearedValueRef.current) {\n            setValue(clearedValueRef.current);\n            clearedValueRef.current = null;\n        }\n    }, [property]);\n}\n","import { NavigationContext } from \"../models\";\nimport { useFireCMSContext } from \"./useFireCMSContext\";\n\n\n/**\n * Use this hook to get the navigation of the app.\n * Note that if can be undefined if the navigation has not yet been\n * resolved (you used a {@link NavigationBuilder} and the user is not\n * authenticated.\n *\n * @category Hooks and utilities\n */\nexport function useNavigation(): NavigationContext {\n    const context = useFireCMSContext();\n    return context.navigationContext;\n}\n","import {\n    Entity,\n    EntityCollection,\n    EntityCustomView,\n    FireCMSContext\n} from \"../models\";\nimport { useEffect, useState } from \"react\";\nimport { getNavigationEntriesFromPathInternal } from \"../core/util/navigation_from_path\";\nimport { useFireCMSContext } from \"./useFireCMSContext\";\n\n/**\n * @see resolveNavigationFrom\n * @category Hooks and utilities\n */\nexport type ResolvedNavigationEntry<M> =\n    | ResolvedNavigationEntity<M>\n    | ResolvedNavigationCollection<M>\n    | ResolvedNavigationEntityCustom<M>;\n\n/**\n * @see resolveNavigationFrom\n * @category Hooks and utilities\n */\nexport interface ResolvedNavigationEntity<M> {\n    type: \"entity\";\n    entity: Entity<M>;\n    entityId: string;\n    path: string;\n    parentCollection: EntityCollection<M>;\n}\n\n/**\n * @see resolveNavigationFrom\n * @category Hooks and utilities\n */\nexport interface ResolvedNavigationCollection<M> {\n    type: \"collection\";\n    path: string;\n    collection: EntityCollection<M>;\n}\n\n/**\n * @see resolveNavigationFrom\n * @category Hooks and utilities\n */\ninterface ResolvedNavigationEntityCustom<M> {\n    type: \"custom_view\";\n    path: string;\n    view: EntityCustomView<M>;\n}\n\n/**\n * Use this function to retrieve an array of navigation entries (resolved\n * collection, entity or entity custom_view) for the given path. You need to pass the app context\n * that you receive in different callbacks, such as the save hooks.\n *\n * It will take into account the `navigation` provided at the `FireCMS` level, as\n * well as a `schemaResolver` if provided.\n *\n * @param path\n * @param context\n * @category Hooks and utilities\n */\nexport function resolveNavigationFrom<M, UserType>({\n                                             path,\n                                             context\n                                         }: { path: string, context: FireCMSContext<UserType> }): Promise<ResolvedNavigationEntry<M>[]> {\n\n\n    const dataSource = context.dataSource;\n    const navigationContext = context.navigationContext;\n    const navigation = context.navigationContext.navigation;\n\n    if (!navigation) {\n        throw Error(\"Calling getNavigationFrom, but main navigation has not yet been initialised\");\n    }\n\n\n    const navigationEntries = getNavigationEntriesFromPathInternal({\n        path,\n        collections: navigation.collections\n    });\n\n    const resultPromises: Promise<ResolvedNavigationEntry<any>>[] = navigationEntries.map((entry) => {\n        if (entry.type === \"collection\") {\n            return Promise.resolve(entry);\n        } else if (entry.type === \"entity\") {\n            const entityCollectionResolver = navigationContext.getCollectionResolver(entry.path, entry.entityId);\n            if (!entityCollectionResolver?.schemaResolver) {\n                throw Error(`No schema defined in the navigation for the entity with path ${entry.path}`);\n            }\n\n            return dataSource.fetchEntity({\n                path: entry.path,\n                entityId: entry.entityId,\n                schema: entityCollectionResolver?.schemaResolver\n            })\n                .then((entity) => {\n                    return { ...entry, entity };\n                });\n        } else if (entry.type === \"custom_view\") {\n            return Promise.resolve(entry);\n        } else {\n            throw Error(\"Unmapped element in useEntitiesFromPath\");\n        }\n    });\n\n    return Promise.all(resultPromises);\n}\n\n/**\n * @category Hooks and utilities\n */\nexport interface NavigationFromProps {\n    path: string;\n}\n\n/**\n * @category Hooks and utilities\n */\nexport interface NavigationFrom<M> {\n    data?: ResolvedNavigationEntry<M>[]\n    dataLoading: boolean,\n    dataLoadingError?: Error\n}\n\n/**\n * Use this hook to retrieve an array of navigation entries (resolved\n * collection or entity) for the given path. You can use this hook\n * in any React component that lives under `FireCMS`\n * @category Hooks and utilities\n */\nexport function useResolvedNavigationFrom<M, UserType>(\n    {\n        path\n    }: NavigationFromProps): NavigationFrom<M> {\n\n    const context: FireCMSContext<UserType> = useFireCMSContext();\n\n    const [data, setData] = useState<ResolvedNavigationEntry<M>[] | undefined>();\n    const [dataLoading, setDataLoading] = useState<boolean>(false);\n    const [dataLoadingError, setDataLoadingError] = useState<Error | undefined>();\n\n    useEffect(() => {\n\n        const navigation = context.navigationContext.navigation;\n        if (navigation) {\n            setDataLoading(true);\n            setDataLoadingError(undefined);\n            resolveNavigationFrom<M, UserType>({ path, context })\n                .then((res) => {\n                    setData(res);\n                })\n                .catch((e) => setDataLoadingError(e))\n                .finally(() => setDataLoading(false));\n        }\n\n    }, [path, context]);\n\n    if (!context.navigationContext.navigation) {\n        return { dataLoading: true };\n    }\n\n    return { data, dataLoading, dataLoadingError };\n}\n","import { StorageSource } from \"../models\";\nimport { useFireCMSContext } from \"./useFireCMSContext\";\n\n/**\n * Use this hook to get the storage source being used\n * @category Hooks and utilities\n */\nexport function useStorageSource(): StorageSource {\n    const context = useFireCMSContext();\n    return context.storageSource;\n}\n","import { AuthController, User } from \"../models\";\nimport { useFireCMSContext } from \"./useFireCMSContext\";\n\n/**\n * Hook to retrieve the AuthContext.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS`\n *\n * @see AuthController\n * @category Hooks and utilities\n */\nexport function useAuthController<UserType extends User = User>(): AuthController<UserType> {\n    const context = useFireCMSContext();\n    return context.authController;\n}\n","import { AuthController, SideEntityController } from \"../models\";\nimport { useFireCMSContext } from \"./useFireCMSContext\";\n\n/**\n * Hook to retrieve the side entity controller.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS`\n *\n * @see AuthController\n * @category Hooks and utilities\n */\nexport function useSideEntityController(): SideEntityController {\n    const context = useFireCMSContext();\n    return context.sideEntityController;\n}\n","import { useContext } from \"react\";\nimport { SnackbarContext } from \"../core/contexts/SnackbarContext\";\n\n/**\n * Possible snackbar types\n * @category Hooks and utilities\n */\nexport type SnackbarMessageType = \"success\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * Controller to display snackbars\n * @category Hooks and utilities\n */\nexport interface SnackbarController {\n    /**\n     * Is there currently an open snackbar\n     */\n    isOpen: boolean;\n\n    /**\n     * Close the currently open snackbar\n     */\n    close: () => void;\n\n    /**\n     * Display a new snackbar. You need to specify the type and message.\n     * You can optionally specify a title\n     */\n    open: (props: {\n        type: SnackbarMessageType;\n        title?: string;\n        message: string;\n    }) => void;\n}\n\n/**\n * Hook to retrieve the SnackbarContext.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS`\n *\n * @see SnackbarController\n * @category Hooks and utilities\n */\nexport const useSnackbarController = () => useContext<SnackbarController>(SnackbarContext);\n","import { ModeStateContext } from \"../core/contexts/ModeState\";\nimport { useContext } from \"react\";\n\n/**\n * @category Hooks and utilities\n */\nexport interface ModeState {\n    mode: \"light\" | \"dark\";\n    setMode: (mode: \"light\" | \"dark\") => void;\n    toggleMode: () => void;\n}\n\n/**\n * Hook to retrieve the current mode (\"light\" | \"dark\"), and `setMode`\n * or `toggle` functions to change it.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS`\n *\n * @see ModeState\n * @category Hooks and utilities\n */\nexport const useModeState = () => useContext(ModeStateContext);\n","// FORKED FROM https://github.com/fayeed/use-clipboard\n\nimport {\n    MutableRefObject,\n    useCallback,\n    useEffect,\n    useRef,\n    useState\n} from \"react\";\n\n\nexport interface UseClipboardProps {\n    /**\n     * It's callback function that is called after the `copy` command\n     * is executed.\n     *\n     * @param text: The selected clipboard text.\n     */\n    onSuccess?: (text: string) => void;\n\n    /**\n     * Triggers when the hook encounters an error.\n     * If passed hook won't throw an error.\n     *\n     * @param error: cause of the error\n     */\n    onError?: (error: string) => void;\n\n    /**\n     * Disables the new clipboard API `navigator.clipboard` even if\n     * it is supported.\n     */\n    disableClipboardAPI?: boolean;\n\n    /**\n     * revert back the isCopied flag to false again if a value is set.\n     */\n    copiedDuration?: number;\n}\n\nexport interface useClipboardReturnType {\n    /**\n     * Use ref to pull the text content from.\n     */\n    ref: MutableRefObject<any>;\n\n    /**\n     * Use it to perform the copy operation\n     */\n    copy: (text?: string) => void;\n\n    /**\n     * Use it to perform the cut operation\n     */\n    cut: () => void;\n\n    /**\n     * Indicates wheater the content was successfully copied or not.\n     */\n    isCoppied: boolean;\n\n    /**\n     * Current selected clipboard content.\n     */\n    clipboard: string;\n\n    /**\n     * Clears the user clipboard.\n     */\n    clearClipboard: () => void;\n\n    /**\n     * Check to see if the browser supports the new `navigator.clipboard` API.\n     */\n    isSupported: () => boolean;\n}\n\nexport const useClipboard = (\n    options?: UseClipboardProps\n): useClipboardReturnType => {\n    const { onSuccess, onError, disableClipboardAPI = false, copiedDuration } =\n    options || {};\n    const ref = useRef<any>(null);\n    const [isCoppied, setIsCoppied] = useState(false);\n    const [clipboard, setClipbaord] = useState(\"\");\n\n    useEffect(() => {\n        if (copiedDuration) setTimeout(() => setIsCoppied(false), copiedDuration);\n    }, [isCoppied]);\n\n    const isSupported = () => navigator.clipboard !== undefined;\n\n    const handleError = useCallback((error: string) => {\n        if (onError) onError(error);\n        else throw new Error(error);\n    }, [onError]);\n\n    const handleSuccess = useCallback((text: string) => {\n        if (onSuccess) onSuccess(text);\n        setIsCoppied(true);\n        setClipbaord(text);\n    }, [onSuccess]);\n\n    const copyToClipboard = useCallback((text: string) => {\n        navigator.clipboard\n            .writeText(text)\n            .then(() => handleSuccess(text))\n            .catch((err) => {\n                handleError(err);\n                setIsCoppied(false);\n            });\n    }, [handleError, handleSuccess]);\n\n    const clearClipboard = () => {\n        if (isSupported()) {\n            navigator.clipboard.writeText(\"\");\n        }\n    };\n\n    const copy = (text?: string) =>\n        action(\"copy\", typeof text === \"object\" ? undefined : text);\n\n    const cut = () => action(\"cut\");\n\n    const action = useCallback(\n        (operation = \"copy\", text?: string) => {\n            const element = ref.current as HTMLElement;\n\n            const isInput =\n                element &&\n                (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\");\n\n            const input = ref.current as HTMLInputElement;\n\n            if (isSupported() && !disableClipboardAPI) {\n                if (text) {\n                    copyToClipboard(text);\n                } else if (element) {\n                    if (isInput) {\n                        copyToClipboard(input.value);\n\n                        if (operation === \"cut\") {\n                            input.value = \"\";\n                        }\n                    } else {\n                        copyToClipboard(element.innerText);\n                    }\n                } else {\n                    handleError(\"Both the ref & text were undefined\");\n                }\n            }\n        },\n        [disableClipboardAPI, copyToClipboard, handleError]\n    );\n\n    return {\n        ref,\n        isCoppied,\n        clipboard,\n        clearClipboard,\n        isSupported,\n        copy,\n        cut\n    };\n};\n","import { PreviewComponentProps } from \"../internal\";\nimport React from \"react\";\n\nimport format from \"date-fns/format\";\nimport * as locales from \"date-fns/locale\";\nimport { defaultDateFormat } from \"../../core/util/dates\";\nimport { FireCMSContext } from \"../../models\";\nimport { useFireCMSContext } from \"../../hooks\";\n\n/**\n * @category Preview components\n */\nexport function TimestampPreview({\n                                     name,\n                                     value,\n                                     property,\n                                     size\n                                 }: PreviewComponentProps<Date>): React.ReactElement {\n\n\n    const appConfig: FireCMSContext<any> | undefined = useFireCMSContext();\n    const dateUtilsLocale = appConfig?.locale ? locales[appConfig?.locale] : undefined;\n    const dateFormat: string = appConfig?.dateTimeFormat ?? defaultDateFormat;\n    const formattedDate = value ? format(value, dateFormat, { locale: dateUtilsLocale }) : \"\";\n\n    return (\n        <>\n            {formattedDate}\n        </>\n    );\n}\n","import React from \"react\";\nimport { CardMedia, Link, Theme } from \"@mui/material\";\n\nimport DescriptionOutlinedIcon from \"@mui/icons-material/DescriptionOutlined\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nimport { MediaType } from \"../../models\";\nimport { PreviewComponentProps } from \"../internal\";\nimport { ImagePreview } from \"./ImagePreview\";\nimport { getThumbnailMeasure } from \"../util\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        flexCenter: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        },\n        smallMargin: {\n            margin: theme.spacing(1)\n        },\n        arrayWrap: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n        },\n        array: {\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        arrayItem: {\n            margin: theme.spacing(0.5)\n        },\n        arrayItemBig: {\n            margin: theme.spacing(1)\n        },\n        link: {\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            fontWeight: theme.typography.fontWeightMedium\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function UrlComponentPreview({\n                                        value,\n                                        property,\n                                        size\n                                    }: PreviewComponentProps<string>): React.ReactElement {\n\n    const classes = useStyles();\n\n    if (!value) return <div/>;\n    const url = value;\n    if (typeof property.config?.url === \"boolean\" && property.config.url) {\n        return (\n            <Link className={classes.link}\n                  href={url}\n                  onMouseDown={(e: React.MouseEvent) => {\n                      e.preventDefault();\n                  }}\n                  target=\"_blank\">\n                <OpenInNewIcon style={{ marginRight: 8 }} fontSize={\"small\"}/>\n                {url}\n            </Link>\n        );\n    }\n\n    const mediaType: MediaType = property.config?.url as MediaType ||\n        property.config?.storageMeta?.mediaType;\n    if (mediaType === \"image\") {\n        return <ImagePreview key={`image_preview_${url}_${size}`}\n                             url={url}\n                             size={size}/>;\n    } else if (mediaType === \"audio\") {\n        return <audio controls\n                      src={url}\n                      key={`audio_preview_${url}_${size}`}>\n            Your browser does not support the\n            <code>audio</code> element.\n        </audio>;\n    } else if (mediaType === \"video\") {\n        return <CardMedia\n            key={`video_preview_${url}_${size}`}\n            style={{ maxWidth: size === \"small\" ? 300 : 500 }}\n            component=\"video\"\n            controls\n            image={url}\n        />;\n    } else {\n        return <a\n            key={`link_preview_${url}_${size}`}\n            href={url}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            onClick={(e) => e.stopPropagation()}>\n            <div className={classes.flexCenter}\n                 style={{\n                     width: getThumbnailMeasure(size),\n                     height: getThumbnailMeasure(size)\n                 }}>\n                <DescriptionOutlinedIcon/>\n            </div>\n        </a>;\n    }\n}\n","import {\n    ArrayProperty,\n    MapProperty,\n    Properties,\n    Property,\n    StringProperty\n} from \"../../models\";\nimport React from \"react\";\nimport {\n    Box,\n    Grid,\n    List,\n    ListItem,\n    Skeleton,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow\n} from \"@mui/material\";\nimport { PreviewSize } from \"../../preview\";\nimport { getThumbnailMeasure } from \"../util\";\n\nexport interface SkeletonComponentProps {\n    property: Property,\n    size: PreviewSize\n}\n\n/**\n * @category Preview components\n */\nexport function SkeletonComponent({\n                                         property,\n                                         size\n                                     }: SkeletonComponentProps\n) {\n\n    if (!property) {\n        console.error(\"No property assigned for skeleton component\", property, size);\n    }\n\n    let content: JSX.Element | any;\n    if (property.dataType === \"string\") {\n        const stringProperty = property as StringProperty;\n        if (stringProperty.config?.url) {\n            content = renderUrlComponent(stringProperty, size);\n        } else if (stringProperty.config?.storageMeta) {\n            content = renderSkeletonImageThumbnail(size);\n        } else {\n            content = renderSkeletonText();\n        }\n    } else if (property.dataType === \"array\") {\n        const arrayProperty = property as ArrayProperty;\n\n        if (arrayProperty.of) {\n            if (arrayProperty.of.dataType === \"map\" && arrayProperty.of.properties) {\n                content = renderArrayOfMaps(arrayProperty.of.properties, size, arrayProperty.of.previewProperties);\n            } else if (arrayProperty.of.dataType === \"string\") {\n                if (arrayProperty.of.config?.enumValues) {\n                    content = renderArrayEnumTableCell();\n                } else if (arrayProperty.of.config?.storageMeta) {\n                    content = renderGenericArrayCell(arrayProperty.of);\n                } else {\n                    content = renderArrayOfStrings();\n                }\n            } else {\n                content = renderGenericArrayCell(arrayProperty.of);\n            }\n        }\n\n    } else if (property.dataType === \"map\") {\n        content = renderMap(property as MapProperty, size);\n    } else if (property.dataType === \"timestamp\") {\n        content = renderSkeletonText();\n    } else if (property.dataType === \"reference\") {\n        content = renderReference();\n    } else if (property.dataType === \"boolean\") {\n        content = renderSkeletonText();\n    } else {\n        content = renderSkeletonText();\n    }\n    return (content || null);\n}\n\nfunction renderMap<T extends object>(property: MapProperty<T>, size: PreviewSize) {\n\n    if (!property.properties)\n        return <></>;\n\n    let mapProperties: string[];\n    if (!size) {\n        mapProperties = Object.keys(property.properties);\n    } else {\n        if (property.previewProperties)\n            mapProperties = property.previewProperties as string[];\n        else\n            mapProperties = Object.keys(property.properties).slice(0, 3);\n    }\n\n    if (size)\n        return (\n            <List>\n                {mapProperties && mapProperties.map((key: string) => (\n                    <ListItem key={property.title + key}>\n                        <SkeletonComponent\n                            property={(property.properties as any)[key]}\n                            size={\"small\"}/>\n                    </ListItem>\n                ))}\n            </List>\n        );\n\n    return (\n        <Table size={\"small\"}>\n            <TableBody>\n                {mapProperties &&\n                mapProperties.map((key, index) => {\n                    return (\n                        <TableRow key={`table_${property.title}_${index}`}\n                                  sx={{\n                                      \"&:last-child th, &:last-child td\": {\n                                          borderBottom: 0\n                                      }\n                                  }}>\n                            <TableCell key={`table-cell-title-${key}`}\n                                       component=\"th\">\n                                <Skeleton variant=\"text\"/>\n                            </TableCell>\n                            <TableCell key={`table-cell-${key}`} component=\"th\">\n                                <SkeletonComponent\n                                    property={(property.properties as any)[key]}\n                                    size={\"small\"}/>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n\n}\n\nfunction renderArrayOfMaps<M>(properties: Properties<M>, size: PreviewSize, previewProperties?: string[]) {\n    let tableProperties = previewProperties;\n    if (!tableProperties || !tableProperties.length) {\n        tableProperties = Object.keys(properties) as string[];\n        if (size)\n            tableProperties = tableProperties.slice(0, 3);\n    }\n\n    return (\n        <Table size={\"small\"}>\n            <TableBody>\n                {\n                    [0, 1, 2].map((value, index) => {\n                        return (\n                            <TableRow key={`table_${value}_${index}`}>\n                                {tableProperties && tableProperties.map(\n                                    (key) => (\n                                        <TableCell\n                                            key={`table-cell-${key}`}\n                                            component=\"th\"\n                                        >\n                                            <SkeletonComponent\n                                                property={(properties as any)[key]}\n                                                size={\"small\"}/>\n                                        </TableCell>\n                                    )\n                                )}\n                            </TableRow>\n                        );\n                    })}\n            </TableBody>\n        </Table>\n    );\n}\n\nfunction renderArrayOfStrings() {\n    return (\n        <Grid>\n            {\n                [0, 1].map((value, index) => (\n                    renderSkeletonText(index)\n                ))}\n        </Grid>\n    );\n}\n\nfunction renderArrayEnumTableCell() {\n    return (\n        <Grid>\n            {\n                [0, 1].map((value, index) =>\n                    <>\n                        {renderSkeletonText(index)}\n                    </>\n                )}\n        </Grid>\n    );\n}\n\nfunction renderGenericArrayCell(\n    property: Property\n) {\n    return (\n        <Grid>\n\n            {\n                [0, 1].map((value, index) =>\n                    <>\n                        <SkeletonComponent property={property}\n                                           size={\"small\"}/>\n                    </>\n                )}\n        </Grid>\n    );\n}\n\nfunction renderUrlAudioComponent() {\n    return (\n        <Skeleton variant=\"rectangular\"\n                  width={300}\n                  height={100}/>\n    );\n}\n\nexport function renderSkeletonImageThumbnail(size: PreviewSize) {\n    const imageSize = size === \"tiny\" ? 40 : size === \"small\" ? 100 : 200;\n    return (\n        <Skeleton variant=\"rectangular\"\n                  width={imageSize}\n                  height={imageSize}/>\n    );\n}\n\nfunction renderUrlVideo(size: PreviewSize) {\n\n    return (\n        <Skeleton variant=\"rectangular\"\n                  width={size !== \"regular\" ? 300 : 500}\n                  height={size !== \"regular\" ? 200 : 250}/>\n    );\n}\n\nfunction renderReference() {\n    return <Skeleton variant=\"rectangular\" width={200} height={100}/>;\n}\n\n\nfunction renderUrlComponent(property: StringProperty, size: PreviewSize = \"regular\") {\n\n    if (typeof property.config?.url === \"boolean\" && property.config.url) {\n        return <div style={{\n            display: \"flex\"\n        }}>\n            {renderSkeletonIcon()}\n            {renderSkeletonText()}\n        </div>;\n    }\n\n    const mediaType = property.config?.url || property.config?.storageMeta?.mediaType;\n    if (mediaType === \"image\") {\n        return renderSkeletonImageThumbnail(size);\n    } else if (mediaType === \"audio\") {\n        return renderUrlAudioComponent();\n    } else if (mediaType === \"video\") {\n        return renderUrlVideo(size);\n    } else {\n        return renderUrlFile(size);\n    }\n}\n\nfunction renderUrlFile(size: PreviewSize) {\n\n    return (\n        <Box\n            sx={{\n                width: getThumbnailMeasure(size),\n                height: getThumbnailMeasure(size)\n            }}>\n            {renderSkeletonIcon()}\n        </Box>\n    );\n}\n\nfunction renderSkeletonText(index?: number) {\n    return <Skeleton variant=\"text\" key={`skeleton_${index}`}/>;\n}\n\nexport function renderSkeletonCaptionText(index?: number) {\n    return <Skeleton\n        height={20}\n        variant=\"text\"/>;\n}\n\nexport function renderSkeletonIcon() {\n    return <Skeleton variant=\"rectangular\" width={24} height={24}/>;\n}\n\n","import React, { useEffect } from \"react\";\n\nimport { renderSkeletonImageThumbnail } from \"./SkeletonComponent\";\nimport { UrlComponentPreview } from \"./UrlComponentPreview\";\nimport { PreviewComponentProps } from \"../internal\";\nimport { useStorageSource } from \"../../hooks\";\n\n/**\n * @category Preview components\n */\nexport const StorageThumbnail = React.memo<PreviewComponentProps<string>>(StorageThumbnailInternal, areEqual) as React.FunctionComponent<PreviewComponentProps<string>>;\n\nfunction areEqual(prevProps: PreviewComponentProps<string>, nextProps: PreviewComponentProps<string>) {\n    return prevProps.name === nextProps.name &&\n        prevProps.size === nextProps.size &&\n        prevProps.height === nextProps.height &&\n        prevProps.width === nextProps.width &&\n        prevProps.value === nextProps.value;\n}\n\nconst URL_CACHE: Record<string, string> = {};\n\nexport function StorageThumbnailInternal({\n                                             name,\n                                             value,\n                                             property,\n                                             size\n                                         }: PreviewComponentProps<string>) {\n    const storage = useStorageSource();\n\n    const storagePathOrDownloadUrl = value;\n\n    const [url, setUrl] = React.useState<string>(URL_CACHE[storagePathOrDownloadUrl]);\n\n\n    useEffect(() => {\n        if (!storagePathOrDownloadUrl)\n            return;\n        let unmounted = false;\n        if (property.config?.storageMeta?.storeUrl) {\n            setUrl(storagePathOrDownloadUrl);\n            URL_CACHE[storagePathOrDownloadUrl] = storagePathOrDownloadUrl;\n        } else if (storagePathOrDownloadUrl)\n            storage.getDownloadURL(storagePathOrDownloadUrl)\n                .then(function (downloadURL) {\n                    if (!unmounted) {\n                        setUrl(downloadURL);\n                        URL_CACHE[storagePathOrDownloadUrl] = downloadURL;\n                    }\n                });\n        return () => {\n            unmounted = true;\n        };\n    }, [property.config?.storageMeta?.storeUrl, storagePathOrDownloadUrl]);\n\n    if (!storagePathOrDownloadUrl) return null;\n\n    return url\n        ? <UrlComponentPreview name={name}\n                             value={url}\n                             property={property}\n                             size={size}/>\n        : renderSkeletonImageThumbnail(size);\n}\n","import React from \"react\";\n\nimport {\n    PreviewComponent,\n    PreviewComponentProps,\n    PreviewSize\n} from \"../internal\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { Property } from \"../../models\";\n\nimport { Theme } from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        arrayWrap: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n        },\n        arrayItem: {\n            margin: theme.spacing(0.5)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayOfStorageComponentsPreview({\n                                                    name,\n                                                    value,\n                                                    property,\n                                                    size\n                                                }: PreviewComponentProps<any[]>) {\n\n    if (property.dataType !== \"array\" || !property.of || property.of.dataType !== \"string\")\n        throw Error(\"Picked wrong preview component ArrayOfStorageComponentsPreview\");\n\n    const childSize: PreviewSize = size === \"regular\" ? \"small\" : \"tiny\";\n    const classes = useStyles();\n\n    return <div className={classes.arrayWrap}>\n        {value &&\n        value.map((v, index) =>\n            <div className={classes.arrayItem}\n                 key={`preview_array_storage_${name}_${index}`}>\n                <ErrorBoundary>\n                    <PreviewComponent\n                        name={name}\n                        value={v}\n                        property={property.of as Property<string>}\n                        size={childSize}/>\n                </ErrorBoundary>\n            </div>\n        )}\n    </div>;\n}\n","import * as React from \"react\";\nimport { useMemo } from \"react\";\n\nimport {\n    Box,\n    darken,\n    IconButton,\n    lighten,\n    Paper,\n    Skeleton,\n    Tooltip,\n    Typography\n} from \"@mui/material\";\nimport { AnyProperty, EntityReference } from \"../../models\";\n\nimport KeyboardTabIcon from \"@mui/icons-material/KeyboardTab\";\nimport { PreviewComponent, PreviewComponentProps } from \"../internal\";\n\nimport { SkeletonComponent } from \"./SkeletonComponent\";\nimport { ErrorView } from \"../../core\";\nimport {\n    useEntityFetch,\n    useNavigation,\n    useSideEntityController\n} from \"../../hooks\";\n\nexport type ReferencePreviewProps =\n    PreviewComponentProps<EntityReference>\n    & { onHover?: boolean };\n\n\n/**\n * @category Preview components\n */\nexport const ReferencePreview = React.memo<ReferencePreviewProps>(ReferencePreviewComponent, areEqual) as React.FunctionComponent<ReferencePreviewProps>;\n\nfunction areEqual(prevProps: ReferencePreviewProps, nextProps: ReferencePreviewProps) {\n    return prevProps.name === nextProps.name &&\n        prevProps.size === nextProps.size &&\n        prevProps.height === nextProps.height &&\n        prevProps.width === nextProps.width &&\n        prevProps.onHover === nextProps.onHover &&\n        prevProps.value?.id === nextProps.value?.id &&\n        prevProps.value?.path === nextProps.value?.path\n        ;\n}\n\nfunction ReferencePreviewComponent<M extends { [Key: string]: any }>(\n    {\n        value,\n        property,\n        onClick,\n        size,\n        onHover\n    }: ReferencePreviewProps) {\n\n    if (typeof property.path !== \"string\") {\n        throw Error(\"Picked the wrong component ReferencePreviewComponent\");\n    }\n\n    const reference: EntityReference = value;\n    const previewProperties = property.previewProperties;\n\n    const navigationContext = useNavigation();\n    const sideEntityController = useSideEntityController();\n\n    const collectionResolver = navigationContext.getCollectionResolver<M>(property.path);\n    if (!collectionResolver) {\n        throw Error(`Couldn't find the corresponding collection view for the path: ${property.path}`);\n    }\n\n    const schema = collectionResolver.schema;\n\n    const {\n        entity,\n        dataLoading,\n        dataLoadingError\n    } = useEntityFetch({\n        path: reference.path,\n        entityId: reference.id,\n        schema: collectionResolver.schemaResolver,\n        useCache: true\n    });\n\n    const listProperties = useMemo(() => {\n        let res = previewProperties;\n        if (!res || !res.length) {\n            res = Object.keys(schema.properties);\n        }\n\n        if (size === \"small\" || size === \"regular\")\n            res = res.slice(0, 3);\n        else if (size === \"tiny\")\n            res = res.slice(0, 1);\n        return res;\n    }, [previewProperties, schema.properties, size]);\n\n    let body: JSX.Element;\n\n    function buildError(error: string, tooltip?: string) {\n        return <ErrorView error={error} tooltip={tooltip}/>;\n    }\n\n    if (!value) {\n        body = buildError(\"Reference not set\");\n    }\n    // currently not happening since this gets filtered out in PreviewComponent\n    else if (!(value instanceof EntityReference)) {\n        body = buildError(\"Unexpected value\", JSON.stringify(value));\n    } else if (entity && !entity.values) {\n        body = buildError(\"Reference does not exist\", reference.path);\n    } else {\n\n        body = (\n            <>\n                <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flexGrow: 1,\n                    maxWidth: \"calc(100% - 60px)\",\n                    margin: 1\n                }}>\n\n                    {size !== \"tiny\" && (\n                        value\n                            ? <Box sx={{\n                                display: size !== \"regular\" ? \"block\" : undefined,\n                                whiteSpace: size !== \"regular\" ? \"nowrap\" : undefined,\n                                overflow: size !== \"regular\" ? \"hidden\" : undefined,\n                                textOverflow: size !== \"regular\" ? \"ellipsis\" : undefined\n                            }}>\n                                <Typography variant={\"caption\"}\n                                            className={\"mono\"}>\n                                    {value.id}\n                                </Typography>\n                            </Box>\n                            : <Skeleton variant=\"text\"/>)}\n\n\n                    {listProperties && listProperties.map((key) => {\n                        const childProperty = schema.properties[key as string];\n                        if (!childProperty) return null;\n\n                        return (\n                            <div key={\"ref_prev_\" + (key as string)}>\n                                {entity\n                                    ? <PreviewComponent name={key as string}\n                                                        value={entity.values[key as string]}\n                                                        property={childProperty as AnyProperty}\n                                                        size={\"tiny\"}/>\n                                    : <SkeletonComponent\n                                        property={childProperty as AnyProperty}\n                                        size={\"tiny\"}/>\n                                }\n                            </div>\n                        );\n                    })}\n\n                </Box>\n                <Box sx={{\n                    margin: \"auto\"\n                }}>\n                    {entity &&\n                        <Tooltip title={`See details for ${entity.id}`}>\n                            <IconButton\n                                size={size === \"tiny\" ? \"small\" : \"medium\"}\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    sideEntityController.open({\n                                        entityId: entity.id,\n                                        path: entity.path,\n                                        schema: schema,\n                                        overrideSchemaRegistry: false\n                                    });\n                                }}>\n                                <KeyboardTabIcon fontSize={\"small\"}/>\n                            </IconButton>\n                        </Tooltip>}\n                </Box>\n            </>\n        );\n    }\n\n\n    return (\n        <Paper elevation={0} sx={(theme) => {\n            const clickableStyles = onClick\n                ? {\n                    tabindex: 0,\n                    backgroundColor: onHover ? (theme.palette.mode === \"dark\" ? lighten(theme.palette.background.default, 0.1) : darken(theme.palette.background.default, 0.15)) : darken(theme.palette.background.default, 0.1),\n                    transition: \"background-color 300ms ease, box-shadow 300ms ease\",\n                    boxShadow: onHover ? \"0 0 0 2px rgba(128,128,128,0.05)\" : undefined,\n                    cursor: onHover ? \"pointer\" : undefined\n                }\n                : {};\n            return ({\n                width: \"100%\",\n                display: \"flex\",\n                color: \"#838383\",\n                backgroundColor: darken(theme.palette.background.default, 0.1),\n                borderRadius: \"2px\",\n                overflow: \"hidden\",\n                padding: size === \"regular\" ? 1 : 0,\n                itemsAlign: size === \"tiny\" ? \"center\" : undefined,\n                fontWeight: theme.typography.fontWeightMedium,\n                ...clickableStyles\n            });\n        }}\n               onClick={onClick}>\n\n            {body}\n\n        </Paper>\n    );\n\n}\n","import { PreviewComponentProps, PreviewSize } from \"../internal\";\nimport { ReferenceProperty } from \"../../models\";\nimport { ReferencePreview } from \"./ReferencePreview\";\n\nimport { Theme } from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        arrayItem: {\n            margin: theme.spacing(0.5)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayOfReferencesPreview({\n                                             name,\n                                             value,\n                                             property,\n                                             size\n                                         }: PreviewComponentProps<any[]>) {\n\n    if (property.dataType !== \"array\" || !property.of || property.of.dataType !== \"reference\")\n        throw Error(\"Picked wrong preview component ArrayOfReferencesPreview\");\n\n    const classes = useStyles();\n    const childSize: PreviewSize = size === \"regular\" ? \"small\" : \"tiny\";\n\n    return (\n        <>\n            {value &&\n            value.map((v, index) =>\n                <div className={classes.arrayItem}\n                     key={`preview_array_ref_${name}_${index}`}>\n                    <ReferencePreview\n                        name={`${name}[${index}]`}\n                        size={childSize}\n                        value={v}\n                        property={property.of as ReferenceProperty}\n                    />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { PreviewComponent, PreviewComponentProps } from \"../internal\";\nimport { MapProperty } from \"../../models\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        tableNoBottomBorder: {\n            \"&:last-child th, &:last-child td\": {\n                borderBottom: 0\n            }\n        },\n        verticalAlignTop: {\n            verticalAlign: \"top\"\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function MapPreview<T extends {}>({\n                                             name,\n                                             value,\n                                             property,\n                                             size\n                                         }: PreviewComponentProps<T>) {\n\n    const classes = useStyles();\n\n    if (property.dataType !== \"map\") {\n        throw Error(\"Picked wrong preview component MapPreview\");\n    }\n\n    const mapProperty = property as MapProperty;\n    if (!mapProperty.properties) {\n        throw Error(`You need to specify a 'properties' prop (or specify a custom field) in your map property ${name}`);\n    }\n\n    if (!value) return null;\n\n\n    let mapPropertyKeys: string[];\n    if (size === \"regular\") {\n        mapPropertyKeys = Object.keys(mapProperty.properties);\n    } else {\n        mapPropertyKeys = (mapProperty.previewProperties || Object.keys(mapProperty.properties)) as string[];\n        if (size === \"small\")\n            mapPropertyKeys = mapPropertyKeys.slice(0, 3);\n        else if (size === \"tiny\")\n            mapPropertyKeys = mapPropertyKeys.slice(0, 1);\n    }\n\n    if (size !== \"regular\")\n        return (\n            <>\n                {mapPropertyKeys.map((key, index) => (\n                    <div\n                        key={\"map_preview_\" + mapProperty.title + key + index}>\n                        <ErrorBoundary>\n                            <PreviewComponent name={key}\n                                              value={(value as any)[key]}\n                                              property={mapProperty.properties![key]}\n                                              size={size}/>\n                        </ErrorBoundary>\n                    </div>\n                ))}\n            </>\n        );\n\n    return (\n        <Table size=\"small\" key={`map_preview_${name}`}>\n            <TableBody>\n                {mapPropertyKeys &&\n                mapPropertyKeys.map((key, index) => {\n                    return (\n                        <TableRow\n                            key={`map_preview_table_${name}_${index}`}\n                            className={classes.tableNoBottomBorder}>\n                            <TableCell key={`table-cell-title-${name}-${key}`}\n                                       className={classes.verticalAlignTop}\n                                       width=\"30%\"\n                                       component=\"th\">\n                                <Typography variant={\"caption\"}\n                                            color={\"textSecondary\"}>\n                                    {mapProperty.properties![key].title}\n                                </Typography>\n                            </TableCell>\n                            <TableCell key={`table-cell-${name}-${key}`}\n                                       width=\"70%\"\n                                       className={classes.verticalAlignTop}\n                                       component=\"th\">\n                                <ErrorBoundary>\n                                    <PreviewComponent\n                                        name={key}\n                                        value={(value as any)[key]}\n                                        property={mapProperty.properties![key]}\n                                        size={\"small\"}/>\n                                </ErrorBoundary>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n\n}\n","import React from \"react\";\n\nimport { Divider, Theme } from \"@mui/material\";\n\nimport {\n    PreviewComponent,\n    PreviewComponentProps,\n    PreviewSize\n} from \"../internal\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { Property } from \"../../models\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        array: {\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        arrayItemBig: {\n            margin: theme.spacing(1)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayPreview({\n                                 name,\n                                 value,\n                                 property,\n                                 size\n                             }: PreviewComponentProps<any[]>) {\n\n    if (!property.of) {\n        throw Error(`You need to specify an 'of' prop (or specify a custom field) in your array property ${name}`);\n    }\n\n    const classes = useStyles();\n\n    if (property.dataType !== \"array\")\n        throw Error(\"Picked wrong preview component ArrayPreview\");\n\n    const values = value;\n\n    if (!values) return null;\n\n    const childSize: PreviewSize = size === \"regular\" ? \"small\" : \"tiny\";\n\n    return (\n        <div className={classes.array}>\n            {values &&\n            values.map((value, index) =>\n                <React.Fragment key={\"preview_array_\" + value + \"_\" + index}>\n                    <div className={classes.arrayItemBig}>\n                        <ErrorBoundary>\n                            <PreviewComponent\n                                name={name}\n                                value={value}\n                                property={property.of as Property<any>}\n                                size={childSize}/>\n                        </ErrorBoundary>\n                    </div>\n                    {index < values.length - 1 && <Divider/>}\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Divider, Theme } from \"@mui/material\";\nimport {\n    PreviewComponent,\n    PreviewComponentProps,\n    PreviewSize\n} from \"../internal\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { Property } from \"../../models\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        array: {\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        arrayWrap: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n        },\n        arrayItemBig: {\n            margin: theme.spacing(1)\n        }\n    })\n);\n\n/**\n * @category Preview components\n */\nexport function ArrayOneOfPreview({\n                                      name,\n                                      value,\n                                      property,\n                                      size\n                                  }: PreviewComponentProps<any[]>) {\n\n    if (property.dataType !== \"array\")\n        throw Error(\"Picked wrong preview component ArrayPreview\");\n\n    if (!property.oneOf) {\n        throw Error(`You need to specify an 'of' or 'oneOf' prop (or specify a custom field) in your array property ${name}`);\n    }\n\n    const classes = useStyles();\n    const values = value;\n\n    if (!values) return null;\n\n    const childSize: PreviewSize = size === \"regular\" ? \"small\" : \"tiny\";\n\n    const typeField = property.oneOf.typeField ?? \"type\";\n    const valueField = property.oneOf.valueField ?? \"value\";\n    const properties = property.oneOf.properties;\n\n    return (\n        <div className={classes.array}>\n            {values &&\n            values.map((value, index) =>\n                <React.Fragment key={\"preview_array_\" + value + \"_\" + index}>\n                    <div className={classes.arrayItemBig}>\n                        <ErrorBoundary>\n                            {value && <PreviewComponent\n                                name={name}\n                                value={value[valueField]}\n                                property={properties[value[typeField]] as Property<any>}\n                                size={childSize}/>}\n                        </ErrorBoundary>\n                    </div>\n                    {index < values.length - 1 && <Divider/>}\n                </React.Fragment>\n            )}\n        </div>\n    );\n}\n","import React, { createElement } from \"react\";\nimport {\n    ArrayProperty,\n    BooleanProperty,\n    CMSType,\n    EntityReference,\n    MapProperty,\n    NumberProperty,\n    ReferenceProperty,\n    StringProperty,\n    TimestampProperty\n} from \"../models\";\n\nimport {\n    ArrayOfMapsPreview,\n    ArrayOfReferencesPreview,\n    ArrayOfStorageComponentsPreview,\n    ArrayOfStringsPreview,\n    ArrayOneOfPreview,\n    ArrayPreview,\n    ArrayPropertyEnumPreview,\n    BooleanPreview,\n    EmptyValue,\n    MapPreview,\n    NumberPreview,\n    ReferencePreview,\n    StorageThumbnail,\n    StringPreview,\n    TimestampPreview,\n    UrlComponentPreview\n} from \"./internal\";\nimport { ErrorView } from \"../core/components\";\n\nimport { PreviewComponentProps } from \"./PreviewComponentProps\";\n\nimport { Markdown } from \"./components/Markdown\";\n\n/**\n * @category Preview components\n */\nexport function PreviewComponent<T extends CMSType>(props: PreviewComponentProps<T>) {\n    let content: JSX.Element | any;\n    const {\n        property, name, value, size, height, width\n    } = props;\n\n    const fieldProps = { ...props };\n\n    if (value === undefined) {\n        content = <EmptyValue/>;\n    } else if (property.config?.Preview) {\n        content = createElement(property.config.Preview as React.ComponentType<PreviewComponentProps>,\n            {\n                name,\n                value,\n                property,\n                size,\n                height,\n                width,\n                customProps: property.config.customProps\n            });\n    } else if (value === null) {\n        content = <EmptyValue/>;\n    } else if (property.dataType === \"string\") {\n        const stringProperty = property as StringProperty;\n        if (typeof value === \"string\") {\n            if (stringProperty.config?.url) {\n                content = <UrlComponentPreview {...fieldProps}\n                                               property={property as StringProperty}\n                                               value={value}/>;\n            } else if (stringProperty.config?.storageMeta) {\n                content = <StorageThumbnail {...fieldProps}\n                                            property={property as StringProperty}\n                                            value={value}/>;\n            } else if (stringProperty.config?.markdown) {\n                content = <Markdown source={value}/>;\n            } else {\n                content = <StringPreview {...fieldProps}\n                                         property={property as StringProperty}\n                                         value={value}/>;\n            }\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else if (property.dataType === \"array\") {\n        if (value instanceof Array) {\n            const arrayProperty = property as ArrayProperty;\n            if (!arrayProperty.of && !arrayProperty.oneOf) {\n                throw Error(`You need to specify an 'of' or 'oneOf' prop (or specify a custom field) in your array property ${name}`);\n            }\n\n            if (arrayProperty.of) {\n                if (arrayProperty.of.dataType === \"map\") {\n                    content =\n                        <ArrayOfMapsPreview name={name}\n                                            property={property as ArrayProperty}\n                                            value={value as object[]}\n                                            size={size}\n                        />;\n                } else if (arrayProperty.of.dataType === \"reference\") {\n                    if (typeof arrayProperty.of.path === \"string\") {\n                        content = <ArrayOfReferencesPreview {...fieldProps}\n                                                            value={value}\n                                                            property={property as ArrayProperty}/>;\n                    } else {\n                        content = <EmptyValue/>;\n                    }\n                } else if (arrayProperty.of.dataType === \"string\") {\n                    if (arrayProperty.of.config?.enumValues) {\n                        content = <ArrayPropertyEnumPreview\n                            {...fieldProps}\n                            value={value as string[]}\n                            property={property as ArrayProperty}/>;\n                    } else if (arrayProperty.of.config?.storageMeta) {\n                        content = <ArrayOfStorageComponentsPreview\n                            {...fieldProps}\n                            value={value}\n                            property={property as ArrayProperty}/>;\n                    } else {\n                        content = <ArrayOfStringsPreview\n                            {...fieldProps}\n                            value={value as string[]}\n                            property={property as ArrayProperty}/>;\n                    }\n                } else if (arrayProperty.of.dataType === \"number\") {\n                    if (arrayProperty.of.config?.enumValues) {\n                        content = <ArrayPropertyEnumPreview\n                            {...fieldProps}\n                            value={value as string[]}\n                            property={property as ArrayProperty}/>;\n                    }\n                } else {\n                    content = <ArrayPreview {...fieldProps}\n                                            value={value}\n                                            property={property as ArrayProperty}/>;\n                }\n            } else if (arrayProperty.oneOf) {\n                content = <ArrayOneOfPreview {...fieldProps}\n                                             value={value}\n                                             property={property as ArrayProperty}/>;\n            }\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else if (property.dataType === \"map\") {\n        if (typeof value === \"object\") {\n            content =\n                <MapPreview {...fieldProps}\n                            property={property as MapProperty}/>;\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else if (property.dataType === \"timestamp\") {\n        if (value instanceof Date) {\n            content = <TimestampPreview {...fieldProps}\n                                        value={value}\n                                        property={property as TimestampProperty}/>;\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else if (property.dataType === \"reference\") {\n        if (typeof property.path === \"string\") {\n            if (value instanceof EntityReference) {\n                content = <ReferencePreview\n                    {...fieldProps}\n                    value={value as EntityReference}\n                    property={property as ReferenceProperty}\n                />;\n            } else {\n                content = buildWrongValueType(name, property.dataType, value);\n            }\n        } else {\n            content = <EmptyValue/>;\n        }\n\n    } else if (property.dataType === \"boolean\") {\n        if (typeof value === \"boolean\") {\n            content = <BooleanPreview {...fieldProps}\n                                      value={value}\n                                      property={property as BooleanProperty}/>;\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else if (property.dataType === \"number\") {\n        if (typeof value === \"number\") {\n            content = <NumberPreview {...fieldProps}\n                                     value={value}\n                                     property={property as NumberProperty}/>;\n        } else {\n            content = buildWrongValueType(name, property.dataType, value);\n        }\n    } else {\n        content = JSON.stringify(value);\n    }\n\n    return content === undefined || content === null ? <EmptyValue/> : content;\n}\n\nfunction buildWrongValueType(name: string | undefined, dataType: string, value: any) {\n    console.error(`Unexpected value for property ${name}, of type ${dataType}`, value);\n    return (\n        <ErrorView error={`Unexpected value: ${JSON.stringify(value)}`}/>\n    );\n}\n\n\n// export const PreviewComponent = React.memo<PreviewComponentProps<any>>(PreviewComponentInternal, areEqual) as React.FunctionComponent<PreviewComponentProps<any>>;\n//\n// function areEqual(prevProps: PreviewComponentProps<any>, nextProps: PreviewComponentProps<any>) {\n//     return prevProps.name === nextProps.name\n//         && prevProps.size === nextProps.size\n//         && prevProps.height === nextProps.height\n//         && prevProps.width === nextProps.width\n//         && isEqual(prevProps.value, nextProps.value)\n//         ;\n// }\n","import { Property } from \"../../models\";\nimport ShortTextIcon from \"@mui/icons-material/ShortText\";\nimport SubjectIcon from \"@mui/icons-material/Subject\";\nimport AttachmentIcon from \"@mui/icons-material/Attachment\";\nimport Crop75Icon from \"@mui/icons-material/Crop75\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport React from \"react\";\nimport RoomIcon from \"@mui/icons-material/Room\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport EqualizerIcon from \"@mui/icons-material/Equalizer\";\nimport PhotoIcon from \"@mui/icons-material/Photo\";\nimport HttpIcon from \"@mui/icons-material/Http\";\nimport FlagIcon from \"@mui/icons-material/Flag\";\nimport AdjustIcon from \"@mui/icons-material/Adjust\";\n\nexport function getIdIcon(\n    color: \"inherit\" | \"primary\" | \"secondary\" | \"action\" | \"disabled\" | \"error\" = \"inherit\",\n    fontSize: \"inherit\" | \"medium\" | \"large\" | \"small\" | undefined = \"inherit\"): React.ReactNode {\n    return <AdjustIcon color={color} fontSize={fontSize}/>;\n}\n\nexport function getIconForProperty(\n    property: Property,\n    color: \"inherit\" | \"primary\" | \"secondary\" | \"action\" | \"disabled\" | \"error\" = \"inherit\",\n    fontSize: \"inherit\" | \"medium\" | \"large\" | \"small\" | undefined = \"inherit\"): React.ReactNode {\n    if (property.dataType === \"string\") {\n        if (property.config?.multiline || property.config?.markdown) {\n            return <SubjectIcon color={color} fontSize={fontSize}/>;\n        } else if (property.config?.storageMeta) {\n            if (property.config.storageMeta.mediaType === \"image\")\n                return <PhotoIcon color={color} fontSize={fontSize}/>;\n            return <AttachmentIcon color={color} fontSize={fontSize}/>;\n        } else if (property.config?.url) {\n            return <HttpIcon color={color} fontSize={fontSize}/>;\n        } else if (property.config?.enumValues) {\n            return <ListIcon color={color} fontSize={fontSize}/>;\n        } else {\n            return <ShortTextIcon color={color} fontSize={fontSize}/>;\n        }\n    } else if (property.dataType === \"number\") {\n        return <EqualizerIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"geopoint\") {\n        return <RoomIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"map\") {\n        if (property.properties)\n            return <ViewListIcon color={color} fontSize={fontSize}/>;\n        else\n            return <ListAltIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"array\") {\n        if (property.of)\n            return getIconForProperty(property.of, color, fontSize);\n        else\n            return <ListAltIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"boolean\") {\n        return <FlagIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"timestamp\") {\n        return <ScheduleIcon color={color} fontSize={fontSize}/>;\n    } else if (property.dataType === \"reference\") {\n        return <LinkIcon color={color} fontSize={fontSize}/>;\n    } else {\n        return <Crop75Icon color={color} fontSize={fontSize}/>;\n    }\n}\n","import * as React from \"react\";\n\nimport {\n    Box,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Theme,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n    AnyProperty,\n    Entity,\n    FireCMSContext,\n    Properties,\n    ResolvedEntitySchema\n} from \"../../models\";\nimport { PreviewComponent } from \"../../preview/PreviewComponent\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport { getIconForProperty, getIdIcon } from \"../util/property_icons\";\nimport { ErrorBoundary } from \"../internal/ErrorBoundary\";\nimport { useFireCMSContext } from \"../../hooks\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        property: {\n            display: \"flex\"\n        },\n        valuePreview: {\n            height: \"72px\",\n            padding: theme.spacing(2, 3)\n        },\n        iconCell: {\n            paddingTop: theme.spacing(1)\n        },\n        titleCell: {\n            width: \"25%\",\n            padding: theme.spacing(1)\n        }\n    })\n);\n\n/**\n * @category Components\n */\nexport interface EntityPreviewProps<M> {\n    entity: Entity<M>;\n    schema: ResolvedEntitySchema<M>;\n    path: string;\n}\n\n/**\n * Use this component to render a preview of a property values\n * @param entity\n * @param schema\n * @param path\n * @constructor\n * @category Components\n */\nexport function EntityPreview<M>(\n    {\n        entity,\n        schema,\n        path\n    }: EntityPreviewProps<M>) {\n\n    const classes = useStyles();\n\n    const appConfig: FireCMSContext | undefined = useFireCMSContext();\n\n    const properties:Properties = schema.properties;\n\n    return (\n        <TableContainer>\n            <Table aria-label=\"entity table\">\n                <TableBody>\n                    <TableRow>\n                        <TableCell align=\"right\"\n                                   component=\"td\"\n                                   scope=\"row\"\n                                   className={classes.titleCell}>\n                            <Typography variant={\"caption\"}\n                                        color={\"textSecondary\"}>\n                                Id\n                            </Typography>\n                        </TableCell>\n                        <TableCell padding=\"none\"\n                                   className={classes.iconCell}>\n                            {getIdIcon(\"disabled\", \"small\")}\n                        </TableCell>\n                        <TableCell className={classes.valuePreview}>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                {entity.id}\n                                {appConfig?.entityLinkBuilder &&\n                                <a href={appConfig.entityLinkBuilder({ entity })}\n                                   rel=\"noopener noreferrer\"\n                                   target=\"_blank\">\n                                    <IconButton\n                                        aria-label=\"go-to-entity-datasource\"\n                                        size=\"large\">\n                                        <OpenInNewIcon\n                                            fontSize={\"small\"}/>\n                                    </IconButton>\n                                </a>}\n                            </Box>\n                        </TableCell>\n                    </TableRow>\n\n                    {schema && Object.entries(properties)\n                        .map(([key, property]) => {\n                            const value = (entity.values as any)[key];\n                            return (\n                                <TableRow\n                                    key={\"entity_prev\" + property.title + key}>\n                                    <TableCell align=\"right\"\n                                               component=\"td\"\n                                               scope=\"row\"\n                                               className={classes.titleCell}>\n                                        <Typography\n                                            style={{ paddingLeft: \"16px\" }}\n                                            variant={\"caption\"}\n                                            color={\"textSecondary\"}>\n                                            {property.title}\n                                        </Typography>\n                                    </TableCell>\n\n                                    <TableCell padding=\"none\"\n                                               className={classes.iconCell}>\n                                        {getIconForProperty(property, \"disabled\", \"small\")}\n                                    </TableCell>\n\n                                <TableCell\n                                    className={classes.valuePreview}>\n                                    <ErrorBoundary>\n                                        <PreviewComponent\n                                            name={key}\n                                            value={value}\n                                            property={property as AnyProperty}\n                                            size={\"regular\"}/>\n                                    </ErrorBoundary>\n                                </TableCell>\n\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n\n}\n\nexport default EntityPreview;\n","import { useMemo } from \"react\";\nimport {\n    ArrayProperty,\n    EntityCollection,\n    Properties,\n    Property,\n    ResolvedEntitySchema\n} from \"../../../../models\";\n\n\nexport type Sort = \"asc\" | \"desc\" | undefined;\n\n\nexport function getCellAlignment(property: Property): \"right\" | \"left\" | \"center\" {\n    if (property.dataType === \"boolean\") {\n        return \"center\";\n    } else if (property.dataType === \"number\") {\n        if (property.config?.enumValues)\n            return \"left\";\n        return \"right\";\n    } else if (property.dataType === \"timestamp\") {\n        return \"right\";\n    } else {\n        return \"left\";\n    }\n}\n\nexport function isPropertyFilterable(property: Property): boolean {\n    if (property.dataType === \"boolean\") {\n        return true;\n    } else if (property.dataType === \"number\") {\n        return true;\n    } else if (property.dataType === \"string\") {\n        return true;\n    } else if (property.dataType === \"timestamp\") {\n        return true;\n    } else if (property.dataType === \"array\") {\n        if (property.of)\n            return isPropertyFilterable(property.of);\n        else\n            return false;\n    } else {\n        return false;\n    }\n}\n\nexport function getPropertyColumnWidth(property: Property): number {\n\n    if (property.columnWidth) {\n        return property.columnWidth;\n    }\n\n    if (property.dataType === \"string\") {\n        if (property.config?.url) {\n            if (property.config?.url === \"video\" || property.config?.storageMeta?.mediaType === \"video\")\n                return 340;\n            else if (property.config?.url === \"audio\" || property.config?.storageMeta?.mediaType === \"audio\")\n                return 300;\n            return 240;\n        } else if (property.config?.storageMeta) {\n            return 220;\n        } else if (property.config?.enumValues) {\n            return 200;\n        } else if (property.config?.multiline) {\n            return 300;\n        } else if (property.config?.markdown) {\n            return 300;\n        } else if (property.validation?.email) {\n            return 200;\n        } else {\n            return 200;\n        }\n    } else if (property.dataType === \"array\") {\n        const arrayProperty = property as ArrayProperty;\n        if (arrayProperty.of) {\n            return getPropertyColumnWidth(arrayProperty.of as Property);\n        } else {\n            return 300;\n        }\n    } else if (property.dataType === \"number\") {\n        if (property.config?.enumValues) {\n            return 200;\n        }\n        return 140;\n    } else if (property.dataType === \"map\") {\n        return 360;\n    } else if (property.dataType === \"timestamp\") {\n        return 160;\n    } else if (property.dataType === \"reference\") {\n        return 220;\n    } else if (property.dataType === \"boolean\") {\n        return 140;\n    } else {\n        return 200;\n    }\n}\n\n\nexport function getSubcollectionColumnId(collection: EntityCollection) {\n    return `subcollection:${collection.path}`;\n}\n\nexport function useColumnIds<M>(collection: EntityCollection<M>, resolvedSchema:ResolvedEntitySchema<M>, includeSubcollections: boolean): string[] {\n\n    return useMemo(() => {\n        const initialDisplayedProperties = collection.properties;\n        const excludedProperties = collection.excludedProperties;\n        const additionalColumns = collection.additionalColumns ?? [];\n        const subCollections: EntityCollection[] = collection.subcollections ?? [];\n\n        const properties:Properties = resolvedSchema.properties;\n\n        const hiddenColumnIds: string[] = Object.entries(properties)\n            .filter(([_, property]) => {\n                return property.disabled && typeof property.disabled === \"object\" && property.disabled.hidden;\n            })\n            .map(([propertyKey, _]) => propertyKey);\n\n        const columnIds: string[] = [\n            ...Object.keys(collection.schema.properties) as string[],\n            ...additionalColumns.map((column) => column.id)\n        ];\n\n        let result: string[];\n        if (initialDisplayedProperties) {\n            result = initialDisplayedProperties\n                .map((p) => {\n                    return columnIds.find(id => id === p);\n                }).filter(c => !!c) as string[];\n        } else if (excludedProperties) {\n            result = columnIds\n                .filter(id => !(excludedProperties as string[]).includes(id));\n        } else {\n            result = columnIds.filter((columnId) => !hiddenColumnIds.includes(columnId));\n        }\n\n        if (includeSubcollections) {\n            const subCollectionIds = subCollections\n                .map((collection) => getSubcollectionColumnId(collection))\n                .filter((subColId) => excludedProperties ? !excludedProperties?.includes(subColId) : true);\n            result.push(...subCollectionIds.filter((subColId) => !result.includes(subColId)));\n        }\n\n        return result;\n\n    }, [collection.properties, collection.excludedProperties, collection.additionalColumns, collection.subcollections, collection.schema.properties, resolvedSchema.properties, includeSubcollections]);\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { alpha, darken, Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { FormControl, IconButton } from \"@mui/material\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        search: {\n            position: \"relative\",\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 40,\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: theme.palette.mode === \"light\" ? alpha(theme.palette.common.black, 0.05) : darken(theme.palette.background.default, 0.2),\n            \"&:hover\": {\n                backgroundColor: theme.palette.mode === \"light\" ? alpha(theme.palette.common.black, 0.10) : darken(theme.palette.background.default, 0.3)\n            },\n            marginLeft: theme.spacing(1),\n            [theme.breakpoints.up(\"sm\")]: {\n                marginLeft: theme.spacing(1),\n                width: \"auto\"\n            }\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: \"100%\",\n            position: \"absolute\",\n            pointerEvents: \"none\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n        },\n        inputRoot: {\n            color: \"inherit\",\n            minHeight: \"inherit\"\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n            transition: theme.transitions.create(\"width\"),\n            width: \"100%\",\n            [theme.breakpoints.up(\"sm\")]: {\n                width: \"12ch\"\n            }\n        },\n        inputActive: {\n            [theme.breakpoints.up(\"sm\")]: {\n                width: \"20ch\"\n            }\n        }\n    })\n);\n\n\ninterface SearchBarProps {\n    onTextSearch: (searchString?: string) => void;\n}\n\nexport function SearchBar({ onTextSearch }: SearchBarProps) {\n\n    const classes = useStyles();\n\n    const [searchText, setSearchText] = useState<string>(\"\");\n    const [active, setActive] = useState<boolean>(false);\n\n    /**\n     * Debounce on Search text update\n     */\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                if (searchText) {\n                    onTextSearch(searchText);\n                } else {\n                    onTextSearch(undefined);\n                }\n            }, 250);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [searchText]\n    );\n\n    const clearText = useCallback(() => {\n        setSearchText(\"\");\n        onTextSearch(undefined);\n    }, []);\n\n    return (\n        <FormControl>\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon htmlColor={\"#666\"}/>\n                </div>\n                <InputBase\n                    placeholder=\"Search\"\n                    value={searchText}\n                    onChange={(event) => {\n                        setSearchText(event.target.value);\n                    }}\n                    onFocus={() => setActive(true)}\n                    onBlur={() => setActive(false)}\n                    classes={{\n                        root: classes.inputRoot,\n                        input: clsx(classes.inputInput, {\n                            [classes.inputActive]: active\n                        })\n                    }}\n                    endAdornment={searchText\n                        ? <IconButton\n                            size={\"small\"}\n                            onClick={clearText}>\n                            <ClearIcon fontSize={\"small\"}/>\n                        </IconButton>\n                        : <div style={{ width: 26 }}/>\n                    }\n                    inputProps={{ \"aria-label\": \"search\" }}\n                />\n            </div>\n        </FormControl>\n    );\n}\n","import React from \"react\";\nimport {\n    alpha,\n    Box,\n    CircularProgress,\n    darken,\n    Hidden,\n    IconButton,\n    InputBase,\n    MenuItem,\n    Select,\n    Theme,\n    Tooltip,\n    useMediaQuery,\n    useTheme\n} from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { CollectionSize } from \"../../../../models\";\nimport { SearchBar } from \"./SearchBar\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        toolbar: {\n            minHeight: 56,\n            [theme.breakpoints.down(\"xl\")]: {\n                paddingLeft: theme.spacing(0.5),\n                paddingRight: theme.spacing(0.5)\n            },\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1),\n            backgroundColor: theme.palette.mode === \"light\" ? theme.palette.common.white : theme.palette.background.default,\n            borderBottom: `1px solid ${theme.palette.divider}`,\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            width: \"100%\"\n        },\n        actions: {\n            display: \"flex\",\n            alignItems: \"center\",\n            \"& > *\": {\n                [theme.breakpoints.down(\"md\")]: {\n                    marginRight: theme.spacing(0.5)\n                },\n                marginRight: theme.spacing(1)\n            }\n        },\n        selectRoot: {\n            \"label + &\": {\n                marginTop: theme.spacing(3)\n            }\n        },\n        input: {\n            borderRadius: 4,\n            position: \"relative\",\n            backgroundColor: theme.palette.mode === \"light\" ? alpha(theme.palette.common.black, 0.05) : darken(theme.palette.background.default, 0.2),\n            fontSize: 14,\n            fontWeight: theme.typography.fontWeightMedium,\n            padding: \"10px 26px 10px 12px\",\n            transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n            \"&:focus\": {\n                borderRadius: 4\n            }\n        },\n        item: {\n            backgroundColor: theme.palette.background.default,\n            fontSize: 14,\n            fontWeight: theme.typography.fontWeightMedium,\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            \"&:hover\": {\n                backgroundColor: darken(theme.palette.background.default, 0.1)\n            },\n            \"&:focus\": {\n                backgroundColor: darken(theme.palette.background.default, 0.2),\n                \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                    color: theme.palette.text.primary\n                }\n            }\n        }\n    })\n);\n\n\ninterface CollectionTableToolbarProps {\n    size: CollectionSize;\n    filterIsSet: boolean;\n    actions?: React.ReactNode;\n    loading: boolean;\n    title?: React.ReactNode,\n    onTextSearch?: (searchString?: string) => void;\n    onSizeChanged: (size: CollectionSize) => void;\n\n    clearFilter(): void;\n}\n\nexport function CollectionTableToolbar<M extends { [Key: string]: any }>(props: CollectionTableToolbarProps) {\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const largeLayout = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    const filterView = props.filterIsSet &&\n        <Box display={\"flex\"}\n             alignItems=\"center\">\n\n            <Tooltip title=\"Clear filter\">\n                <IconButton\n                    style={{ height: \"fit-content\" }}\n                    aria-label=\"filter clear\"\n                    onClick={props.clearFilter}\n                    size=\"large\">\n                    <ClearIcon/>\n                </IconButton>\n            </Tooltip>\n\n        </Box>;\n\n    const sizeSelect = (\n        <Select\n            variant={\"standard\"}\n            value={props.size}\n            style={{ width: 56 }}\n            onChange={(evt: any) => {\n                props.onSizeChanged(evt.target.value);\n            }}\n            MenuProps={{\n                MenuListProps: {\n                    disablePadding: true,\n                    style: {\n                        borderRadius: 4\n                    }\n                },\n                elevation: 1\n            }}\n            input={<InputBase classes={{\n                root: classes.selectRoot,\n                input: classes.input\n            }}/>}\n            renderValue={(value: any) => value.toUpperCase()}\n        >\n            {[\"xs\", \"s\", \"m\", \"l\", \"xl\"].map((value) => (\n                <MenuItem\n                    classes={{\n                        root: classes.item\n                    }}\n                    key={`size-select-${value}`} value={value}>\n                    {value.toUpperCase()}\n                </MenuItem>\n            ))}\n        </Select>\n    );\n\n    return (\n        <div\n            className={classes.toolbar}\n        >\n\n            <Box display={\"flex\"}\n                 alignItems=\"center\">\n\n                {props.title && <Hidden lgDown>\n                    <Box mr={2}>\n                        {props.title}\n                    </Box>\n                </Hidden>}\n\n                {sizeSelect}\n\n                {filterView}\n\n\n            </Box>\n\n\n            <div className={classes.actions}>\n\n                {largeLayout && <Box width={22}>\n                    {props.loading &&\n                    <CircularProgress size={16} thickness={8}/>}\n                </Box>}\n\n                {props.onTextSearch &&\n                <SearchBar\n                    key={\"search-bar\"}\n                    onTextSearch={props.onTextSearch}/>\n                }\n\n                {props.actions}\n\n            </div>\n\n        </div>\n    );\n}\n","import { CollectionSize, Entity } from \"../../../../models\";\n\nimport React, { MouseEvent, useCallback } from \"react\";\nimport {\n    alpha,\n    Checkbox,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    Menu,\n    MenuItem,\n    Skeleton,\n    Theme,\n    Tooltip,\n    Typography\n} from \"@mui/material\";\nimport { Delete, FileCopy, KeyboardTab, MoreVert } from \"@mui/icons-material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useTableStyles = makeStyles<Theme>(theme => createStyles({\n    tableContainer: {\n        width: \"100%\",\n        height: \"100%\",\n        flexGrow: 1\n    },\n    headerTypography: {\n        fontSize: \"0.750rem\",\n        fontWeight: 600,\n        textTransform: \"uppercase\"\n    },\n    header: {\n        width: \"calc(100% + 24px)\",\n        margin: \"0px -12px\",\n        padding: \"0px 12px\",\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.default,\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        height: \"100%\",\n        fontSize: \"0.750rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 600\n    },\n    tableRow: {\n        cursor: \"pointer\",\n        display: \"flex\",\n        alignItems: \"center\",\n        fontSize: \"0.875rem\"\n    },\n    tableRowClickable: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.mode === \"dark\" ? alpha(theme.palette.background.default, 0.6) : alpha(theme.palette.background.default, 0.5)\n        }\n    },\n    column: {\n        padding: \"0px !important\"\n    },\n    cellButtonsWrap: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        backgroundColor: theme.palette.mode === \"dark\" ? alpha(theme.palette.background.default, 0.8) : alpha(theme.palette.background.default, 0.8)\n    },\n    cellButtons: {\n        minWidth: 138\n    },\n    cellButtonsId: {\n        width: 138,\n        textAlign: \"center\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\"\n    },\n    selectContainer: {\n        display: \"flex\",\n        justifyContent: \"space-around\"\n    },\n    verticalLine: {\n        width: \"1px\",\n        backgroundColor: \"#dfdfdf\",\n        height: \"55px\"\n    },\n    \"select-all\": {\n        position: \"absolute\",\n        top: \"-100px\",\n        right: \"-100px\",\n        opacity: \"0\"\n    }\n}));\n\n\n/**\n *\n * @param entity\n * @param isSelected\n * @param isAllSelected\n * @param selectionEnabled\n * @param size\n * @param toggleEntitySelection\n * @param data\n * @param selectAll\n * @param onCopyClicked\n * @param onEditClicked\n * @param onDeleteClicked\n * @constructor\n *\n * @category Collection components\n */\nexport function CollectionRowActions<M extends { [Key: string]: any }>({\n                                                                           entity,\n                                                                           isSelected,\n                                                                           isAllSelected,\n                                                                           selectionEnabled,\n                                                                           size,\n                                                                           toggleEntitySelection,\n                                                                           selectAll,\n                                                                           onCopyClicked,\n                                                                           onEditClicked,\n                                                                           onDeleteClicked,\n                                                                           data\n                                                                       }:\n                                                                           {\n                                                                               entity: Entity<M>,\n                                                                               size: CollectionSize,\n                                                                               isSelected?: boolean,\n                                                                               isAllSelected?: any,\n                                                                               selectionEnabled?: boolean,\n                                                                               toggleEntitySelection?: (selectedEntity: Entity<M>) => void\n                                                                               selectAll?: (data: any) => void\n                                                                               onEditClicked?: (selectedEntity: Entity<M>) => void,\n                                                                               onCopyClicked?: (selectedEntity: Entity<M>) => void,\n                                                                               onDeleteClicked?: (selectedEntity: Entity<M>) => void,\n                                                                               data?: any\n                                                                           }) {\n\n    const editEnabled = Boolean(onEditClicked);\n    const copyEnabled = Boolean(onCopyClicked);\n    const deleteEnabled = Boolean(onDeleteClicked);\n\n    const classes = useTableStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState<any | null>(null);\n\n    const openMenu = useCallback((event: React.MouseEvent) => {\n        setAnchorEl(event.currentTarget);\n        event.stopPropagation();\n    }, [setAnchorEl]);\n\n    const closeMenu = useCallback(() => {\n        setAnchorEl(null);\n    }, [setAnchorEl]);\n\n    const onCheckboxChange = (event: React.ChangeEvent) => {\n        if (toggleEntitySelection)\n            toggleEntitySelection(entity);\n        event.stopPropagation();\n    };\n    const onCheckboxChange1 = (event: React.ChangeEvent) => {\n        if (selectAll) {\n            selectAll(entity)\n        }\n        event.stopPropagation();\n    };\n\n    const onDeleteClick = useCallback((event: MouseEvent) => {\n        event.stopPropagation();\n        if (onDeleteClicked)\n            onDeleteClicked(entity);\n        setAnchorEl(null);\n    }, [entity, onDeleteClicked, setAnchorEl]);\n\n    const onCopyClick = useCallback((event: MouseEvent) => {\n        event.stopPropagation();\n        if (onCopyClicked)\n            onCopyClicked(entity);\n        setAnchorEl(null);\n    }, [entity, onCopyClicked, setAnchorEl]);\n\n    return (\n        <div className={classes.cellButtonsWrap}>\n\n            {(editEnabled || deleteEnabled || selectionEnabled) &&\n                <div className={classes.cellButtons}\n                >\n                    (\n                    <div className={classes.selectContainer}>\n                        {editEnabled &&\n                            <Tooltip title={`Edit ${entity.id}`}>\n                                <IconButton\n                                    onClick={(event: MouseEvent) => {\n                                        event.stopPropagation();\n                                        if (onEditClicked)\n                                            onEditClicked(entity);\n                                    }}\n                                    size=\"large\">\n                                    <KeyboardTab/>\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <span className={classes.verticalLine}></span>\n                        {selectionEnabled &&\n                            <div>\n                                <Tooltip title={`Select ${entity.id}`} style={{ marginTop: \"5px\" }}>\n                                    <Checkbox\n                                        checked={isSelected}\n                                        onChange={onCheckboxChange}\n                                    />\n                                </Tooltip>\n                                <Tooltip title={\"Select All\"} className={classes[\"select-all\"] + \" select-all\"}>\n                                    <Checkbox\n                                        checked={isAllSelected}\n                                        onChange={onCheckboxChange1}\n                                    />\n                                </Tooltip>\n                            </div>}\n                    </div>\n                    )\n                </div>}\n\n            {size !== \"xs\" && (\n                <div className={classes.cellButtonsId}>\n\n                    {entity\n                        ? <Typography\n                            className={\"mono\"}\n                            variant={\"caption\"}\n                            color={\"textSecondary\"}> {entity.id} </Typography>\n                        : <Skeleton variant=\"text\"/>\n                    }\n                </div>\n            )}\n\n        </div>\n    );\n\n}\n","import { TableSize } from \"./TableProps\";\n\nexport function getRowHeight(size: TableSize): number {\n    switch (size) {\n        case \"xl\":\n            return 400;\n        case \"l\":\n            return 280;\n        case \"m\":\n            return 140;\n        case \"s\":\n            return 80;\n        case \"xs\":\n            return 54;\n        default:\n            throw Error(\"Missing mapping for collection size -> height\");\n    }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { IconButton, Theme, Tooltip } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport Measure, { ContentRect } from \"react-measure\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport clsx from \"clsx\";\nimport { CellStyleProps } from \"./styles\";\nimport { getRowHeight } from \"./common\";\nimport isEqual from \"react-fast-compare\";\n\nexport const useCellStyles = makeStyles<Theme, CellStyleProps & { disabled: boolean, removePadding?: boolean }>(theme => createStyles({\n        tableCell: {\n            position: \"relative\",\n            height: \"100%\",\n            width: \"100%\",\n            border: \"2px solid transparent\",\n            borderRadius: 4,\n            overflow: \"hidden\",\n            contain: \"strict\",\n            display: \"flex\",\n            padding: ({ size, removePadding }) => {\n                if (removePadding) return 0;\n                switch (size) {\n                    case \"l\":\n                    case \"xl\":\n                        return theme.spacing(2);\n                    case \"m\":\n                        return theme.spacing(1);\n                    case \"s\":\n                        return theme.spacing(0.5);\n                    default:\n                        return theme.spacing(0.25);\n                }\n            },\n            \"&:hover\": {\n                backgroundColor: ({ disabled }: any) => disabled ? undefined : (theme.palette.mode === \"dark\" ? theme.palette.background.paper : theme.palette.background.default)\n            },\n            justifyContent: ({ align }) => {\n                switch (align) {\n                    case \"right\":\n                        return \"flex-end\";\n                    case \"center\":\n                        return \"center\";\n                    case \"left\":\n                    default:\n                        return \"flex-start\";\n                }\n            }\n        },\n        fullWidth: {\n            width: \"100%\"\n        },\n        fullHeight: {\n            height: \"100%\"\n        },\n        error: {\n            border: `2px solid ${theme.palette.error.light} !important`\n        },\n        selected: {\n            backgroundColor: theme.palette.mode === \"dark\" ? theme.palette.background.paper : theme.palette.background.default,\n            border: \"2px solid #5E9ED6\",\n            transition: \"border-color 300ms ease-in-out\"\n        },\n        saved: {\n            border: `2px solid ${theme.palette.success.light}`\n        },\n        disabled: {\n            alpha: 0.8\n        },\n        iconsTop: {\n            position: \"absolute\",\n            top: 2,\n            right: 2\n        },\n        arrow: {\n            color: theme.palette.error.light\n        },\n        tooltip: {\n            margin: \"0 8px\",\n            backgroundColor: theme.palette.error.light\n        },\n        centered: {\n            alignItems: \"center\"\n        },\n        faded: {\n            \"-webkit-mask-image\": \"linear-gradient(to bottom, black 60%, transparent 100%)\",\n            maskImage: \"linear-gradient(to bottom, black 60%, transparent 100%)\",\n            alignItems: \"start\"\n        },\n        scrollable: {\n            overflow: \"auto\",\n            alignItems: \"start\"\n        }\n    })\n);\n\n\n\ninterface TableCellProps {\n    children: React.ReactNode;\n    /**\n     * The value is used only to check changes and force rerenders\n     */\n    value?: any;\n    disabled: boolean;\n    saved?: boolean;\n    error?: Error;\n    allowScroll?: boolean;\n    disabledTooltip?: string;\n    focused?: boolean;\n    selected?: boolean;\n    showExpandIcon?: boolean;\n    removePadding?: boolean;\n    fullHeight?: boolean;\n    select?: (cellRect: DOMRect | undefined) => void;\n    openPopup?: (cellRect: DOMRect | undefined) => void;\n}\n\nconst TableCellInternal = ({\n                                     children,\n                                     selected,\n                                     focused,\n                                     disabled,\n                                     disabledTooltip,\n                                     size,\n                                     saved,\n                                     error,\n                                     align,\n                                     allowScroll,\n                                     openPopup,\n                                     removePadding,\n                                     fullHeight,\n                                     select,\n                                     showExpandIcon = true\n                                 }: TableCellProps & CellStyleProps) => {\n\n    const ref = React.createRef<HTMLDivElement>();\n\n    const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n    const maxHeight = useMemo(() => getRowHeight(size), [size]);\n\n    const [onHover, setOnHover] = useState(false);\n    const [internalSaved, setInternalSaved] = useState(saved);\n\n    const iconRef = React.createRef<HTMLButtonElement>();\n    useEffect(() => {\n        if (iconRef.current && focused) {\n            iconRef.current.focus({ preventScroll: true });\n        }\n    }, [focused]);\n\n    useEffect(() => {\n        if (internalSaved !== saved) {\n            if (saved) {\n                setInternalSaved(true);\n            } else {\n                setInternalSaved(true);\n            }\n        }\n        const removeSavedState = () => {\n            setInternalSaved(false);\n        };\n        const handler = setTimeout(removeSavedState, 500);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [saved]);\n\n    const doOpenPopup = useCallback(() => {\n        if (openPopup) {\n            const cellRect = ref && ref?.current?.getBoundingClientRect();\n            openPopup(cellRect);\n        }\n    }, [ref]);\n\n    const onClick = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\n        if (event.detail === 3) {\n            doOpenPopup();\n        }\n    }, [doOpenPopup]);\n\n    const onSelect = useCallback(() => {\n        if (!select) return;\n        const cellRect = ref && ref?.current?.getBoundingClientRect();\n        if (disabled) {\n            select(undefined);\n        } else if (!selected && cellRect) {\n            select(cellRect);\n        }\n    }, [ref, select, selected, disabled]);\n\n    const onFocus = useCallback((event: React.SyntheticEvent<HTMLDivElement>) => {\n        onSelect();\n        event.stopPropagation();\n    }, [onSelect]);\n\n    const onMeasure = useCallback((contentRect: ContentRect) => {\n        if (contentRect?.bounds) {\n            const newOverflowingValue = contentRect.bounds.height > maxHeight;\n            if (isOverflowing !== newOverflowingValue)\n                setIsOverflowing(newOverflowingValue);\n        }\n    }, [isOverflowing, maxHeight]);\n\n    const cellClasses = useCellStyles({\n        size,\n        align,\n        disabled,\n        removePadding\n    });\n\n    const measuredDiv = <Measure\n        bounds\n        onResize={onMeasure}\n    >\n        {({ measureRef }) => (\n            <div ref={measureRef}\n                 className={clsx(cellClasses.fullWidth, { [cellClasses.fullHeight]: fullHeight })}>\n                {children}\n            </div>\n        )}\n    </Measure>;\n\n    return (\n        <div\n            tabIndex={selected || disabled ? undefined : 0}\n            ref={ref}\n            onFocus={onFocus}\n            onClick={onClick}\n            onMouseEnter={() => setOnHover(true)}\n            onMouseMove={() => setOnHover(true)}\n            onMouseLeave={() => setOnHover(false)}\n            // style={{\n            //     background: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n            // }}\n            className={clsx(\n                cellClasses.tableCell,\n                {\n                    [cellClasses.disabled]: disabled,\n                    [cellClasses.centered]: disabled || !isOverflowing,\n                    [cellClasses.error]: error,\n                    [cellClasses.saved]: selected && internalSaved,\n                    [cellClasses.selected]: !error && (selected || focused),\n                    [cellClasses.fullHeight]: fullHeight\n                })}>\n\n            <div className={clsx(cellClasses.fullWidth, {\n                [cellClasses.faded]: !disabled && !allowScroll && isOverflowing,\n                [cellClasses.scrollable]: !disabled && allowScroll && isOverflowing,\n                [cellClasses.fullHeight]: fullHeight\n            })}>\n                {measuredDiv}\n            </div>\n\n            {disabled && onHover && disabledTooltip &&\n            <div style={{\n                position: \"absolute\",\n                top: 4,\n                right: 4,\n                fontSize: \"14px\"\n            }}>\n                <Tooltip title={disabledTooltip}>\n                    <RemoveCircleIcon color={\"disabled\"}\n                                      fontSize={\"inherit\"}/>\n                </Tooltip>\n            </div>}\n\n            {(error || showExpandIcon) &&\n            <div className={cellClasses.iconsTop}>\n\n                {selected && !disabled && showExpandIcon &&\n                <IconButton\n                    ref={iconRef}\n                    color={\"inherit\"}\n                    size={\"small\"}\n                    onClick={doOpenPopup}>\n                    <svg\n                        className={\"MuiSvgIcon-root MuiSvgIcon-fontSizeSmall\"}\n                        fill={\"#666\"}\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 24 24\">\n                        <path className=\"cls-2\"\n                              d=\"M20,5a1,1,0,0,0-1-1L14,4h0a1,1,0,0,0,0,2h2.57L13.29,9.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L18,7.42V10a1,1,0,0,0,1,1h0a1,1,0,0,0,1-1Z\"/>\n                        <path className=\"cls-2\"\n                              d=\"M10.71,13.29a1,1,0,0,0-1.42,0L6,16.57V14a1,1,0,0,0-1-1H5a1,1,0,0,0-1,1l0,5a1,1,0,0,0,1,1h5a1,1,0,0,0,0-2H7.42l3.29-3.29A1,1,0,0,0,10.71,13.29Z\"/>\n                    </svg>\n                </IconButton>\n                }\n\n                {error && <Tooltip\n                    classes={{\n                        arrow: cellClasses.arrow,\n                        tooltip: cellClasses.tooltip\n                    }}\n                    arrow\n                    placement={\"left\"}\n                    title={error.message}>\n                    <ErrorOutlineIcon\n                        fontSize={\"inherit\"}\n                        color={\"error\"}\n                    />\n                </Tooltip>\n                }\n\n\n            </div>\n            }\n\n        </div>\n    );\n};\n\nexport const TableCell = React.memo<TableCellProps & CellStyleProps>(TableCellInternal, areEqual) as React.FunctionComponent<TableCellProps & CellStyleProps>;\n\nfunction areEqual(prevProps: TableCellProps & CellStyleProps, nextProps: TableCellProps & CellStyleProps) {\n    return prevProps.selected === nextProps.selected &&\n        prevProps.focused === nextProps.selected &&\n        prevProps.disabled === nextProps.disabled &&\n        prevProps.size === nextProps.size &&\n        prevProps.align === nextProps.align &&\n        prevProps.saved === nextProps.saved &&\n        prevProps.showExpandIcon === nextProps.showExpandIcon &&\n        prevProps.removePadding === nextProps.removePadding &&\n        prevProps.fullHeight === nextProps.fullHeight &&\n        isEqual(prevProps.value, nextProps.value)\n        ;\n}\n\n","import {\n    ArrayProperty,\n    BooleanProperty,\n    GeopointProperty,\n    MapProperty,\n    NumberProperty,\n    Properties,\n    Property,\n    ReferenceProperty,\n    StringProperty,\n    TimestampProperty\n} from \"../models\";\nimport * as yup from \"yup\";\nimport {\n    AnySchema,\n    ArraySchema,\n    BooleanSchema,\n    DateSchema,\n    NumberSchema,\n    ObjectSchema,\n    StringSchema\n} from \"yup\";\nimport { enumToObjectEntries } from \"../core/util/enums\";\n\n// Add custom unique function for array values\ndeclare module \"yup\" {\n    // tslint:disable-next-line\n    interface ArraySchema<T> {\n        uniqueInArray(mapper: (a: T) => T, message: string): ArraySchema<T>;\n    }\n}\nyup.addMethod(yup.array, \"uniqueInArray\", function(\n    mapper = (a: any) => a,\n    message: string\n) {\n    return this.test(\"uniqueInArray\", message, values => {\n        return !values || values.length === new Set(values.map(mapper)).size;\n    });\n});\n\n\nexport type CustomFieldValidator = (props: {\n    name: string,\n    value: any,\n    property: Property,\n    parentProperty?: MapProperty | ArrayProperty\n}) => Promise<boolean>;\n\ninterface PropertyContext<PT extends Property> {\n    property: PT,\n    parentProperty?: MapProperty | ArrayProperty,\n    customFieldValidator?: CustomFieldValidator,\n    name?: any\n}\n\nexport function getYupEntitySchema<M>(properties: Properties<M>,\n                                      customFieldValidator?: CustomFieldValidator): ObjectSchema<any> {\n    const objectSchema: any = {};\n    Object.entries(properties).forEach(([name, property]) => {\n        objectSchema[name] = mapPropertyToYup({\n            property,\n            customFieldValidator,\n            name\n        });\n    });\n    return yup.object().shape(objectSchema);\n}\n\nexport function mapPropertyToYup(propertyContext: PropertyContext<any>): AnySchema<unknown> {\n\n    const property = propertyContext.property;\n    if (typeof property === \"function\") {\n        console.log(\"Error in property\", propertyContext);\n        throw Error(\"PropertyBuilders can only be defined as the root properties in entity schemas, not in child properties\");\n    }\n\n    if (property.dataType === \"string\") {\n        return getYupStringSchema(propertyContext);\n    } else if (property.dataType === \"number\") {\n        return getYupNumberSchema(propertyContext);\n    } else if (property.dataType === \"boolean\") {\n        return getYupBooleanSchema(propertyContext);\n    } else if (property.dataType === \"map\") {\n        return getYupMapObjectSchema(propertyContext);\n    } else if (property.dataType === \"array\") {\n        return getYupArraySchema(propertyContext);\n    } else if (property.dataType === \"timestamp\") {\n        return getYupDateSchema(propertyContext);\n    } else if (property.dataType === \"geopoint\") {\n        return getYupGeoPointSchema(propertyContext);\n    } else if (property.dataType === \"reference\") {\n        return getYupReferenceSchema(propertyContext);\n    }\n    console.error(\"Unsupported data type in yup mapping\", property)\n    throw Error(\"Unsupported data type in yup mapping\");\n}\n\nexport function getYupMapObjectSchema({\n                                                                            property,\n                                                                            parentProperty,\n                                                                            customFieldValidator,\n                                                                            name\n                                                                        }: PropertyContext<MapProperty>): ObjectSchema<any> {\n    const objectSchema: any = {};\n    if (property.properties)\n        Object.entries(property.properties).forEach(([childName, childProperty]: [string, Property]) => {\n            objectSchema[childName] = mapPropertyToYup({\n                property: childProperty,\n                parentProperty: property,\n                customFieldValidator,\n                name: `${name}[${childName}]`\n            });\n        });\n    return yup.object().shape(objectSchema);\n}\n\nfunction getYupStringSchema({\n                                property,\n                                parentProperty,\n                                customFieldValidator,\n                                name\n                            }: PropertyContext<StringProperty>): StringSchema {\n    let schema: StringSchema<any> = yup.string();\n    const validation = property.validation;\n    if (property.config?.enumValues) {\n        if (validation?.required)\n            schema = schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\");\n        schema = schema.oneOf(\n            enumToObjectEntries(property.config?.enumValues)\n                .map(([key, _]) => key)\n        );\n    }\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.unique && customFieldValidator && name)\n            schema = schema.test(\"unique\", \"This value already exists and should be unique\",\n                (value, context) =>\n                    customFieldValidator({\n                        name,\n                        property,\n                        parentProperty,\n                        value\n                    }));\n        if (validation.min || validation.min === 0) schema = schema.min(validation.min, `${property.title} must be min ${validation.min} characters long`);\n        if (validation.max || validation.max === 0) schema = schema.max(validation.max, `${property.title} must be max ${validation.max} characters long`);\n        if (validation.matches) schema = schema.matches(validation.matches, validation.matchesMessage);\n        if (validation.email) schema = schema.email(`${property.title} must be an email`);\n        if (validation.url) schema = schema.url(`${property.title} must be a url`);\n        if (validation.trim) schema = schema.trim();\n        if (validation.lowercase) schema = schema.lowercase();\n        if (validation.uppercase) schema = schema.uppercase();\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction getYupNumberSchema({\n                                property,\n                                parentProperty,\n                                customFieldValidator,\n                                name\n                            }: PropertyContext<NumberProperty>): NumberSchema {\n    const validation = property.validation;\n    let schema: NumberSchema<any> = yup.number().typeError(\"Must be a number\");\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.unique && customFieldValidator && name)\n            schema = schema.test(\"unique\",\n                \"This value already exists and should be unique\",\n                (value) => customFieldValidator({\n                    name,\n                    property,\n                    parentProperty,\n                    value\n                }));\n        if (validation.min || validation.min === 0) schema = schema.min(validation.min, `${property.title} must be higher or equal to ${validation.min}`);\n        if (validation.max || validation.max === 0) schema = schema.max(validation.max, `${property.title} must be lower or equal to ${validation.max}`);\n        if (validation.lessThan || validation.lessThan === 0) schema = schema.lessThan(validation.lessThan, `${property.title} must be higher than ${validation.lessThan}`);\n        if (validation.moreThan || validation.moreThan === 0) schema = schema.moreThan(validation.moreThan, `${property.title} must be lower than ${validation.moreThan}`);\n        if (validation.positive) schema = schema.positive(`${property.title} must be positive`);\n        if (validation.negative) schema = schema.negative(`${property.title} must be negative`);\n        if (validation.integer) schema = schema.integer(`${property.title} must be an integer`);\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction getYupGeoPointSchema({\n                                  property,\n                                  parentProperty,\n                                  customFieldValidator,\n                                  name\n                              }: PropertyContext<GeopointProperty>): AnySchema {\n    let schema: ObjectSchema<any> = yup.object();\n    const validation = property.validation;\n    if (validation?.unique && customFieldValidator && name)\n        schema = schema.test(\"unique\",\n            \"This value already exists and should be unique\",\n            (value) => customFieldValidator({\n                name,\n                property,\n                parentProperty,\n                value\n            }));\n    if (validation?.required) {\n        schema = schema.required(validation.requiredMessage).nullable(true);\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction getYupDateSchema({\n                              property,\n                              parentProperty,\n                              customFieldValidator,\n                              name\n                          }: PropertyContext<TimestampProperty>): AnySchema | DateSchema {\n    if (property.autoValue) {\n        return yup.object().nullable(true);\n    }\n    let schema: DateSchema<any> = yup.date();\n    const validation = property.validation;\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.unique && customFieldValidator && name)\n            schema = schema.test(\"unique\",\n                \"This value already exists and should be unique\",\n                (value) => customFieldValidator({\n                    name,\n                    property,\n                    parentProperty,\n                    value\n                }));\n        if (validation.min) schema = schema.min(validation.min, `${property.title} must be after ${validation.min}`);\n        if (validation.max) schema = schema.max(validation.max, `${property.title} must be before ${validation.min}`);\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction getYupReferenceSchema({\n                                                                     property,\n                                                                     parentProperty,\n                                                                     customFieldValidator,\n                                                                     name\n                                                                 }: PropertyContext<ReferenceProperty>): AnySchema {\n    let schema: ObjectSchema<any> = yup.object();\n    const validation = property.validation;\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.unique && customFieldValidator && name)\n            schema = schema.test(\"unique\",\n                \"This value already exists and should be unique\",\n                (value) => customFieldValidator({\n                    name,\n                    property,\n                    parentProperty,\n                    value\n                }));\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction getYupBooleanSchema({\n                                 property,\n                                 parentProperty,\n                                 customFieldValidator,\n                                 name\n                             }: PropertyContext<BooleanProperty>): BooleanSchema {\n    let schema: BooleanSchema<any> = yup.boolean();\n    const validation = property.validation;\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.unique && customFieldValidator && name)\n            schema = schema.test(\"unique\",\n                \"This value already exists and should be unique\",\n                (value) => customFieldValidator({\n                    name,\n                    property,\n                    parentProperty,\n                    value\n                }));\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n\nfunction hasUniqueInArrayModifier(property: Property): boolean | [string, Property][] {\n    if (property.validation?.uniqueInArray) {\n        return true;\n    } else if (property.dataType === \"map\" && property.properties) {\n        return Object.entries(property.properties)\n            .filter(([key, childProperty]) => childProperty.validation?.uniqueInArray);\n    }\n    return false;\n}\n\nfunction getYupArraySchema({\n                                  property,\n                                  parentProperty,\n                                  customFieldValidator,\n                                  name\n                              }: PropertyContext<ArrayProperty>): ArraySchema<any> {\n\n    let schema: ArraySchema<any> = yup.array();\n\n    if (property.of) {\n        schema = schema.of(mapPropertyToYup({\n            property: property.of,\n            parentProperty: property\n        }));\n        const arrayUniqueFields = hasUniqueInArrayModifier(property.of);\n        if (arrayUniqueFields) {\n            if (typeof arrayUniqueFields === \"boolean\") {\n                schema = schema.uniqueInArray(v => v, `${property.title} should have unique values within the array`);\n            } else if (Array.isArray(arrayUniqueFields)) {\n                arrayUniqueFields.forEach(([name, childProperty]) => {\n                        schema = schema.uniqueInArray(v => v && v[name], `${property.title} → ${childProperty.title ?? name}: should have unique values within the array`);\n                    }\n                );\n            }\n        }\n    }\n    const validation = property.validation;\n\n    if (validation) {\n        schema = validation.required\n            ? schema.required(validation?.requiredMessage ? validation.requiredMessage : \"Required\").nullable(true)\n            : schema.notRequired().nullable(true);\n        if (validation.min || validation.min === 0) schema = schema.min(validation.min, `${property.title} should be min ${validation.min} entries long`);\n        if (validation.max) schema = schema.max(validation.max, `${property.title} should be max ${validation.max} entries long`);\n    } else {\n        schema = schema.notRequired().nullable(true);\n    }\n    return schema;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { TextareaAutosize, Theme } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\n\nexport const useInputStyles = makeStyles<Theme>(theme => createStyles({\n        input: {\n            padding: 0,\n            margin: 0,\n            width: \"100%\",\n            color: \"unset\",\n            fontWeight: \"unset\",\n            lineHeight: \"unset\",\n            fontSize: \"unset\",\n            fontFamily: \"unset\",\n            background: \"unset\",\n            border: \"unset\",\n            resize: \"none\",\n            outline: \"none\"\n        }\n    })\n);\n\nexport function TableInput(props: {\n    error: Error | undefined;\n    value: string;\n    multiline: boolean;\n    focused: boolean;\n    disabled: boolean;\n    updateValue: (newValue: (string | null)) => void;\n}) {\n    const { disabled, value, multiline, updateValue, focused } = props;\n    const [internalValue, setInternalValue] = useState<typeof value>(value);\n    const focusedState = useRef<boolean>(false);\n\n    useEffect(\n        () => {\n            const doUpdate = () => {\n                const emptyInitialValue = !value || value.length === 0;\n                if (emptyInitialValue && !internalValue)\n                    return;\n                if (internalValue !== value)\n                    updateValue(internalValue);\n            };\n            const handler = setTimeout(doUpdate, 300);\n\n            return () => {\n                clearTimeout(handler);\n            };\n\n        },\n        [internalValue]\n    );\n\n    useEffect(\n        () => {\n            if (!focused && value !== internalValue)\n                setInternalValue(value);\n        },\n        [value, focused]\n    );\n\n    const classes = useInputStyles();\n\n    const ref = React.createRef<HTMLTextAreaElement>();\n    useEffect(() => {\n        if (ref.current && focused && !focusedState.current) {\n            focusedState.current = true;\n            ref.current.focus({ preventScroll: true });\n            ref.current.selectionStart = ref.current.value.length;\n            ref.current.selectionEnd = ref.current.value.length;\n        } else {\n            focusedState.current = focused;\n        }\n    }, [focused, ref]);\n\n    return (\n        <div style={{ display: \"flex\" }}>\n            <TextareaAutosize\n                ref={ref}\n                disabled={disabled}\n                className={clsx(classes.input)}\n                value={internalValue ?? \"\"}\n                onChange={(evt) => {\n                    const newValue = evt.target.value as string;\n                    if (multiline || !newValue.endsWith(\"\\n\"))\n                        setInternalValue(newValue);\n                }}\n            />\n        </div>\n    );\n}\n","import { EnumValues } from \"../../../../../models\";\nimport { ArrayEnumPreview } from \"../../../../../preview\";\nimport React, { useEffect, useState } from \"react\";\nimport { Checkbox, ListItemText, MenuItem, Select, Theme } from \"@mui/material\";\nimport {\n    enumToObjectEntries,\n    isEnumValueDisabled\n} from \"../../../../util/enums\";\nimport { EnumValuesChip } from \"../../../../../preview/components/CustomChip\";\n\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useInputStyles = makeStyles<Theme>(theme => createStyles({\n        select: {\n            height: \"100%\"\n        },\n        selectRoot: {\n            display: \"flex\",\n            alignItems: \"center\",\n            height: \"100%\"\n        }\n    })\n);\n\nexport function TableSelect(props: {\n    name: string;\n    enumValues: EnumValues;\n    error: Error | undefined;\n    multiple: boolean;\n    disabled: boolean;\n    small: boolean;\n    internalValue: string | number | string[] | number[] | undefined;\n    valueType: \"string\" | \"number\";\n    updateValue: (newValue: (string | number | string[] | number[] | null)) => void;\n    focused: boolean;\n    onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    setPreventOutsideClick: (value: any) => void;\n}) {\n\n    const {\n        name,\n        enumValues,\n        error,\n        internalValue,\n        disabled,\n        small,\n        focused,\n        updateValue,\n        multiple,\n        setPreventOutsideClick,\n        valueType\n    } = props;\n\n    const [open, setOpen] = useState<boolean>(false);\n    const handleOpen = () => {\n        setPreventOutsideClick(true);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setPreventOutsideClick(false);\n        setOpen(false);\n    };\n\n    const classes = useInputStyles();\n\n    const validValue = (Array.isArray(internalValue) && multiple) ||\n        (!Array.isArray(internalValue) && !multiple);\n\n    const ref = React.createRef<HTMLInputElement>();\n    useEffect(() => {\n        if (ref.current && focused) {\n            ref.current?.focus({ preventScroll: true });\n        }\n    }, [focused, ref]);\n\n    return (\n        <Select\n            variant={\"standard\"}\n            key={`table_select_${name}`}\n            inputRef={ref}\n            className={classes.select}\n            classes={{ select: classes.selectRoot }}\n            open={open}\n            disabled={disabled}\n            multiple={multiple}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            fullWidth\n            inputProps={{\n                style: {\n                    height: \"100%\"\n                }\n            }}\n            disableUnderline\n            error={!!error}\n            value={validValue\n                ? (multiple ? (internalValue as any[]).map(v => v.toString()) : internalValue)\n                : (multiple ? [] : \"\")}\n            onChange={(evt) => {\n                if (valueType === \"number\") {\n                    if (multiple) {\n                        const newValue = (evt.target.value as string[]).map((v) => parseFloat(v));\n                        updateValue(newValue);\n                    } else {\n                        updateValue(parseFloat(evt.target.value as string));\n                    }\n                } else if (valueType === \"string\") {\n                    if (!evt.target.value)\n                        updateValue(null)\n                    else\n                        updateValue(evt.target.value);\n                } else {\n                    throw Error(\"Missing mapping in TableSelect\");\n                }\n            }}\n            renderValue={(enumKey: any) => {\n                if (multiple && Array.isArray(enumKey)) {\n                    return <ArrayEnumPreview value={enumKey}\n                                             name={name}\n                                             enumValues={enumValues}\n                                             size={small ? \"small\" : \"regular\"}/>;\n                } else {\n                    return <EnumValuesChip\n                        enumKey={enumKey}\n                        enumValues={enumValues}\n                        small={small}/>;\n                }\n            }\n            }>\n\n            {enumToObjectEntries(enumValues).map(([key, labelOrConfig]) => {\n\n                const chip = <EnumValuesChip\n                    enumKey={key}\n                    enumValues={enumValues}\n                    small={true}/>;\n                if (multiple) {\n                    return (\n                        <MenuItem key={`select-${name}-${key}`}\n                                  value={key}\n                                  disabled={isEnumValueDisabled(labelOrConfig)}\n                                  dense={true}>\n                            <Checkbox\n                                checked={Array.isArray(internalValue) && (internalValue as any[]).map(v => v.toString()).includes(key.toString())}/>\n                            <ListItemText primary={chip}/>\n                        </MenuItem>\n                    );\n                } else {\n                    return (\n                        <MenuItem key={`select-${name}-${key}`} value={key}\n                                  disabled={isEnumValueDisabled(labelOrConfig)}\n                                  dense={true}>\n                            {chip}\n                        </MenuItem>\n                    );\n                }\n            })}\n        </Select>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Input, Theme } from \"@mui/material\";\nimport clsx from \"clsx\";\n\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\n\nexport const useInputStyles = makeStyles<Theme>(theme => createStyles({\n        input: {\n            padding: 0,\n            margin: 0,\n            width: \"100%\",\n            color: \"unset\",\n            fontWeight: \"unset\",\n            lineHeight: \"unset\",\n            fontSize: \"unset\",\n            fontFamily: \"unset\",\n            background: \"unset\",\n            border: \"unset\",\n            resize: \"none\",\n            outline: \"none\"\n        },\n        numberInput: {\n            textAlign: \"right\"\n        }\n    })\n);\n\nexport function NumberTableInput(props: {\n    error: Error | undefined;\n    value: number;\n    align: \"right\" | \"left\" | \"center\";\n    updateValue: (newValue: (number | null)) => void;\n    focused: boolean;\n    disabled: boolean;\n    onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n}) {\n\n    const { align, value, updateValue, focused, onBlur, disabled } = props;\n    const propStringValue = (value && typeof value === \"number\") ? value.toString() : \"\";\n    const [internalValue, setInternalValue] = useState<string | null>(propStringValue);\n\n    useEffect(\n        () => {\n            const doUpdate = () => {\n                if (internalValue !== propStringValue) {\n                    if (internalValue !== undefined && internalValue !== null) {\n                        const numberValue = parseFloat(internalValue);\n                        if (isNaN(numberValue))\n                            return;\n                        if (numberValue !== undefined && numberValue !== null)\n                            updateValue(numberValue);\n                    } else {\n                        updateValue(null);\n                    }\n                }\n            };\n            const handler = setTimeout(doUpdate, 300);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [internalValue]\n    );\n\n    useEffect(\n        () => {\n            if (!focused && propStringValue !== internalValue)\n                setInternalValue(value !== undefined && value !== null ? value.toString() : null);\n        },\n        [value, focused]\n    );\n\n    const ref = React.createRef<HTMLInputElement>();\n    const classes = useInputStyles();\n\n    useEffect(() => {\n        if (ref.current && focused) {\n            ref.current.focus({ preventScroll: true });\n        }\n    }, [focused, ref]);\n\n    const regexp = /^-?[0-9]+[,.]?[0-9]*$/;\n\n    return (\n        <Input\n            inputRef={ref}\n            style={{\n                width: \"100%\",\n                fontSize: \"unset\",\n                fontFamily: \"unset\",\n                background: \"unset\",\n                border: \"unset\",\n                resize: \"none\",\n                outline: \"none\",\n                padding: 0\n\n            }}\n            inputProps={{\n                style: {\n                    textAlign: align\n                }\n            }}\n            disabled={disabled}\n            className={clsx(classes.input, classes.numberInput)}\n            disableUnderline\n            value={internalValue ?? \"\"}\n            onBlur={onBlur}\n            onChange={(evt) => {\n                const newValue = evt.target.value.replace(\",\", \".\");\n                if (newValue.length === 0)\n                    setInternalValue(null);\n                if (regexp.test(newValue) || newValue.startsWith(\"-\"))\n                    setInternalValue(newValue);\n            }}\n        />\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { Switch } from \"@mui/material\";\n\nexport function TableSwitch(props: {\n    error: Error | undefined;\n    internalValue?: boolean;\n    focused: boolean;\n    disabled: boolean;\n    updateValue: (newValue: (boolean | null)) => void;\n}) {\n    const { disabled, internalValue, updateValue, focused } = props;\n\n    const ref = React.createRef<HTMLTextAreaElement>();\n    useEffect(() => {\n        if (ref.current && focused) {\n            ref.current.focus({ preventScroll: true });\n        }\n    }, [focused, ref]);\n\n    return (\n        <Switch\n            inputRef={ref}\n            color={\"secondary\"}\n            checked={Boolean(internalValue)}\n            disabled={disabled}\n            onChange={(evt) => {\n                const value = evt.target.checked as boolean;\n                updateValue(value);\n            }}\n        />\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { Box, TextField as MuiTextField, Theme } from \"@mui/material\";\nimport { TimestampProperty } from \"../../../../../models\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\n\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useInputStyles = makeStyles<Theme>(theme => createStyles({\n        hidden: {\n            display: \"none\"\n        }\n    })\n);\n\nexport function TableDateField(props: {\n    name: string;\n    error: Error | undefined;\n    internalValue: Date | undefined | null;\n    updateValue: (newValue: (Date | null)) => void;\n    focused: boolean;\n    disabled: boolean;\n    onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    setPreventOutsideClick: (value: any) => void;\n}) {\n\n    const {\n        disabled,\n        error,\n        internalValue,\n        setPreventOutsideClick,\n        updateValue\n    } = props;\n\n    const handleOpen = useCallback(() => {\n        setPreventOutsideClick(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n        setPreventOutsideClick(false);\n    }, []);\n\n    return (\n        <Box display={\"flex\"} alignItems={\"center\"} width={\"100%\"}>\n\n            <DateTimePicker\n                value={internalValue ?? null}\n                clearable\n                disabled={disabled}\n                onChange={(dateValue: Date | null) => {\n                    updateValue(dateValue);\n                }}\n                renderInput={(params) =>\n                    <MuiTextField {...params}\n                                  variant={\"standard\"}\n                                  error={Boolean(error)}\n                                  style={{\n                                      height: \"100%\"\n                                  }}\n                                  InputProps={{\n                                      ...params.InputProps,\n                                      style: { fontSize: 14 },\n                                      disableUnderline: true\n                                  }}\n                    />}\n                InputAdornmentProps={{\n                    style: {\n                        fontSize: \"small\",\n                        height: 26\n                    }\n                }}\n                onOpen={handleOpen}\n                onClose={handleClose}\n            />\n        </Box>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport { ReferencePreview } from \"../../../../../preview\";\nimport { ErrorView } from \"../../../index\";\nimport {\n    ArrayProperty,\n    CollectionSize,\n    Entity,\n    EntityReference,\n    ReferenceProperty\n} from \"../../../../../models\";\nimport { ReferenceDialog } from \"../../../ReferenceDialog\";\n\nimport { getPreviewSizeFrom } from \"../../../../../preview/util\";\nimport { getReferenceFrom } from \"../../../../utils\";\nimport { useNavigation } from \"../../../../../hooks\";\n\n\nexport function TableReferenceField(props: {\n    name: string;\n    disabled: boolean;\n    internalValue: EntityReference | EntityReference[] | undefined | null;\n    updateValue: (newValue: (EntityReference | EntityReference [] | null)) => void;\n    property: ReferenceProperty | ArrayProperty<EntityReference[]>;\n    size: CollectionSize;\n    setPreventOutsideClick: (value: any) => void;\n}) {\n\n    const {\n        name,\n        internalValue,\n        setPreventOutsideClick,\n        property,\n        updateValue,\n        size,\n        disabled\n    } = props;\n\n    let usedProperty: ReferenceProperty;\n    let multiselect;\n    if (property.dataType === \"reference\") {\n        usedProperty = property;\n        multiselect = false;\n    } else if (property.dataType === \"array\" && property.of?.dataType === \"reference\") {\n        usedProperty = property.of;\n        multiselect = true;\n    } else {\n        throw Error(\"TableReferenceField misconfiguration\");\n    }\n\n    if (typeof usedProperty.path !== \"string\") {\n        throw Error(\"Picked the wrong component TableReferenceField\");\n    }\n\n    const path = usedProperty.path;\n\n    const [onHover, setOnHover] = useState(false);\n    const [open, setOpen] = useState<boolean>(false);\n\n    const navigationContext = useNavigation();\n    const collectionResolver = navigationContext.getCollectionResolver(path);\n    if (!collectionResolver) {\n        throw Error(`Couldn't find the corresponding collection view for the path: ${path}`);\n    }\n    const handleOpen = useCallback((event: React.MouseEvent) => {\n        if (disabled)\n            return;\n        if (event.detail <= 1) {\n            event.stopPropagation();\n            setPreventOutsideClick(true);\n            setOpen(true);\n        }\n    }, [disabled, setPreventOutsideClick]);\n\n    const handleClose = useCallback(() => {\n        setPreventOutsideClick(false);\n        setOpen(false);\n    }, [setPreventOutsideClick, setOpen]);\n\n    const onSingleValueSet = useCallback((entity: Entity<any>) => {\n        updateValue(entity ? getReferenceFrom(entity) : null);\n        setPreventOutsideClick(false);\n        setOpen(false);\n    }, [updateValue, setPreventOutsideClick, setOpen]);\n\n    const onMultipleEntitiesSelected = useCallback((entities: Entity<any>[]) => {\n        updateValue(entities.map((e) => getReferenceFrom(e)));\n    }, [updateValue]);\n\n    const selectedIds = internalValue\n        ? (Array.isArray(internalValue)\n            ? internalValue.map((ref) => ref.id)\n            : internalValue.id ? [internalValue.id] : [])\n        : [];\n    const valueNotSet = !internalValue || (Array.isArray(internalValue) && internalValue.length === 0);\n\n    function buildSingleReferenceField() {\n        if (internalValue instanceof EntityReference)\n            return <ReferencePreview name={name}\n                                     onClick={disabled ? undefined : handleOpen}\n                                     value={internalValue as EntityReference}\n                                     property={usedProperty}\n                                     onHover={onHover}\n                                     size={getPreviewSizeFrom(size)}\n            />;\n        else\n            return <ErrorView error={\"Data is not a reference\"}/>;\n    }\n\n    function buildMultipleReferenceField() {\n        if (Array.isArray(internalValue))\n            return <>\n                {internalValue.map((v, index) =>\n                    <Box sx={{ m: 0.5 }}\n                         key={`preview_array_ref_${name}_${index}`}>\n                        <ReferencePreview\n                            name={`${name}[${index}]`}\n                            onClick={disabled ? undefined : handleOpen}\n                            size={\"tiny\"}\n                            onHover={onHover}\n                            value={v}\n                            property={usedProperty}\n\n                        />\n                    </Box>\n                )\n                }\n            </>;\n        else\n            return <ErrorView error={\"Data is not an array of references\"}/>;\n    }\n\n    if (!collectionResolver)\n        return <ErrorView error={\"The specified collection does not exist\"}/>;\n\n    return (\n        <div\n            onMouseEnter={() => setOnHover(true)}\n            onMouseMove={() => setOnHover(true)}\n            onMouseLeave={() => setOnHover(false)}>\n\n            {internalValue && !multiselect &&\n            buildSingleReferenceField()\n            }\n\n            {internalValue && multiselect &&\n            buildMultipleReferenceField()\n            }\n\n            {valueNotSet &&\n            <Button\n                onClick={handleOpen}\n                size={\"small\"}\n                variant=\"outlined\"\n                color=\"primary\">\n                Edit {property.title}\n            </Button>}\n\n            {!disabled &&\n            open &&\n            <ReferenceDialog open={open}\n                                multiselect={multiselect}\n                                path={path}\n                                collectionResolver={collectionResolver}\n                                onClose={handleClose}\n                                onMultipleEntitiesSelected={onMultipleEntitiesSelected}\n                                onSingleEntitySelected={onSingleValueSet}\n                                selectedEntityIds={selectedIds}\n            />}\n\n\n        </div>\n    );\n}\n","import * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { Box, IconButton, Skeleton, Theme, Typography } from \"@mui/material\";\n\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n    ArrayProperty,\n    EntityValues,\n    Property,\n    StorageMeta,\n    StringProperty\n} from \"../../../../../models\";\nimport { useDropzone } from \"react-dropzone\";\nimport { PreviewComponent, PreviewSize } from \"../../../../../preview\";\nimport isEqual from \"react-fast-compare\";\nimport { ErrorBoundary } from \"../../../../internal/ErrorBoundary\";\n\nimport clsx from \"clsx\";\nimport { useSnackbarController, useStorageSource } from \"../../../../../hooks\";\nimport { getThumbnailMeasure } from \"../../../../../preview/util\";\n\nexport const useStyles = makeStyles<Theme, {hasValue:boolean}>((theme: Theme) => ({\n    dropZone: {\n        position: \"relative\",\n        height: \"100%\",\n        outline: 0,\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: ({ hasValue }) => hasValue ? \"start\" : \"center\",\n        alignItems: \"center\"\n    },\n    activeDrop: {\n        borderRadius: \"2px\",\n        border: \"2px solid\",\n        borderColor: \"transparent\"\n    },\n    acceptDrop: {\n        transition: \"background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n        background: \"repeating-linear-gradient( 45deg, rgba(128, 128, 128, 0.2), rgba(128, 128, 128, 0.2) 10px, rgba(128, 128, 128, 0.25) 10px, rgba(128, 128, 128, 0.25) 20px) !important\",\n        // background: \"repeating-linear-gradient( 45deg, rgba(0, 0, 0, 0.09), rgba(0, 0, 0, 0.09) 10px, rgba(0, 0, 0, 0.12) 10px, rgba(0, 0, 0, 0.12) 20px) !important\",\n        borderColor: theme.palette.success.light\n    },\n    rejectDrop: {\n        borderColor: theme.palette.error.light\n    },\n    arrayEntry: {\n        border: \"1px dashed transparent\",\n        borderRadius: \"4px\"\n    },\n    arrayEntryHovered: {\n        opacity: 0.5,\n        border: \"1px dashed gray\",\n        boxSizing: \"border-box\"\n    },\n    thumbnailCloseIcon: {\n        position: \"absolute\",\n        borderRadius: \"9999px\",\n        top: -8,\n        right: -8,\n        zIndex: 100,\n        backgroundColor: theme.palette.background.paper\n    }\n}));\n\n\n/**\n * Field that allows to upload files to Google Cloud Storage.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function TableStorageUpload(props: {\n    name: string;\n    error: Error | undefined;\n    disabled: boolean;\n    internalValue: string | string[] | null;\n    updateValue: (newValue: (string | string[] | null)) => void;\n    focused: boolean;\n    property: StringProperty | ArrayProperty<string[]>;\n    entityId: string;\n    previewSize: PreviewSize;\n    entityValues: EntityValues<any>;\n    onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    setPreventOutsideClick: (value: any) => void;\n}) {\n\n    const {\n        name,\n        error,\n        internalValue,\n        disabled,\n        property,\n        entityId,\n        entityValues,\n        previewSize,\n        updateValue,\n        setPreventOutsideClick\n    } = props;\n\n    const multipleFilesSupported = property.dataType === \"array\";\n\n    const storageMeta: StorageMeta | undefined = property.dataType === \"string\"\n? property.config?.storageMeta\n        : property.dataType === \"array\" &&\n        (property.of as Property).dataType === \"string\"\n? (property.of as StringProperty).config?.storageMeta\n            : undefined;\n\n    if (!storageMeta)\n        throw Error(\"Storage meta must be specified\");\n\n    const fileNameBuilder = (file: File) => {\n        if (storageMeta.fileName) {\n            const fileName = storageMeta.fileName({\n                entityId,\n                values: entityValues,\n                property,\n                file,\n                storageMeta,\n                name\n            });\n\n            if (!fileName || fileName.length === 0) {\n                throw Error(\"You need to return a valid filename\");\n            }\n            return fileName;\n        }\n        return file.name;\n    };\n\n    const storagePathBuilder = (file: File) => {\n        if (typeof storageMeta.storagePath === \"string\")\n            return storageMeta.storagePath;\n\n        if (typeof storageMeta.storagePath === \"function\") {\n            const storagePath = storageMeta.storagePath({\n                entityId: entityId,\n                values: entityValues,\n                property,\n                file,\n                storageMeta,\n                name\n            });\n\n            if (!storagePath || storagePath.length === 0) {\n                throw Error(\"You need to return a valid filename\");\n            }\n            return storagePath;\n        }\n        console.warn(\"When using a storage property, if you don't specify the storagePath, the root storage is used\");\n        return \"/\";\n    };\n\n\n    return (\n\n        <StorageUpload\n            value={internalValue}\n            name={name}\n            disabled={disabled}\n            autoFocus={false}\n            property={property}\n            onChange={(newValue) => {\n                updateValue(\n                    newValue\n                );\n            }}\n            fileNameBuilder={fileNameBuilder}\n            storagePathBuilder={storagePathBuilder}\n            storageMeta={storageMeta}\n            multipleFilesSupported={multipleFilesSupported}\n            previewSize={previewSize}/>\n\n    );\n}\n\n/**\n * Internal representation of an item in the storage\n * It can have two states, having a storagePathOrDownloadUrl set,\n * which means the file has\n * been uploaded and it is rendered as a preview\n * Or have a pending file being uploaded.\n */\ninterface StorageFieldItem {\n    id: number; // generated on the fly for internal use only\n    storagePathOrDownloadUrl?: string;\n    file?: File;\n    fileName?: string;\n    metadata?: any\n}\n\ninterface StorageUploadProps {\n    value: string | string[] | null;\n    name: string;\n    property: StringProperty | ArrayProperty<string[]>;\n    onChange: (value: string | string[] | null) => void;\n    multipleFilesSupported: boolean;\n    autoFocus: boolean;\n    disabled: boolean;\n    previewSize: PreviewSize;\n    storageMeta: StorageMeta;\n    fileNameBuilder: (file: File) => string;\n    storagePathBuilder: (file: File) => string;\n}\n\nfunction StorageUpload({\n                           property,\n                           name,\n                           value,\n                           onChange,\n                           multipleFilesSupported,\n                           previewSize: previewSizeInput,\n                           disabled,\n                           autoFocus,\n                           storageMeta,\n                           fileNameBuilder,\n                                  storagePathBuilder\n                              }: StorageUploadProps) {\n\n    const storage = useStorageSource();\n    const [onHover, setOnHover] = useState(false);\n\n    const previewSize = multipleFilesSupported && previewSizeInput === \"regular\" ? \"small\" : previewSizeInput;\n    if (multipleFilesSupported) {\n        const arrayProperty = property as ArrayProperty<string[]>;\n        if (arrayProperty.of) {\n            if (arrayProperty.of.dataType !== \"string\") {\n                throw Error(\"Storage field using array must be of data type string\");\n            }\n        } else {\n            throw Error(\"Storage field using array must be of data type string\");\n        }\n    }\n\n    const metadata: any | undefined = storageMeta?.metadata;\n    const hasValue = Boolean(value);\n\n    const classes = useStyles({ hasValue });\n\n    const internalInitialValue: StorageFieldItem[] =\n        value == null\n            ? []\n            : (multipleFilesSupported\n                ? value as string[]\n                : [value as string]).map(entry => (\n                {\n                    id: getRandomId(),\n                    storagePathOrDownloadUrl: entry,\n                    metadata: metadata,\n                    size: previewSize\n                }\n            ));\n\n    const initialValue = React.useRef<string | string[] | null>(value);\n    const [internalValue, setInternalValue] = React.useState<StorageFieldItem[]>(internalInitialValue);\n\n    if (!isEqual(initialValue.current, value)) {\n        initialValue.current = value;\n        setInternalValue(internalInitialValue ?? []);\n    }\n\n    function getRandomId() {\n        return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER));\n    }\n\n    function removeDuplicates(items: StorageFieldItem[]) {\n        return items.filter(\n            (v, i) => {\n                return ((items.map((v) => v.storagePathOrDownloadUrl).indexOf(v.storagePathOrDownloadUrl) === i) || !v.storagePathOrDownloadUrl) &&\n                    ((items.map((v) => v.file).indexOf(v.file) === i) || !v.file);\n            }\n        );\n    }\n\n    const onExternalDrop = (acceptedFiles: File[]) => {\n\n        if (!acceptedFiles.length || disabled)\n            return;\n\n        let newInternalValue: StorageFieldItem[];\n        if (multipleFilesSupported) {\n            newInternalValue = [...internalValue,\n                ...(acceptedFiles.map(file => ({\n                    id: getRandomId(),\n                    file,\n                    fileName: fileNameBuilder(file),\n                    metadata\n                } as StorageFieldItem)))];\n        } else {\n            newInternalValue = [{\n                id: getRandomId(),\n                file: acceptedFiles[0],\n                fileName: fileNameBuilder(acceptedFiles[0]),\n                metadata\n            }];\n        }\n\n        // Remove either storage path or file duplicates\n        newInternalValue = removeDuplicates(newInternalValue);\n        setInternalValue(newInternalValue);\n    };\n\n    const onFileUploadComplete = async (uploadedPath: string,\n                                        entry: StorageFieldItem,\n                                        metadata?: any) => {\n\n        let uploadPathOrDownloadUrl = uploadedPath;\n        if (storageMeta.storeUrl) {\n            uploadPathOrDownloadUrl = await storage.getDownloadURL(uploadedPath);\n        }\n        if (storageMeta.postProcess) {\n            uploadPathOrDownloadUrl = await storageMeta.postProcess(uploadPathOrDownloadUrl);\n        }\n\n        let newValue: StorageFieldItem[];\n\n        entry.storagePathOrDownloadUrl = uploadPathOrDownloadUrl;\n        entry.metadata = metadata;\n        newValue = [...internalValue];\n\n        newValue = removeDuplicates(newValue);\n        setInternalValue(newValue);\n\n        const fieldValue = newValue\n            .filter(e => !!e.storagePathOrDownloadUrl)\n            .map(e => e.storagePathOrDownloadUrl as string);\n\n        if (multipleFilesSupported) {\n            onChange(fieldValue);\n        } else {\n            onChange(fieldValue ? fieldValue[0] : null);\n        }\n    };\n\n    const onClear = (clearedStoragePathOrDownloadUrl: string) => {\n        if (multipleFilesSupported) {\n            const newValue: StorageFieldItem[] = internalValue.filter(v => v.storagePathOrDownloadUrl !== clearedStoragePathOrDownloadUrl);\n            onChange(newValue.filter(v => !!v.storagePathOrDownloadUrl).map(v => v.storagePathOrDownloadUrl as string));\n            setInternalValue(newValue);\n        } else {\n            onChange(null);\n            setInternalValue([]);\n        }\n    };\n\n    const {\n        open,\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n            accept: storageMeta.acceptedFiles,\n            disabled: disabled,\n            noClick: true,\n            noKeyboard: true,\n            onDrop: onExternalDrop\n        }\n    );\n\n    const { ...rootProps } = getRootProps();\n\n    const helpText = multipleFilesSupported\n        ? \"Drag 'n' drop some files here, or click here to edit\"\n        : \"Drag 'n' drop a file here, or click here edit\";\n\n    const renderProperty = multipleFilesSupported\n        ? (property as ArrayProperty<string[]>).of as StringProperty\n        : property as StringProperty;\n\n    return (\n        <Box {...rootProps}\n\n             onMouseEnter={() => setOnHover(true)}\n             onMouseMove={() => setOnHover(true)}\n             onMouseLeave={() => setOnHover(false)}\n             className={clsx(classes.dropZone, {\n                 [classes.activeDrop]: isDragActive,\n                 [classes.rejectDrop]: isDragReject,\n                 [classes.acceptDrop]: isDragAccept\n             })}\n        >\n\n            <input autoFocus={autoFocus} {...getInputProps()} />\n\n            {internalValue.map((entry, index) => {\n                let child;\n                if (entry.storagePathOrDownloadUrl) {\n                    child = (\n                        <StorageItemPreview\n                            key={`storage_preview_${index}`}\n                            property={renderProperty}\n                            disabled={disabled}\n                            value={entry.storagePathOrDownloadUrl}\n                            onClear={onClear}\n                            size={previewSize}/>\n                    );\n                } else if (entry.file) {\n                    child = (\n                        <StorageUploadProgress\n                            key={`storage_progress_${index}`}\n                            entry={entry}\n                            metadata={metadata}\n                            storagePath={storagePathBuilder(entry.file)}\n                            onFileUploadComplete={onFileUploadComplete}\n                            size={previewSize}\n                        />\n                    );\n                }\n\n                return child;\n            })\n            }\n\n            {!value && <Box\n                sx={{\n                    flexGrow: 1,\n                    m: 2,\n                    maxWidth: 200\n                }}\n                onClick={open}>\n                <Typography\n                    sx={{\n                        color: (theme) => (theme.palette.mode === \"light\" ? \"#999\" : \"#444\")\n                    }}\n                    variant={\"body2\"}\n                    align={\"center\"}>\n                    {helpText}\n                </Typography>\n            </Box>}\n\n            {onHover &&\n            <IconButton\n                color={\"inherit\"}\n                size={\"small\"}\n                onClick={open}\n                sx={{\n                    position: \"absolute\",\n                    bottom: 2,\n                    right: 2\n                }}>\n                <EditIcon sx={{\n                    width: 16,\n                    height: 16,\n                    fill: \"#666\"\n                }\n                }/>\n            </IconButton>\n            }\n\n\n        </Box>\n    );\n\n}\n\n\ninterface StorageUploadItemProps {\n    storagePath: string;\n    metadata?: any,\n    entry: StorageFieldItem,\n    onFileUploadComplete: (value: string,\n                           entry: StorageFieldItem,\n                           metadata?: any) => Promise<void>;\n    size: PreviewSize;\n}\n\nexport function StorageUploadProgress({\n                                          storagePath,\n                                          entry,\n                                          metadata,\n                                          onFileUploadComplete,\n                                          size\n                                      }: StorageUploadItemProps) {\n\n    const storage = useStorageSource();\n\n    const snackbarContext = useSnackbarController();\n\n    const [error, setError] = React.useState<string>();\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const mounted = React.useRef(false);\n\n    const upload = useCallback((file: File, fileName?: string) => {\n\n        setError(undefined);\n        setLoading(true);\n\n        storage.uploadFile({ file, fileName, path: storagePath, metadata })\n            .then(async ({ path }) => {\n                console.debug(\"Upload successful\");\n                await onFileUploadComplete(path, entry, metadata);\n                if (mounted.current)\n                    setLoading(false);\n            })\n            .catch((e) => {\n                console.error(\"Upload error\", e);\n                if (mounted.current) {\n                    setError(e.message);\n                    setLoading(false);\n                }\n                snackbarContext.open({\n                    type: \"error\",\n                    title: \"Error uploading file\",\n                    message: e.message\n                });\n            });\n    }, [entry, metadata, onFileUploadComplete, snackbarContext, storage, storagePath]);\n\n    useEffect(() => {\n        mounted.current = true;\n        if (entry.file)\n            upload(entry.file, entry.fileName);\n        return () => {\n            mounted.current = false;\n        };\n    }, [entry.file, entry.fileName, upload]);\n\n    const imageSize = useMemo(() => getThumbnailMeasure(size), [size]);\n\n    return (\n\n        <Box m={1} sx={{\n            width: imageSize,\n            height: imageSize\n        }}>\n\n            {loading && <Skeleton variant=\"rectangular\" sx={{\n                width: imageSize,\n                height: imageSize\n            }}/>}\n\n            {error && <p>Error uploading file: {error}</p>}\n\n        </Box>\n\n    );\n\n}\n\ninterface StorageItemPreviewProps {\n    property: StringProperty;\n    value: string,\n    onClear: (value: string) => void;\n    size: PreviewSize;\n    disabled: boolean;\n}\n\nexport function StorageItemPreview({\n                                       property,\n                                       value,\n                                       size\n                                   }: StorageItemPreviewProps) {\n\n    return (\n        <Box\n            m={1}\n            position={\"relative\"}\n        >\n\n            {value &&\n            <ErrorBoundary>\n                <PreviewComponent value={value}\n                                  property={property}\n                                  size={size}/>\n            </ErrorBoundary>\n            }\n\n        </Box>\n    );\n\n}\n","import {\n    ArrayProperty,\n    CMSType,\n    EntityReference,\n    EntityValues,\n    NumberProperty,\n    Property,\n    ReferenceProperty,\n    StringProperty\n} from \"../../../../models\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { TableInput } from \"./fields/TableInput\";\nimport { TableSelect } from \"./fields/TableSelect\";\nimport { NumberTableInput } from \"./fields/TableNumberInput\";\nimport { TableSwitch } from \"./fields/TableSwitch\";\nimport { TableDateField } from \"./fields/TableDateField\";\nimport { ErrorBoundary } from \"../../../internal/ErrorBoundary\";\nimport { PreviewComponent } from \"../../../../preview\";\nimport { CellStyleProps } from \"../../Table/styles\";\nimport { TableReferenceField } from \"./fields/TableReferenceField\";\n\nimport { getPreviewSizeFrom } from \"../../../../preview/util\";\nimport { useClearRestoreValue } from \"../../../../hooks\";\nimport isEqual from \"react-fast-compare\";\nimport { isReadOnly } from \"../../../utils\";\nimport { TableCell } from \"../../Table/TableCell\";\nimport { AnySchema } from \"yup\";\nimport { TableStorageUpload } from \"./fields/TableStorageUpload\";\n\n\nexport interface PropertyTableCellProps<T extends CMSType> {\n    name: string;\n    selected: boolean;\n    value: T;\n    select: (cellRect: DOMRect | undefined) => void;\n    openPopup: (cellRect: DOMRect | undefined) => void;\n    setPreventOutsideClick: (value: boolean) => void;\n    focused: boolean;\n    setFocused: (value: boolean) => void;\n    property: Property<T>;\n    height: number;\n    width: number;\n    entityId: string;\n    entityValues: EntityValues<any>;\n    validation: AnySchema;\n    onValueChange?: (params: OnCellChangeParams<T>) => void\n}\n\n/**\n * Props passed in a callback when the content of a cell in a table has been edited\n */\nexport interface OnCellChangeParams<T> {\n    value: T,\n    name: string,\n    setError: (e: Error) => void,\n    setSaved: (saved: boolean) => void\n}\n\nconst PropertyTableCellInternal = <T extends CMSType>({\n                                                                                            selected,\n                                                                                            focused,\n                                                                                            name,\n                                                                                            setPreventOutsideClick,\n                                                                                            setFocused,\n                                                                                            onValueChange,\n                                                                                            select,\n                                                                                            openPopup,\n                                                                                            value,\n                                                                                            property,\n                                                                                            validation,\n                                                                                            size,\n                                                                                            align,\n                                                                                            width,\n                                                                                            height,\n                                                                                            entityId,\n                                                                                            entityValues\n                                                                                        }: PropertyTableCellProps<T> & CellStyleProps) => {\n\n    const [internalValue, setInternalValue] = useState<any | null>(value);\n\n    useClearRestoreValue<T>({\n        property,\n        value: internalValue,\n        setValue: setInternalValue\n    });\n\n    const [error, setError] = useState<Error | undefined>();\n    const [saved, setSaved] = useState<boolean>(false);\n\n    const customField = Boolean(property.config?.Field);\n    const customPreview = Boolean(property.config?.Preview);\n    const readOnly = isReadOnly(property);\n    const disabledTooltip: string | undefined = typeof property.disabled === \"object\" ? property.disabled.disabledMessage : undefined;\n    const disabled = Boolean(property.disabled);\n\n    const onBlur = useCallback(() => {\n        setFocused(false);\n    }, []);\n\n    useEffect(\n        () => {\n            if (value !== internalValue) {\n                setInternalValue(value);\n            }\n        },\n        [value]\n    );\n\n    useEffect(\n        () => {\n            if (!isEqual(value, internalValue)) {\n                setSaved(false);\n                validation\n                    .validate(internalValue)\n                    .then(() => {\n                        setError(undefined);\n                        if (onValueChange) {\n                            onValueChange({\n                                value: internalValue,\n                                name,\n                                setError,\n                                setSaved\n                            });\n                        }\n                    })\n                    .catch((e) => {\n                        console.error(e);\n                        setError(e);\n                    });\n            }\n        },\n        [internalValue]\n    );\n\n    const updateValue = useCallback(\n        (newValue: any | null) => {\n\n            let updatedValue: any;\n            if (newValue === undefined) {\n                updatedValue = null;\n            } else {\n                updatedValue = newValue;\n            }\n            setInternalValue(updatedValue);\n        },\n        []\n    );\n\n    let innerComponent: JSX.Element | undefined;\n    let allowScroll = false;\n    let showExpandIcon = false;\n    let removePadding = false;\n    let fullHeight = false;\n\n    if (!readOnly && !customField && (!customPreview || selected)) {\n        const isAStorageProperty = (property.dataType === \"string\" && (property as StringProperty).config?.storageMeta) ||\n            (property.dataType === \"array\" && (property as ArrayProperty).of?.dataType === \"string\" && ((property as ArrayProperty).of as StringProperty)?.config?.storageMeta);\n        if (isAStorageProperty) {\n            innerComponent = <TableStorageUpload error={error}\n                                                 disabled={disabled}\n                                                 focused={focused}\n                                                 property={property as StringProperty | ArrayProperty<string[]>}\n                                                 entityId={entityId}\n                                                 entityValues={entityValues}\n                                                 internalValue={internalValue}\n                                                 previewSize={getPreviewSizeFrom(size)}\n                                                 updateValue={updateValue}\n                                                 name={name as string}\n                                                 onBlur={onBlur}\n                                                 setPreventOutsideClick={setPreventOutsideClick}\n            />;\n            showExpandIcon = true;\n            fullHeight = true;\n            removePadding = true;\n        } else if (selected && property.dataType === \"number\") {\n            const numberProperty = property as NumberProperty;\n            if (numberProperty.config?.enumValues) {\n                innerComponent = <TableSelect name={name as string}\n                                              multiple={false}\n                                              disabled={disabled}\n                                              focused={focused}\n                                              valueType={\"number\"}\n                                              small={getPreviewSizeFrom(size) !== \"regular\"}\n                                              enumValues={numberProperty.config.enumValues}\n                                              error={error}\n                                              onBlur={onBlur}\n                                              internalValue={internalValue as string | number}\n                                              updateValue={updateValue}\n                                              setPreventOutsideClick={setPreventOutsideClick}\n                />;\n            } else {\n                innerComponent = <NumberTableInput\n                    align={align}\n                    error={error}\n                    focused={focused}\n                    disabled={disabled}\n                    onBlur={onBlur}\n                    value={internalValue as number}\n                    updateValue={updateValue}\n                />;\n                allowScroll = true;\n            }\n        } else if (selected && property.dataType === \"string\") {\n            const stringProperty = property as StringProperty;\n            if (stringProperty.config?.enumValues) {\n                innerComponent = <TableSelect name={name as string}\n                                              multiple={false}\n                                              focused={focused}\n                                              disabled={disabled}\n                                              valueType={\"string\"}\n                                              small={getPreviewSizeFrom(size) !== \"regular\"}\n                                              enumValues={stringProperty.config.enumValues}\n                                              error={error}\n                                              onBlur={onBlur}\n                                              internalValue={internalValue as string | number}\n                                              updateValue={updateValue}\n                                              setPreventOutsideClick={setPreventOutsideClick}\n                />;\n            } else if (!stringProperty.config?.storageMeta && !stringProperty.config?.markdown) {\n                const multiline = !!stringProperty.config?.multiline;\n                innerComponent = <TableInput error={error}\n                                             disabled={disabled}\n                                             multiline={multiline}\n                                             focused={focused}\n                                             value={internalValue as string}\n                                             updateValue={updateValue}\n                />;\n                allowScroll = true;\n            }\n        } else if (property.dataType === \"boolean\") {\n            innerComponent = <TableSwitch error={error}\n                                          disabled={disabled}\n                                          focused={focused}\n                                          internalValue={internalValue as boolean}\n                                          updateValue={updateValue}\n            />;\n        } else if (property.dataType === \"timestamp\") {\n            innerComponent = <TableDateField name={name as string}\n                                             error={error}\n                                             disabled={disabled}\n                                             focused={focused}\n                                             internalValue={internalValue as Date}\n                                             updateValue={updateValue}\n                                             setPreventOutsideClick={setPreventOutsideClick}\n            />;\n            allowScroll = true;\n        } else if (property.dataType === \"reference\") {\n            if (typeof property.path === \"string\") {\n                innerComponent = <TableReferenceField name={name as string}\n                                                      internalValue={internalValue as EntityReference}\n                                                      updateValue={updateValue}\n                                                      disabled={disabled}\n                                                      size={size}\n                                                      property={property as ReferenceProperty}\n                                                      setPreventOutsideClick={setPreventOutsideClick}\n                />;\n            }\n            allowScroll = true;\n        } else if (property.dataType === \"array\") {\n            const arrayProperty = (property as ArrayProperty);\n            if (arrayProperty.of) {\n                if (arrayProperty.of.dataType === \"string\" || arrayProperty.of.dataType === \"number\") {\n                    if (selected && arrayProperty.of.config?.enumValues) {\n                        innerComponent = <TableSelect name={name as string}\n                                                      multiple={true}\n                                                      disabled={disabled}\n                                                      focused={focused}\n                                                      small={getPreviewSizeFrom(size) !== \"regular\"}\n                                                      valueType={arrayProperty.of.dataType}\n                                                      enumValues={arrayProperty.of.config.enumValues}\n                                                      error={error}\n                                                      onBlur={onBlur}\n                                                      internalValue={internalValue as string | number}\n                                                      updateValue={updateValue}\n                                                      setPreventOutsideClick={setPreventOutsideClick}\n                        />;\n                        allowScroll = true;\n                    }\n                } else if (arrayProperty.of.dataType === \"reference\") {\n                    if (typeof arrayProperty.of.path === \"string\") {\n                        innerComponent =\n                            <TableReferenceField name={name as string}\n                                                 disabled={disabled}\n                                                 internalValue={internalValue as EntityReference[]}\n                                                 updateValue={updateValue}\n                                                 size={size}\n                                                 property={property as ArrayProperty}\n                                                 setPreventOutsideClick={setPreventOutsideClick}\n                            />;\n                    }\n                    allowScroll = false;\n                }\n            }\n\n            if (!arrayProperty.of && !arrayProperty.oneOf) {\n                throw Error(`You need to specify an 'of' or 'oneOf' prop (or specify a custom field) in your array property ${name}`);\n            }\n        }\n    }\n\n    if (!innerComponent) {\n        allowScroll = false;\n        showExpandIcon = selected && !innerComponent && !disabled && !readOnly;\n        innerComponent = (\n            <ErrorBoundary>\n                <PreviewComponent\n                    width={width}\n                    height={height}\n                    name={name as string}\n                    value={internalValue}\n                    property={property}\n                    size={getPreviewSizeFrom(size)}\n                />\n            </ErrorBoundary>\n        );\n    }\n\n    return (\n        <TableCell\n            select={select}\n            selected={selected}\n            focused={focused}\n            disabled={disabled || readOnly}\n            disabledTooltip={disabledTooltip ?? \"Disabled\"}\n            removePadding={removePadding}\n            fullHeight={fullHeight}\n            size={size}\n            saved={saved}\n            error={error}\n            align={align}\n            allowScroll={allowScroll}\n            showExpandIcon={showExpandIcon}\n            openPopup={!disabled ? openPopup : undefined}\n            value={internalValue}\n        >\n\n            {innerComponent}\n\n        </TableCell>\n    );\n\n};\n\nexport const PropertyTableCell = React.memo<PropertyTableCellProps<any> & CellStyleProps>(PropertyTableCellInternal, areEqual) as React.FunctionComponent<PropertyTableCellProps<any> & CellStyleProps>;\n\nfunction areEqual(prevProps: PropertyTableCellProps<any> & CellStyleProps, nextProps: PropertyTableCellProps<any> & CellStyleProps) {\n    return prevProps.selected === nextProps.selected &&\n        prevProps.focused === nextProps.selected &&\n        prevProps.height === nextProps.height &&\n        prevProps.size === nextProps.size &&\n        prevProps.align === nextProps.align &&\n        prevProps.width === nextProps.width &&\n        isEqual(prevProps.property, nextProps.property) &&\n        isEqual(prevProps.value, nextProps.value)\n        ;\n}\n\n","import React, { useEffect } from \"react\";\n\ninterface DraggableProps {\n    containerRef: React.RefObject<HTMLDivElement>,\n    ref: React.RefObject<HTMLDivElement>,\n    x?: number;\n    y?: number;\n    onMove: (x: number, y: number) => void,\n}\n\nexport function useDraggable({\n                                 containerRef,\n                                 ref,\n                                 x,\n                                 y,\n                                 onMove\n                             }: DraggableProps) {\n\n\n    let relX = 0;\n    let relY = 0;\n\n\n    const onMouseDown = (event: any) => {\n        if (event.button !== 0 || !ref.current || event.target !== ref.current) {\n            return;\n        }\n\n        const { x, y } = ref.current.getBoundingClientRect();\n\n        relX = event.screenX - x;\n        relY = event.screenY - y;\n        document.addEventListener(\"mousemove\", onMouseMove);\n        document.addEventListener(\"mouseup\", onMouseUp);\n        event.stopPropagation();\n    };\n\n    const onMouseUp = (event: any) => {\n        document.removeEventListener(\"mousemove\", onMouseMove);\n        document.removeEventListener(\"mouseup\", onMouseUp);\n        event.stopPropagation();\n    };\n\n    const onMouseMove = (event: any) => {\n        onMove(\n            event.screenX - relX,\n            event.screenY - relY\n        );\n        event.stopPropagation();\n    };\n\n    const update = () => {\n        if (containerRef.current) {\n            containerRef.current.style.top = `${y}px`;\n            containerRef.current.style.left = `${x}px`;\n        }\n    };\n\n    useEffect(() => {\n        const current = ref.current;\n        if (current)\n            current.addEventListener(\"mousedown\", onMouseDown);\n        update();\n        return () => {\n            if (current)\n                current.removeEventListener(\"mousedown\", onMouseDown);\n        };\n    });\n\n}\n","import { useLayoutEffect, useState } from \"react\";\n\ninterface WindowSize {\n    width: number,\n    height: number\n}\n\nexport function useWindowSize(): WindowSize {\n    const [size, setSize] = useState<WindowSize>({ width: 0, height: 0 });\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize({ width: window.innerWidth, height: window.innerHeight });\n        }\n\n        window.addEventListener(\"resize\", updateSize);\n        updateSize();\n        return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return size;\n}\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { FieldArray } from \"formik\";\n\nimport { Box, Button, IconButton } from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport DragHandleIcon from \"@mui/icons-material/DragHandle\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { getHashValue } from \"../../core/util/objects\";\n\n\ninterface ArrayContainerProps<T> {\n    value: T[];\n    name: string;\n    buildEntry: (index: number, internalId: number) => React.ReactNode;\n    disabled: boolean;\n    onInternalIdAdded?: (id: number) => void;\n    includeAddButton?: boolean;\n}\n\n/**\n * @category Form custom fields\n */\nexport function ArrayContainer<T>({\n                                      name,\n                                      value,\n                                      disabled,\n                                      buildEntry,\n                                      onInternalIdAdded,\n                                      includeAddButton\n                                  }: ArrayContainerProps<T>) {\n\n    const hasValue = value && Array.isArray(value) && value.length > 0;\n\n    const internalIdsMap: Record<string, number> = useMemo(() =>\n            hasValue\n                ? value.map((v, index) => {\n                    if (!v) return {};\n                    return ({\n                        [getHashValue(v) + index]: getRandomId()\n                    });\n                }).reduce((a, b) => ({ ...a, ...b }), {})\n                : {},\n        [value, hasValue]);\n    const internalIdsRef = useRef<Record<string, number>>(internalIdsMap);\n\n    const [internalIds, setInternalIds] = useState<number[]>(\n        hasValue\n            ? Object.values(internalIdsRef.current)\n            : []);\n\n    useEffect(() => {\n        if (hasValue && value && value.length !== internalIds.length) {\n            const newInternalIds = value.map((v, index) => {\n                const hashValue = getHashValue(v) + index;\n                if (hashValue in internalIdsRef.current) {\n                    return internalIdsRef.current[hashValue];\n                } else {\n                    const newInternalId = getRandomId();\n                    internalIdsRef.current[hashValue] = newInternalId;\n                    return newInternalId;\n                }\n            });\n            setInternalIds(newInternalIds);\n        }\n    }, [hasValue, internalIds.length, value]);\n\n\n    return <FieldArray\n        name={name}\n        validateOnChange={true}\n        render={arrayHelpers => {\n\n            const insertInEnd = () => {\n                if (disabled) return;\n                const id = getRandomId();\n                const newIds: number[] = [...internalIds, id];\n                if (onInternalIdAdded)\n                    onInternalIdAdded(id);\n                setInternalIds(newIds);\n                arrayHelpers.push(null);\n            };\n\n            const remove = (index: number) => {\n                const newValue = [...internalIds];\n                newValue.splice(index, 1);\n                setInternalIds(newValue);\n                arrayHelpers.remove(index);\n            };\n\n            const onDragEnd = (result: any) => {\n                // dropped outside the list\n                if (!result.destination) {\n                    return;\n                }\n                const sourceIndex = result.source.index;\n                const destinationIndex = result.destination.index;\n\n                const newIds = [...internalIds];\n                const temp = newIds[sourceIndex];\n                newIds[sourceIndex] = newIds[destinationIndex];\n                newIds[destinationIndex] = temp;\n                setInternalIds(newIds);\n\n                arrayHelpers.move(sourceIndex, destinationIndex);\n            }\n\n            return (\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId={`droppable_${name}`}>\n                        {(droppableProvided, droppableSnapshot) => (\n                            <div\n                                {...droppableProvided.droppableProps}\n                                ref={droppableProvided.innerRef}>\n                                {hasValue && internalIds.map((internalId: number, index: number) => {\n                                    return (\n                                        <Draggable\n                                            key={`array_field_${name}_${internalId}}`}\n                                            draggableId={`array_field_${name}_${internalId}}`}\n                                            isDragDisabled={disabled}\n                                            index={index}>\n                                            {(provided, snapshot) => (\n\n                                                <Box\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    style={\n                                                        provided.draggableProps.style\n                                                    }\n                                                    sx={{\n                                                        marginBottom: 1,\n                                                        borderRadius: \"4px\",\n                                                        opacity: 1\n                                                    }}\n                                                >\n                                                    <Box key={`field_${index}`}\n                                                         display=\"flex\">\n                                                        <Box flexGrow={1}\n                                                             width={\"100%\"}\n                                                             key={`field_${name}_entryValue`}>\n                                                            {buildEntry(index, internalId)}\n                                                        </Box>\n                                                        <Box width={\"36px\"}\n                                                             display=\"flex\"\n                                                             flexDirection=\"column\"\n                                                             alignItems=\"center\">\n                                                            <div\n                                                                {...provided.dragHandleProps}>\n                                                                <DragHandleIcon\n                                                                    fontSize={\"small\"}\n                                                                    color={disabled ? \"disabled\" : \"inherit\"}\n                                                                    sx={{ cursor: disabled ? \"inherit\" : \"move\" }}/>\n                                                            </div>\n                                                            {!disabled &&\n                                                            <IconButton\n                                                                size=\"small\"\n                                                                aria-label=\"remove\"\n                                                                onClick={() => remove(index)}>\n                                                                <ClearIcon\n                                                                    fontSize={\"small\"}/>\n                                                            </IconButton>}\n                                                        </Box>\n                                                    </Box>\n                                                </Box>\n                                            )}\n                                        </Draggable>);\n                                })}\n\n                                {droppableProvided.placeholder}\n\n                                {includeAddButton && !disabled && <Box p={1}\n                                                                       justifyContent=\"center\"\n                                                                       textAlign={\"left\"}>\n                                    <Button variant=\"outlined\"\n                                            color=\"primary\"\n                                            disabled={disabled}\n                                            onClick={insertInEnd}>\n                                        Add\n                                    </Button>\n                                </Box>}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n            );\n        }}\n    />;\n}\n\n\nfunction getRandomId() {\n    return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER));\n}\n","import React from \"react\";\nimport { CMSType, Property } from \"../../models\";\n\nimport {\n    Box,\n    FormHelperText,\n    IconButton,\n    Tooltip,\n    Typography\n} from \"@mui/material\";\nimport InfoIcon from \"@mui/icons-material/InfoOutlined\";\n\ninterface FieldDescriptionPopoverProps<T extends CMSType> {\n    property: Property<T>,\n}\n\n/**\n * Render the field description for a property\n * @category Form custom fields\n */\nexport function FieldDescription<T extends CMSType>({ property }: FieldDescriptionPopoverProps<T>) {\n    const disabledTooltip: string | undefined = typeof property.disabled === \"object\" ? property.disabled.disabledMessage : undefined;\n    return (\n\n        // <FormHelperText>{disabledTooltip ? disabledTooltip : property.description}</FormHelperText>\n        <Box display=\"flex\">\n\n            <Box flexGrow={1}>\n                <FormHelperText>{disabledTooltip || property.description}</FormHelperText>\n            </Box>\n\n            {property.longDescription &&\n            <Tooltip title={\n                <Typography\n                    variant={\"caption\"}>{property.longDescription}</Typography>\n            }\n                     placement=\"bottom-start\"\n                     arrow>\n                <IconButton\n                    edge={\"start\"}\n                    size={\"small\"}>\n\n                    <InfoIcon color={\"disabled\"}\n                              fontSize={\"small\"}/>\n                </IconButton>\n            </Tooltip>}\n\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { Property } from \"../../models\";\nimport { getIconForProperty } from \"../../core/util/property_icons\";\n\ninterface LabelWithIconProps {\n    property: Property<any>,\n}\n\n/**\n * Render the label of a form field for a given property, with the corresponding\n * icon\n * @category Form custom fields\n */\nexport function LabelWithIcon({\n                                  property\n                              }: LabelWithIconProps) {\n\n    return (\n        <>\n            <span style={{ paddingRight: \"12px\" }}>\n                {getIconForProperty(property)}\n            </span>\n            <span>{property.title}</span>\n        </>\n    );\n}\n","import React from \"react\";\nimport {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Select as MuiSelect,\n    Theme\n} from \"@mui/material\";\n\nimport { EnumType, EnumValues, FieldProps } from \"../../models\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\nimport {\n    enumToObjectEntries,\n    isEnumValueDisabled\n} from \"../../core/util/enums\";\nimport { EnumValuesChip } from \"../../preview/components/CustomChip\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst formStyles = makeStyles((theme: Theme) => createStyles({\n    inputLabel: {\n        marginTop: theme.spacing(1 / 2),\n        marginLeft: theme.spacing(1 / 2)\n    },\n    shrinkInputLabel: {\n        marginTop: \"-2px\",\n        marginLeft: theme.spacing(1 / 2)\n    }\n}))\n\ntype SelectProps<T extends EnumType> = FieldProps<T>;\n\n/**\n * If `enumValues` are set in the string config, this field renders a select\n * where each option is a colored chip.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function Select<T extends EnumType>({\n                                               name,\n                                               value,\n                                               setValue,\n                                               error,\n                                               showError,\n                                               disabled,\n                                               autoFocus,\n                                               touched,\n                                               property,\n                                               includeDescription,\n                                               shouldAlwaysRerender\n                                           }: SelectProps<T>) {\n\n    const classes = formStyles();\n    const enumValues = property.config?.enumValues as EnumValues;\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    return (\n        <FormControl\n            variant=\"filled\"\n            fullWidth\n            required={property.validation?.required}\n            error={showError}\n            disabled={disabled}\n        >\n\n            <InputLabel id={`${name}-select-label`}\n                        classes={{\n                            root: classes.inputLabel,\n                            shrink: classes.shrinkInputLabel\n                        }}>\n                <LabelWithIcon property={property}/>\n            </InputLabel>\n\n            <MuiSelect\n                sx={{\n                    minHeight: \"64px\"\n                }}\n                variant={\"filled\"}\n                labelId={`${name}-select-label`}\n                autoFocus={autoFocus}\n                value={value !== undefined ? value : \"\"}\n                disabled={disabled}\n                onChange={(evt: any) => {\n                    const eventValue = evt.target.value;\n                    const newValue = eventValue\n                        ? (property.dataType === \"number\" ? parseFloat(eventValue) : eventValue)\n                        : null;\n\n                    return setValue(newValue);\n                }}\n                renderValue={(enumKey: any) => {\n                    return <EnumValuesChip\n                        enumKey={enumKey}\n                        enumValues={enumValues}\n                        small={false}/>;\n                }\n                }>\n\n                {enumToObjectEntries(enumValues)\n                    .map(([enumKey, labelOrConfig]) => {\n                        return (\n                            <MenuItem key={`select_${name}_${enumKey}`}\n                                      value={enumKey}\n                                      disabled={isEnumValueDisabled(labelOrConfig)}>\n                                <EnumValuesChip\n                                    enumKey={enumKey}\n                                    enumValues={enumValues}\n                                    small={true}/>\n                            </MenuItem>\n                        );\n                    })}\n            </MuiSelect>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n            {showError && <FormHelperText>{error}</FormHelperText>}\n\n        </FormControl>\n    );\n}\n","import React from \"react\";\nimport {\n    Checkbox,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    ListItemText,\n    MenuItem,\n    Select as MuiSelect,\n    Theme\n} from \"@mui/material\";\nimport { EnumType, FieldProps } from \"../../models\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\nimport {\n    enumToObjectEntries,\n    isEnumValueDisabled\n} from \"../../core/util/enums\";\nimport { EnumValuesChip } from \"../../preview/components/CustomChip\";\n\nimport { ArrayEnumPreview } from \"../../preview\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst formStyles = makeStyles((theme: Theme) => createStyles({\n    inputLabel: {\n        marginTop: theme.spacing(1 / 2),\n        marginLeft: theme.spacing(1 / 2)\n    },\n    shrinkInputLabel: {\n        marginTop: \"-2px\",\n        marginLeft: theme.spacing(1 / 2)\n    }\n}));\n\n/**\n * This fields renders a dropdown with multiple selection.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ArrayEnumSelect({\n                                    name,\n                                    value,\n                                    setValue,\n                                    error,\n                                    showError,\n                                    disabled,\n                                    property,\n                                    includeDescription,\n                                    autoFocus\n                                }: FieldProps<EnumType[]>) {\n\n    const classes = formStyles();\n\n    if (!property.of) {\n        throw Error(\"Using wrong component ArrayEnumSelect\");\n    }\n\n    if (property.of.dataType !== \"string\" && property.of.dataType !== \"number\") {\n        throw Error(\"Field misconfiguration: array field of type string or number\");\n    }\n\n    const enumValues = property.of.config?.enumValues;\n    if (!enumValues) {\n        console.error(property);\n        throw Error(\"Field misconfiguration: array field of type string or number needs to have enumValues\");\n    }\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const validValue = !!value && Array.isArray(value);\n    return (\n        <FormControl\n            variant=\"filled\"\n            fullWidth\n            required={property.validation?.required}\n            error={showError}\n        >\n\n            <InputLabel id={`${name}-multiselect-label`}\n                        classes={{\n                            root: classes.inputLabel,\n                            shrink: classes.shrinkInputLabel\n                        }}>\n                <LabelWithIcon property={property}/>\n            </InputLabel>\n\n            <MuiSelect\n                multiple\n                sx={{\n                    minHeight: \"64px\"\n                }}\n                variant={\"filled\"}\n                labelId={`${name}-multiselect-label`}\n                value={validValue ? value.map(v => v.toString()) : []}\n                autoFocus={autoFocus}\n                disabled={disabled}\n                onChange={(evt: any) => {\n                    let newValue;\n                    if (property.of?.dataType === \"number\")\n                        newValue = evt.target.value ? evt.target.value.map((e: any) => parseFloat(e)) : [];\n                    else\n                        newValue = evt.target.value;\n                    return setValue(\n                        newValue\n                    );\n                }}\n                renderValue={(selected: any) => (\n                    <ArrayEnumPreview value={selected}\n                                      name={name}\n                                      enumValues={enumValues}\n                                      size={\"regular\"}/>\n                )}>\n\n                {enumToObjectEntries(enumValues)\n                    .map(([enumKey, labelOrConfig]) => {\n                        const checked = validValue && value.map(v => v.toString()).includes(enumKey.toString());\n                        return (\n                            <MenuItem key={`form-select-${name}-${enumKey}`}\n                                      value={enumKey}\n                                      disabled={isEnumValueDisabled(labelOrConfig)}\n                                      dense={true}>\n                                <Checkbox checked={checked}/>\n                                <ListItemText primary={\n                                    <EnumValuesChip\n                                        enumKey={enumKey}\n                                        enumValues={enumValues}\n                                        small={true}/>\n                                }/>\n                            </MenuItem>\n                        );\n                    })}\n            </MuiSelect>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n            {showError && <FormHelperText>{error}</FormHelperText>}\n\n        </FormControl>\n    );\n}\n","import * as React from \"react\";\nimport { useCallback } from \"react\";\n\nimport isEqual from \"react-fast-compare\";\nimport {\n    Box,\n    FormControl,\n    FormHelperText,\n    IconButton,\n    Paper,\n    Skeleton,\n    Theme,\n    Typography\n} from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {\n    ArrayProperty,\n    FieldProps,\n    Property,\n    StorageMeta,\n    StringProperty\n} from \"../../models\";\nimport { useDropzone } from \"react-dropzone\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { PreviewComponent, PreviewSize } from \"../../preview\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\n\nimport clsx from \"clsx\";\nimport {\n    useClearRestoreValue,\n    useSnackbarController,\n    useStorageSource\n} from \"../../hooks\";\nimport { isReadOnly } from \"../../core/utils\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    dropZone: {\n        position: \"relative\",\n        paddingTop: \"2px\",\n        border: \"2px solid transparent\",\n        minHeight: \"254px\",\n        outline: 0,\n        borderTopLeftRadius: \"2px\",\n        borderTopRightRadius: \"2px\",\n        backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.06)\" : \"rgba(255, 255, 255, 0.09)\",\n        borderBottom: theme.palette.mode === \"light\" ? \"1px solid rgba(0, 0, 0, 0.42)\" : \"1px solid rgba(255, 255, 255, 0.7)\",\n        boxSizing: \"border-box\",\n        transition: \"border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        \"&:focus\": {\n            borderBottom: `2px solid ${theme.palette.primary.main}`\n        }\n    },\n    disabled: {\n        backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n        color: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.38)\" : \"rgba(255, 255, 255, 0.38)\",\n        borderBottom: `1px dotted ${theme.palette.grey[400]}`\n    },\n    nonActiveDrop: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.09)\" : \"rgba(255, 255, 255, 0.13)\"\n        }\n    },\n    activeDrop: {\n        paddingTop: \"0px\",\n        boxSizing: \"border-box\",\n        border: \"2px solid\"\n    },\n    acceptDrop: {\n        transition: \"background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n        background: \"repeating-linear-gradient( 45deg, rgba(0, 0, 0, 0.09), rgba(0, 0, 0, 0.09) 10px, rgba(0, 0, 0, 0.12) 10px, rgba(0, 0, 0, 0.12) 20px) !important\",\n        border: \"2px solid\",\n        borderColor: theme.palette.success.light\n    },\n    rejectDrop: {\n        border: \"2px solid\",\n        borderColor: theme.palette.error.light\n    },\n    uploadItem: {\n        padding: theme.spacing(1),\n        minWidth: 220,\n        minHeight: 220\n    },\n    uploadItemSmall: {\n        padding: theme.spacing(1),\n        minWidth: 118,\n        minHeight: 118,\n        boxSizing: \"border-box\"\n    },\n    thumbnailCloseIcon: {\n        position: \"absolute\",\n        borderRadius: \"9999px\",\n        top: -8,\n        right: -8,\n        zIndex: 100,\n        backgroundColor: theme.palette.background.paper\n    }\n}));\n\ntype StorageUploadFieldProps = FieldProps<string | string[]>;\n\n/**\n * Field that allows to upload files to Google Cloud Storage.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function StorageUploadField({\n                                       name,\n                                       value,\n                                       setValue,\n                                       error,\n                                       showError,\n                                       autoFocus,\n                                       tableMode,\n                                       property,\n                                       includeDescription,\n                                       context,\n                                       isSubmitting\n                                   }: StorageUploadFieldProps) {\n\n    const multipleFilesSupported = property.dataType === \"array\";\n    const disabled = isReadOnly(property) || !!property.disabled || isSubmitting;\n\n    const internalValue = multipleFilesSupported\n        ? (Array.isArray(value) ? value : [])\n        : value;\n\n    useClearRestoreValue<string | string[]>({\n        property,\n        value,\n        setValue\n    });\n\n    const storageMeta: StorageMeta | undefined = property.dataType === \"string\"\n? property.config?.storageMeta\n        : property.dataType === \"array\" &&\n        (property.of as Property).dataType === \"string\"\n? (property.of as StringProperty).config?.storageMeta\n            : undefined;\n\n    if (!storageMeta)\n        throw Error(\"Storage meta must be specified\");\n\n    const fileNameBuilder = (file: File) => {\n        if (storageMeta.fileName) {\n            const fileName = storageMeta.fileName({\n                entityId: context.entityId,\n                values: context.values,\n                property,\n                file,\n                storageMeta,\n                name\n            });\n\n            if (!fileName || fileName.length === 0) {\n                throw Error(\"You need to return a valid filename\");\n            }\n            return fileName;\n        }\n        return file.name;\n    };\n\n    const storagePathBuilder = (file: File) => {\n        if (typeof storageMeta.storagePath === \"string\")\n            return storageMeta.storagePath;\n\n        if (typeof storageMeta.storagePath === \"function\") {\n            const storagePath = storageMeta.storagePath({\n                entityId: context.entityId,\n                values: context.values,\n                property,\n                file,\n                storageMeta,\n                name\n            });\n\n            if (!storagePath || storagePath.length === 0) {\n                throw Error(\"You need to return a valid filename\");\n            }\n            return storagePath;\n        }\n        console.warn(\"When using a storage property, if you don't specify the storagePath, the root storage is used\");\n        return \"/\";\n    };\n\n    return (\n\n            <FormControl fullWidth\n                         required={property.validation?.required}\n                         error={showError}>\n\n                {!tableMode &&\n                <FormHelperText filled\n                                required={property.validation?.required}>\n                    <LabelWithIcon property={property}/>\n                </FormHelperText>}\n\n                <StorageUpload\n                    value={internalValue}\n                    name={name}\n                    disabled={disabled}\n                    autoFocus={autoFocus}\n                    property={property}\n                    onChange={(newValue) => {\n                        setValue(newValue);\n                    }}\n                    fileNameBuilder={fileNameBuilder}\n                    storagePathBuilder={storagePathBuilder}\n                    storageMeta={storageMeta}\n                    multipleFilesSupported={multipleFilesSupported}/>\n\n                {includeDescription &&\n                <FieldDescription property={property as any}/>}\n\n                {showError && <FormHelperText>{error}</FormHelperText>}\n\n            </FormControl>\n    );\n}\n\n/**\n * Internal representation of an item in the storage\n * It can have two states, having a storagePathOrDownloadUrl set,\n * which means the file has\n * been uploaded and it is rendered as a preview\n * Or have a pending file being uploaded.\n */\ninterface StorageFieldItem {\n    id: number; // generated on the fly for internal use only\n    storagePathOrDownloadUrl?: string;\n    file?: File;\n    fileName?: string;\n    metadata?: any,\n    size: PreviewSize\n}\n\ninterface StorageUploadProps {\n    value: string | string[];\n    name: string;\n    property: StringProperty | ArrayProperty<string[]>;\n    onChange: (value: string | string[] | null) => void;\n    multipleFilesSupported: boolean;\n    autoFocus: boolean;\n    disabled: boolean;\n    storageMeta: StorageMeta;\n    fileNameBuilder: (file: File) => string;\n    storagePathBuilder: (file: File) => string;\n}\n\nfunction FileDropComponent({\n                               storageMeta,\n                               disabled,\n                               isDraggingOver,\n                               onExternalDrop,\n                               multipleFilesSupported,\n                               droppableProvided,\n                               autoFocus,\n                               internalValue,\n                               property,\n                               onClear,\n                               metadata,\n                               storagePathBuilder,\n                               onFileUploadComplete,\n                               size,\n                               name,\n                               helpText\n                           }: {\n    storageMeta: StorageMeta,\n    disabled: boolean,\n    isDraggingOver: boolean,\n    droppableProvided: any,\n    onExternalDrop: (acceptedFiles: File[]) => void,\n    multipleFilesSupported: boolean,\n    autoFocus: boolean,\n    internalValue: StorageFieldItem[],\n    property: StringProperty | ArrayProperty<string[]>,\n    onClear: (clearedStoragePathOrDownloadUrl: string) => void,\n    metadata: any,\n    storagePathBuilder: (file: File) => string,\n    onFileUploadComplete: (uploadedPath: string, entry: StorageFieldItem, fileMetadata?: any) => Promise<void>,\n    size: PreviewSize,\n    name: string,\n    helpText: string\n}) {\n\n    const classes = useStyles();\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n            accept: storageMeta.acceptedFiles,\n            disabled: disabled || isDraggingOver,\n            noDragEventsBubbling: true,\n            onDrop: onExternalDrop\n        }\n    );\n\n    return (\n        <Box\n            {...getRootProps()}\n            className={clsx(classes.dropZone, {\n                [classes.nonActiveDrop]: !isDragActive,\n                [classes.activeDrop]: isDragActive,\n                [classes.rejectDrop]: isDragReject,\n                [classes.acceptDrop]: isDragAccept,\n                [classes.disabled]: disabled\n            })}\n            sx={{\n                display: multipleFilesSupported && internalValue.length ? undefined : \"flex\",\n                alignItems: \"center\"\n            }}\n        >\n            <Box\n                {...droppableProvided.droppableProps}\n                ref={droppableProvided.innerRef}\n                sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    overflow: multipleFilesSupported && internalValue.length ? \"auto\" : undefined,\n                    minHeight: multipleFilesSupported && internalValue.length ? 180 : 250,\n                    p: 1,\n                    \"&::-webkit-scrollbar\": {\n                        display: \"none\"\n                    }\n                }}\n            >\n\n                <input\n                    autoFocus={autoFocus}\n                    {...getInputProps()} />\n\n                {internalValue.map((entry, index) => {\n                    let child: any;\n                    if (entry.storagePathOrDownloadUrl) {\n                        const renderProperty = multipleFilesSupported\n                            ? (property as ArrayProperty<string[]>).of as StringProperty\n                            : property as StringProperty;\n                        child = (\n                            <StorageItemPreview\n                                name={`storage_preview_${entry.storagePathOrDownloadUrl}`}\n                                property={renderProperty}\n                                disabled={disabled}\n                                value={entry.storagePathOrDownloadUrl}\n                                onClear={onClear}\n                                size={entry.size}/>\n                        );\n                    } else if (entry.file) {\n                        child = (\n                            <StorageUploadProgress\n                                entry={entry}\n                                metadata={metadata}\n                                storagePath={storagePathBuilder(entry.file)}\n                                onFileUploadComplete={onFileUploadComplete}\n                                size={size}\n                            />\n                        );\n                    }\n\n                    return (\n                        <Draggable\n                            key={`array_field_${name}_${entry.id}}`}\n                            draggableId={`array_field_${name}_${entry.id}}`}\n                            index={index}>\n                            {(provided, snapshot) => (\n                                <Box\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={\n                                        provided.draggableProps.style\n                                    }\n                                    sx={{\n                                        borderRadius: \"4px\"\n                                    }}\n                                >\n                                    {child}\n                                </Box>\n                            )}\n                        </Draggable>\n                    );\n                })\n                }\n\n                {droppableProvided.placeholder}\n\n\n            </Box>\n\n            <Box\n                sx={{\n                    flexGrow: 1,\n                    minHeight: 38,\n                    boxSizing: \"border-box\",\n                    m: 2\n                }}>\n                <Typography align={\"center\"}\n                            variant={\"body2\"}\n                            sx={(theme) => ({\n                                color: \"#838383\",\n                                fontWeight: theme.typography.fontWeightMedium\n                            })}>\n                    {helpText}\n                </Typography>\n            </Box>\n\n        </Box>\n    );\n}\n\nexport function StorageUpload({\n                                  property,\n                                  name,\n                                  value,\n                                  onChange,\n                                  multipleFilesSupported,\n                                  disabled,\n                                  autoFocus,\n                                  storageMeta,\n                                  fileNameBuilder,\n                                  storagePathBuilder\n                              }: StorageUploadProps) {\n\n    const storage = useStorageSource();\n\n    if (multipleFilesSupported) {\n        const arrayProperty = property as ArrayProperty<string[]>;\n        if (arrayProperty.of) {\n            if (arrayProperty.of.dataType !== \"string\") {\n                throw Error(\"Storage field using array must be of data type string\");\n            }\n        } else {\n            throw Error(\"Storage field using array must be of data type string\");\n        }\n    }\n\n    const metadata: any | undefined = storageMeta?.metadata;\n\n    const size = multipleFilesSupported ? \"small\" : \"regular\";\n\n    const internalInitialValue: StorageFieldItem[] =\n        (multipleFilesSupported\n            ? value as string[]\n            : [value as string]).map(entry => (\n            {\n                id: getRandomId(),\n                storagePathOrDownloadUrl: entry,\n                metadata: metadata,\n                size: size\n            }\n        ));\n\n    const [initialValue, setInitialValue] = React.useState<string | string[]>(value);\n    const [internalValue, setInternalValue] = React.useState<StorageFieldItem[]>(internalInitialValue);\n    const [hoveredIndex, setHoveredIndex] = React.useState<number | undefined>(undefined);\n\n    if (!isEqual(initialValue, value)) {\n        setInitialValue(value);\n        setInternalValue(internalInitialValue);\n    }\n\n    function getRandomId() {\n        return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER));\n    }\n\n    const moveItem = (fromIndex: number, toIndex: number) => {\n        const newValue = [...internalValue];\n        const item = newValue[fromIndex];\n        newValue.splice(fromIndex, 1);\n        newValue.splice(toIndex, 0, item);\n        setInternalValue(newValue);\n        const fieldValue = newValue\n            .filter(e => !!e.storagePathOrDownloadUrl)\n            .map(e => e.storagePathOrDownloadUrl as string);\n        onChange(fieldValue);\n    };\n\n    const onDragEnd = (result: any) => {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        moveItem(result.source.index, result.destination.index);\n\n    }\n\n    function removeDuplicates(items: StorageFieldItem[]) {\n        return items.filter(\n            (v, i) => {\n                return ((items.map((v) => v.storagePathOrDownloadUrl).indexOf(v.storagePathOrDownloadUrl) === i) || !v.storagePathOrDownloadUrl) &&\n                    ((items.map((v) => v.file).indexOf(v.file) === i) || !v.file);\n            }\n        );\n    }\n\n    const onExternalDrop = (acceptedFiles: File[]) => {\n\n        if (!acceptedFiles.length || disabled)\n            return;\n\n        let newInternalValue: StorageFieldItem[];\n        if (multipleFilesSupported) {\n            newInternalValue = [...internalValue,\n                ...(acceptedFiles.map(file => ({\n                    id: getRandomId(),\n                    file,\n                    fileName: fileNameBuilder(file),\n                    metadata,\n                    size: size\n                } as StorageFieldItem)))];\n        } else {\n            newInternalValue = [{\n                id: getRandomId(),\n                file: acceptedFiles[0],\n                fileName: fileNameBuilder(acceptedFiles[0]),\n                metadata,\n                size: size\n            }];\n        }\n\n        // Remove either storage path or file duplicates\n        newInternalValue = removeDuplicates(newInternalValue);\n        setInternalValue(newInternalValue);\n    };\n\n    const onFileUploadComplete = async (uploadedPath: string,\n                                        entry: StorageFieldItem,\n                                        metadata?: any) => {\n\n        console.debug(\"onFileUploadComplete\", uploadedPath, entry);\n\n        let uploadPathOrDownloadUrl = uploadedPath;\n        if (storageMeta.storeUrl) {\n            uploadPathOrDownloadUrl = await storage.getDownloadURL(uploadedPath);\n        }\n        if (storageMeta.postProcess) {\n            uploadPathOrDownloadUrl = await storageMeta.postProcess(uploadPathOrDownloadUrl);\n        }\n\n        let newValue: StorageFieldItem[];\n\n        entry.storagePathOrDownloadUrl = uploadPathOrDownloadUrl;\n        entry.metadata = metadata;\n        newValue = [...internalValue];\n\n        newValue = removeDuplicates(newValue);\n        setInternalValue(newValue);\n\n        const fieldValue = newValue\n            .filter(e => !!e.storagePathOrDownloadUrl)\n            .map(e => e.storagePathOrDownloadUrl as string);\n\n        if (multipleFilesSupported) {\n            onChange(fieldValue);\n        } else {\n            onChange(fieldValue ? fieldValue[0] : null);\n        }\n    };\n\n    const onClear = (clearedStoragePathOrDownloadUrl: string) => {\n        if (multipleFilesSupported) {\n            const newValue: StorageFieldItem[] = internalValue.filter(v => v.storagePathOrDownloadUrl !== clearedStoragePathOrDownloadUrl);\n            onChange(newValue.filter(v => !!v.storagePathOrDownloadUrl).map(v => v.storagePathOrDownloadUrl as string));\n            setInternalValue(newValue);\n        } else {\n            onChange(null);\n            setInternalValue([]);\n        }\n    };\n\n    const helpText = multipleFilesSupported\n        ? \"Drag 'n' drop some files here, or click to select files\"\n        : \"Drag 'n' drop a file here, or click to select one\";\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId={`droppable_${name}`} direction=\"horizontal\">\n                {(provided, snapshot) => {\n                    return <FileDropComponent storageMeta={storageMeta}\n                                              disabled={disabled}\n                                              isDraggingOver={snapshot.isDraggingOver}\n                                              droppableProvided={provided}\n                                              onExternalDrop={onExternalDrop}\n                                              multipleFilesSupported={multipleFilesSupported}\n                                              autoFocus={autoFocus}\n                                              internalValue={internalValue}\n                                              property={property}\n                                              onClear={onClear}\n                                              metadata={metadata}\n                                              storagePathBuilder={storagePathBuilder}\n                                              onFileUploadComplete={onFileUploadComplete}\n                                              size={size}\n                                              name={name}\n                                              helpText={helpText}/>\n                }}\n            </Droppable>\n        </DragDropContext>\n    );\n\n}\n\n\ninterface StorageUploadItemProps {\n    storagePath: string;\n    metadata?: any,\n    entry: StorageFieldItem,\n    onFileUploadComplete: (value: string,\n                           entry: StorageFieldItem,\n                           metadata?: any) => Promise<void>;\n    size: PreviewSize;\n}\n\nexport function StorageUploadProgress({\n                                          storagePath,\n                                          entry,\n                                          metadata,\n                                          onFileUploadComplete,\n                                          size\n                                      }: StorageUploadItemProps) {\n\n\n    const storage = useStorageSource();\n\n    const classes = useStyles();\n    const snackbarContext = useSnackbarController();\n\n    const [error, setError] = React.useState<string>();\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const mounted = React.useRef(false);\n\n    const upload = useCallback((file: File, fileName?: string) => {\n\n        setError(undefined);\n        setLoading(true);\n\n        storage.uploadFile({ file, fileName, path: storagePath, metadata })\n            .then(async ({ path }) => {\n                console.debug(\"Upload successful\");\n                await onFileUploadComplete(path, entry, metadata);\n                if (mounted.current)\n                    setLoading(false);\n            })\n            .catch((e) => {\n                console.error(\"Upload error\", e);\n                if (mounted.current) {\n                    setError(e.message);\n                    setLoading(false);\n                }\n                snackbarContext.open({\n                    type: \"error\",\n                    title: \"Error uploading file\",\n                    message: e.message\n                });\n            });\n    }, [entry, metadata, onFileUploadComplete, snackbarContext, storage, storagePath]);\n\n    React.useEffect(() => {\n        mounted.current = true;\n        if (entry.file)\n            upload(entry.file, entry.fileName);\n        return () => {\n            mounted.current = false;\n        };\n    }, [entry.file, entry.fileName, upload]);\n\n    return (\n\n        <Box m={1}>\n            <Paper elevation={0}\n                   className={size === \"regular\" ? classes.uploadItem : classes.uploadItemSmall}\n                   variant={\"outlined\"}>\n\n                {loading && <Skeleton variant=\"rectangular\" sx={{\n                    width: \"100%\",\n                    height: \"100%\"\n                }}/>}\n\n                {error && <p>Error uploading file: {error}</p>}\n\n            </Paper>\n        </Box>\n\n    );\n\n}\n\ninterface StorageItemPreviewProps {\n    name: string;\n    property: StringProperty;\n    value: string,\n    onClear: (value: string) => void;\n    size: PreviewSize;\n    disabled: boolean;\n}\n\nexport function StorageItemPreview({\n                                       name,\n                                       property,\n                                       value,\n                                       onClear,\n                                       disabled,\n                                       size\n                                   }: StorageItemPreviewProps) {\n\n    const classes = useStyles();\n    return (\n        <Box m={1} position={\"relative\"}>\n\n            <Paper\n                elevation={0}\n                className={size === \"regular\" ? classes.uploadItem : classes.uploadItemSmall}\n                variant={\"outlined\"}>\n\n                {!disabled &&\n\n                <a\n                    className={classes.thumbnailCloseIcon}>\n                    <IconButton\n                        size={\"small\"}\n                        onClick={(event) => {\n                            event.stopPropagation();\n                            onClear(value);\n                        }}>\n                        <ClearIcon fontSize={\"small\"}/>\n                    </IconButton>\n                </a>\n                }\n\n                {value &&\n                <ErrorBoundary>\n                    <PreviewComponent name={name}\n                                      value={value}\n                                      property={property}\n                                      size={size}/>\n                </ErrorBoundary>\n                }\n\n            </Paper>\n\n        </Box>\n    );\n\n}\n","import React from \"react\";\nimport {\n    Box,\n    FilledInput,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    InputLabel,\n    Switch,\n    Theme,\n    Typography\n} from \"@mui/material\";\n\nimport { FieldProps, MediaType, StringProperty } from \"../../models\";\nimport { PreviewComponent } from \"../../preview\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { useClearRestoreValue } from \"../../hooks\";\n\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst formStyles = makeStyles((theme: Theme) => createStyles({\n    inputLabel: {\n        marginTop: theme.spacing(1 / 2),\n        marginLeft: theme.spacing(1 / 2)\n    },\n    shrinkInputLabel: {\n        marginTop: \"-2px\",\n        marginLeft: theme.spacing(1 / 2)\n    }\n}))\n\ninterface TextFieldProps<T extends string | number> extends FieldProps<T> {\n    allowInfinity?: boolean\n}\n\n/**\n * Generic text field.\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function TextField<T extends string | number>({\n                                                         name,\n                                                         value,\n                                                         setValue,\n                                                         error,\n                                                         showError,\n                                                         disabled,\n                                                         autoFocus,\n                                                         property,\n                                                         includeDescription,\n                                                         allowInfinity,\n                                                         shouldAlwaysRerender\n                                                     }: TextFieldProps<T>) {\n\n    const classes = formStyles();\n\n    let mediaType: MediaType | undefined;\n    let multiline: boolean | undefined;\n    if (property.dataType === \"string\") {\n        const url = (property as StringProperty).config?.url;\n        mediaType = typeof url === \"string\" ? url : undefined;\n        multiline = (property as StringProperty).config?.multiline;\n    }\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const isMultiline = !!multiline;\n\n    const internalValue = value ?? (property.dataType === \"string\" ? \"\" : value === 0 ? 0 : \"\");\n\n    const valueIsInfinity = internalValue === Infinity;\n    const inputType = !valueIsInfinity && property.dataType === \"number\" ? \"number\" : undefined;\n\n    const updateValue = (newValue: typeof internalValue | undefined) => {\n\n        if (!newValue) {\n            setValue(\n                null\n            );\n        } else if (inputType === \"number\") {\n            const numValue = parseFloat(newValue as string);\n            setValue(\n                numValue as T\n            );\n        } else {\n            setValue(\n                newValue\n            );\n        }\n    };\n\n    const filledInput = (\n        <FilledInput\n            sx={{\n                minHeight: \"64px\"\n            }}\n            autoFocus={autoFocus}\n            type={inputType}\n            multiline={isMultiline}\n            inputProps={{\n                rows: 4\n            }}\n            value={valueIsInfinity ? \"Infinity\" : (value ?? \"\")}\n            disabled={disabled}\n            onChange={(evt) => {\n                updateValue(evt.target.value as T);\n            }}\n        />\n    );\n\n    return (\n        <>\n\n            <FormControl\n                variant=\"filled\"\n                required={property.validation?.required}\n                error={showError}\n                disabled={valueIsInfinity}\n                fullWidth>\n\n                <InputLabel\n                    classes={{\n                        root: classes.inputLabel,\n                        shrink: classes.shrinkInputLabel\n                    }}>\n                    <LabelWithIcon property={property}/>\n                </InputLabel>\n\n                {filledInput}\n\n                <Box display={\"flex\"}>\n\n                    <Box flexGrow={1}>\n                        {showError && <FormHelperText>{error}</FormHelperText>}\n\n                        {includeDescription &&\n                        <FieldDescription property={property}/>}\n                    </Box>\n\n                    {allowInfinity &&\n                    <FormControlLabel\n                        checked={valueIsInfinity}\n                        style={{ marginRight: 0 }}\n                        labelPlacement={\"start\"}\n                        control={\n                            <Switch\n                                size={\"small\"}\n                                type={\"checkbox\"}\n                                onChange={(evt) => {\n                                    updateValue(\n                                        evt.target.checked ? Infinity as T : undefined);\n                                }}/>\n                        }\n                        disabled={disabled}\n                        label={\n                            <Typography variant={\"caption\"}>\n                                Set value to Infinity\n                            </Typography>\n                        }\n                    />\n                    }\n                </Box>\n\n            </FormControl>\n\n            {mediaType && internalValue &&\n            <ErrorBoundary>\n                <Box m={1}>\n                    <PreviewComponent name={name}\n                                      value={internalValue}\n                                      property={property}\n                                      size={\"regular\"}/>\n                </Box>\n            </ErrorBoundary>\n            }\n        </>\n    );\n\n}\n","import React, { useState } from \"react\";\nimport {\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Switch,\n    Theme,\n    Typography\n} from \"@mui/material\";\nimport clsx from \"clsx\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { FieldProps } from \"../../models\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            justifyContent: \"space-between\",\n            margin: 0,\n            width: \"100%\",\n            minHeight: \"64px\",\n            paddingLeft: \"16px\",\n            paddingRight: \"24px\",\n            color: \"rgba(0, 0, 0, 0.87)\",\n            boxSizing: \"border-box\",\n            position: \"relative\",\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.06)\" : \"rgba(255, 255, 255, 0.09)\",\n            borderTopLeftRadius: \"4px\",\n            borderTopRightRadius: \"4px\",\n            transition: \"background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n            \"&::before\": {\n                borderBottom: theme.palette.mode === \"light\" ? \"1px solid rgba(0, 0, 0, 0.42)\" : \"1px solid rgba(255, 255, 255, 0.7)\",\n                left: 0,\n                bottom: 0,\n                content: \"\\\"\\\\00a0\\\"\",\n                position: \"absolute\",\n                right: 0,\n                transition: \"border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n                pointerEvents: \"none\"\n            },\n            \"&::after\": {\n                content: \"\\\"\\\"\",\n                transition: \"transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n                left: 0,\n                bottom: 0,\n                position: \"absolute\",\n                right: 0,\n                transform: \"scaleX(0)\",\n                borderBottom: `2px solid ${theme.palette.primary.main}`\n            },\n            \"&:hover\": {\n                backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.09)\" : \"rgba(255, 255, 255, 0.13)\"\n            }\n        },\n        focus: {\n            \"&::before\": {\n                borderBottom: theme.palette.mode === \"light\" ? \"1px solid rgba(255, 255, 255, 0.7)\" : \"1px solid rgba(0, 0, 0, 0.87)\"\n            },\n            \"&::after\": {\n                transform: \"scaleX(1)\",\n                pointerEvents: \"none\"\n            }\n        }\n    })\n);\n\n\ntype SwitchFieldProps = FieldProps<boolean>;\n\nconst SwitchFieldComponent = React.forwardRef(function({\n                                                           name,\n                                                           value,\n                                                           setValue,\n                                                           error,\n                                                           showError,\n                                                           autoFocus,\n                                                           disabled,\n                                                           touched,\n                                                           property,\n                                                           includeDescription,\n                                                           shouldAlwaysRerender\n                                                       }: SwitchFieldProps, ref) {\n\n    const classes = useStyles();\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const [focus, setFocus] = useState<boolean>(autoFocus);\n\n    return (\n        <>\n            <FormControl fullWidth>\n\n                <FormControlLabel\n                    className={clsx(classes.formControl,\n                        {\n                            [classes.focus]: focus\n                        })}\n                    onClick={(e) => setFocus(true)}\n                    labelPlacement={\"start\"}\n                    checked={Boolean(value)}\n                    inputRef={ref}\n                    control={\n                        <Switch\n                            type={\"checkbox\"}\n                            color={\"secondary\"}\n                            autoFocus={autoFocus}\n                            disabled={disabled}\n                            onFocus={(e) => setFocus(true)}\n                            onBlur={(e) => setFocus(false)}\n                            onChange={(evt) => {\n                                setFocus(true);\n                                setValue(\n                                    evt.target.checked\n                                );\n                            }}/>\n                    }\n                    disabled={disabled}\n                    label={\n                        <Typography color={\"textSecondary\"}>\n                            <LabelWithIcon\n\n                                property={property}/>\n                        </Typography>}\n                />\n\n                {includeDescription &&\n                <FieldDescription property={property}/>}\n\n                {showError && <FormHelperText>{error}</FormHelperText>}\n\n            </FormControl>\n\n\n        </>\n\n    );\n});\n\n/**\n * Simple boolean switch.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport const SwitchField = (props: SwitchFieldProps) => {\n    return <SwitchFieldComponent {...props}/>;\n};\n\n","import React from \"react\";\n\nimport { TextField as MuiTextField } from \"@mui/material\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\n\nimport { FieldProps } from \"../../models\";\n\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\n\ntype DateTimeFieldProps = FieldProps<Date>;\n\n/**\n * Field that allows selecting a date\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function DateTimeField({\n                                  name,\n                                  value,\n                                  setValue,\n                                  autoFocus,\n                                  error,\n                                  showError,\n                                  disabled,\n                                  touched,\n                                  property,\n                                  includeDescription,\n                                  shouldAlwaysRerender\n                              }: DateTimeFieldProps) {\n\n\n    const internalValue = value || null;\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    return (\n        <>\n\n            <DateTimePicker\n                clearable\n                autoFocus={autoFocus}\n                value={internalValue}\n                label={\n                    <LabelWithIcon property={property}/>\n                }\n                renderInput={(props) => (\n                    <MuiTextField {...props}\n                                  fullWidth\n                                  InputProps={{\n                                      ...props.InputProps,\n                                      sx: {\n                                          minHeight: \"64px\"\n                                      }\n                                  }}\n                                  error={showError}\n                        // format={dateFormat}\n                                  variant={\"filled\"}\n                                  helperText={showError ? error : null}/>\n                )}\n                disabled={disabled}\n                onChange={(dateValue) => {\n                    return setValue(\n                        dateValue\n                    );\n                }}\n            />\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n        </>\n    );\n}\n","import React, { useMemo } from \"react\";\n\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    IconButton,\n    Theme,\n    Tooltip,\n    Typography\n} from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport KeyboardTabIcon from \"@mui/icons-material/KeyboardTab\";\n\nimport {\n    AnyProperty,\n    Entity,\n    EntityCollectionResolver,\n    EntityReference,\n    EntitySchemaResolver,\n    FieldProps\n} from \"../../models\";\nimport { FieldDescription } from \"../../form\";\nimport { ErrorView, ReferenceDialog } from \"../../core\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\nimport { PreviewComponent, SkeletonComponent } from \"../../preview\";\nimport { LabelWithIcon } from \"../components\";\nimport {\n    useClearRestoreValue,\n    useEntityFetch,\n    useNavigation,\n    useSideEntityController\n} from \"../../hooks\";\nimport { getReferenceFrom } from \"../../core/utils\";\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        elevation: 0,\n        width: \"100%\",\n        padding: theme.spacing(1),\n        position: \"relative\",\n        transition: \"background-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n        borderTopLeftRadius: \"2px\",\n        borderTopRightRadius: \"2px\",\n        backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.06)\" : \"rgba(255, 255, 255, 0.09)\",\n        // borderBottom: `1px solid ${darken(theme.palette.background.default, 0.1)}`,\n        \"&::before\": {\n            borderBottom: theme.palette.mode === \"light\" ? \"1px solid rgba(0, 0, 0, 0.42)\" : \"1px solid rgba(255, 255, 255, 0.7)\",\n            left: 0,\n            bottom: 0,\n            content: \"\\\"\\\\00a0\\\"\",\n            position: \"absolute\",\n            right: 0,\n            transition: \"border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n            pointerEvents: \"none\"\n        },\n        \"&::after\": {\n            content: \"\\\"\\\"\",\n            transition: \"transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\n            left: 0,\n            bottom: 0,\n            position: \"absolute\",\n            right: 0,\n            transform: \"scaleX(0)\",\n            borderBottom: `2px solid ${theme.palette.primary.main}`\n        },\n        \"&:hover\": {\n            cursor: \"pointer\",\n            backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.09)\" : \"rgba(255, 255, 255, 0.13)\"\n        },\n        color: \"#838383\",\n        fontWeight: theme.typography.fontWeightMedium\n    },\n    disabled: {\n        backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n        color: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.38)\" : \"rgba(255, 255, 255, 0.38)\",\n        \"&::before\": {\n            borderBottom: theme.palette.mode === \"light\" ? \"1px dotted rgba(0, 0, 0, 0.42)\" : \"1px dotted rgba(255, 255, 255, 0.7)\"\n        },\n        \"&::after\": {\n            borderBottom: `2px dotted ${theme.palette.primary.main}`\n        },\n        \"&:hover\": {\n            cursor: \"inherit\",\n            backgroundColor: \"rgba(0, 0, 0, 0.12)\"\n        }\n    }\n}));\n\n/**\n * Field that opens a reference selection dialog.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ReferenceField<M extends { [Key: string]: any }>({\n                                                                     name,\n                                                                     value,\n                                                                     setValue,\n                                                                     error,\n                                                                     showError,\n                                                                     disabled,\n                                                                     touched,\n                                                                     autoFocus,\n                                                                     property,\n                                                                     includeDescription,\n                                                                     context,\n                                                                     shouldAlwaysRerender\n                                                                 }: FieldProps<EntityReference>) {\n\n\n    if (typeof property.path !== \"string\") {\n        throw Error(\"Picked the wrong component ReferenceField\");\n    }\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(autoFocus);\n    const sideEntityController = useSideEntityController();\n\n    const navigationContext = useNavigation();\n    const collectionResolver: EntityCollectionResolver | undefined = useMemo(() => {\n        return navigationContext.getCollectionResolver(property.path as string);\n    }, [property.path, navigationContext]);\n\n    if (!collectionResolver) {\n        throw Error(`Couldn't find the corresponding collection for the path: ${property.path}`);\n    }\n\n    const schemaResolver = collectionResolver.schemaResolver;\n    const path = property.path;\n\n    const validValue = value && value instanceof EntityReference;\n\n    const {\n        entity,\n        dataLoading,\n        dataLoadingError\n    } = useEntityFetch({\n        path: validValue ? value.path : undefined,\n        entityId: validValue ? value.id : undefined,\n        schema: schemaResolver,\n        useCache: true\n    });\n\n    const handleEntityClick = (entity: Entity<M>) => {\n        if (disabled)\n            return;\n        setValue(entity ? getReferenceFrom(entity) : null);\n        setOpen(false);\n    };\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const clearValue = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        setValue(null);\n        setOpen(false);\n    };\n\n    const seeEntityDetails = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        if (entity)\n            sideEntityController.open({\n                entityId: entity.id,\n                path,\n                overrideSchemaRegistry: false\n            });\n    };\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    function buildEntityView(schemaResolver?: EntitySchemaResolver) {\n\n        const missingEntity = entity && !entity.values;\n\n        let body: JSX.Element;\n        if (!schemaResolver) {\n            body = (\n                <ErrorView\n                    error={\"The specified collection does not exist. Check console\"}/>\n            );\n        } else if (missingEntity) {\n            body = (\n                <Tooltip title={value && value.path}>\n                    <Box\n                        display={\"flex\"}\n                        alignItems={\"center\"}\n                        p={1}\n                        flexGrow={1}>\n                        <ErrorIcon fontSize={\"small\"} color={\"error\"}/>\n                        <Box marginLeft={1}>Missing\n                            reference {entity && entity.id}</Box>\n                    </Box>\n                </Tooltip>\n            );\n        } else {\n            if (validValue) {\n\n                const schema = schemaResolver({});\n                const allProperties = Object.keys(schema.properties);\n                let listProperties = property.previewProperties?.filter(p => allProperties.includes(p as string));\n                if (!listProperties || !listProperties.length) {\n                    listProperties = allProperties;\n                }\n                listProperties = listProperties.slice(0, 3);\n\n                body = (\n                    <Box display={\"flex\"}\n                         flexDirection={\"column\"}\n                         flexGrow={1}\n                         ml={1}\n                         mr={1}>\n\n                        {listProperties && listProperties.map((key, index) => {\n                            const property = schema.properties[key as string];\n                            if (!property) return null;\n                            return (\n                                <Box\n                                    key={`reference_previews_${key as string}`}\n                                    mt={0.5}\n                                    mb={0.5}>\n                                    <ErrorBoundary>{\n                                        entity\n                                            ? <PreviewComponent\n                                                name={key as string}\n                                                value={(entity.values as any)[key]}\n                                                property={property as AnyProperty}\n                                                size={\"tiny\"}/>\n                                            : <SkeletonComponent\n                                                property={property as AnyProperty}\n                                                size={\"tiny\"}/>}\n                                    </ErrorBoundary>\n                                </Box>\n                            );\n                        })}\n                    </Box>\n                );\n            } else {\n                body = <Box p={1}\n                            onClick={disabled ? undefined : handleClickOpen}\n                            justifyContent=\"center\"\n                            display=\"flex\">\n                    <Typography variant={\"body2\"} sx={(theme) => ({\n                        flexGrow: 1,\n                        textAlign: \"center\",\n                        color: \"#838383\",\n                        fontWeight: theme.typography.fontWeightMedium\n                    })}>No value set</Typography>\n                    {!disabled && <Button variant=\"outlined\"\n                                          color=\"primary\">\n                        Set\n                    </Button>}\n                </Box>;\n            }\n        }\n\n        return (\n            <Box\n                onClick={disabled ? undefined : handleClickOpen}\n                display=\"flex\">\n\n                <Box display={\"flex\"}\n                     flexDirection={\"column\"}\n                     flexGrow={1}>\n\n                    <Box display={\"flex\"}\n                         flexDirection={\"row\"}\n                         flexGrow={1}>\n\n                        <Box flexGrow={1}>\n                            <FormHelperText filled\n                                            required={property.validation?.required}>\n                                <LabelWithIcon\n                                    property={property}/>\n                            </FormHelperText>\n                        </Box>\n\n                        {entity &&\n                        <Box\n                            alignSelf={\"center\"}\n                            m={1}>\n                            <Tooltip title={value && value.path}>\n                                <Typography variant={\"caption\"}\n                                            className={\"mono\"}>\n                                    {entity.id}\n                                </Typography>\n                            </Tooltip>\n                        </Box>}\n\n                        {!missingEntity && entity && value && <Box>\n                            <Tooltip title={`See details for ${entity.id}`}>\n                                <span>\n                                <IconButton\n                                    onClick={seeEntityDetails}\n                                    size=\"large\">\n                                    <KeyboardTabIcon/>\n                                </IconButton>\n                                    </span>\n                            </Tooltip>\n                        </Box>}\n\n                        {value && <Box>\n                            <Tooltip title=\"Clear\">\n                                <span>\n                                <IconButton\n                                    disabled={disabled}\n                                    onClick={disabled ? undefined : clearValue}\n                                    size=\"large\">\n                                    <ClearIcon/>\n                                </IconButton>\n                                </span>\n                            </Tooltip>\n                        </Box>}\n\n                    </Box>\n\n                    {body}\n\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <FormControl error={showError} fullWidth>\n\n            <div\n                className={`${classes.root} ${disabled ? classes.disabled : \"\"}`}>\n\n                {schemaResolver && buildEntityView(schemaResolver)}\n\n                {collectionResolver && <ReferenceDialog open={open}\n                                                        collectionResolver={collectionResolver}\n                                                        multiselect={false}\n                                                        path={path}\n                                                        onClose={onClose}\n                                                        onSingleEntitySelected={handleEntityClick}\n                />}\n\n\n            </div>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n            {showError && <FormHelperText>{error}</FormHelperText>}\n\n        </FormControl>\n    );\n}\n\n\n","import React, { useState } from \"react\";\nimport { CMSType, FieldProps, Property } from \"../../models\";\nimport { FormControl, FormHelperText, Paper, Theme } from \"@mui/material\";\nimport { FieldDescription } from \"../../form\";\nimport { ArrayContainer, LabelWithIcon } from \"../components\";\nimport { buildPropertyField } from \"../form_factory\";\nimport { useClearRestoreValue } from \"../../hooks\";\n\n\n/**\n * Generic array field that allows reordering and renders the child property\n * as nodes.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ArrayDefaultField<T extends Array<any>>({\n                                                            name,\n                                                            value,\n                                                            error,\n                                                            showError,\n                                                            isSubmitting,\n                                                            setValue,\n                                                            tableMode,\n                                                            property,\n                                                            includeDescription,\n                                                            underlyingValueHasChanged,\n                                                            context,\n                                                            disabled,\n                                                            shouldAlwaysRerender\n                                                        }: FieldProps<T>) {\n\n    if (!property.of)\n        throw Error(\"ArrayDefaultField misconfiguration. Property `of` not set\");\n\n    const ofProperty: Property<CMSType[]> = property.of as Property<CMSType[]>;\n\n    const [lastAddedId, setLastAddedId] = useState<number | undefined>();\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const buildEntry = (index: number, internalId: number) => {\n        return buildPropertyField({\n            name: `${name}[${index}]`,\n            disabled,\n            property: ofProperty,\n            includeDescription,\n            underlyingValueHasChanged,\n            context,\n            tableMode: false,\n            partOfArray: true,\n            autoFocus: internalId === lastAddedId,\n            shouldAlwaysRerender: false\n        });\n\n    };\n\n    return (\n\n        <FormControl fullWidth error={showError}>\n\n            {!tableMode && <FormHelperText filled\n                                           required={property.validation?.required}>\n                <LabelWithIcon property={property}/>\n            </FormHelperText>}\n\n            <Paper variant={\"outlined\"}\n                   sx={(theme) => ({\n                       elevation: 0,\n                       padding: theme.spacing(2),\n                       [theme.breakpoints.up(\"md\")]: {\n                           padding: theme.spacing(2)\n                       }\n                   })}>\n                <ArrayContainer value={value}\n                                name={name}\n                                buildEntry={buildEntry}\n                                onInternalIdAdded={setLastAddedId}\n                                disabled={isSubmitting || Boolean(property.disabled)}\n                                includeAddButton={!property.disabled}/>\n\n            </Paper>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n            {showError && typeof error === \"string\" &&\n            <FormHelperText>{error}</FormHelperText>}\n\n        </FormControl>\n    );\n}\n\n\n","import React, { useEffect, useState } from \"react\";\nimport {\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    MenuItem,\n    Paper,\n    Select\n} from \"@mui/material\";\nimport { FastField, FieldProps as FormikFieldProps } from \"formik\";\n\n\nimport { ArrayContainer, FieldDescription, LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\nimport { buildPropertyField } from \"../form_factory\";\nimport { EnumValuesChip } from \"../../preview/components/CustomChip\";\nimport { enumToObjectEntries } from \"../../core/util/enums\";\nimport { EnumValues, FieldProps, FormContext, Property } from \"../../models\";\n\n\n/**\n * If the `oneOf` property is specified, this fields render each array entry as\n * a `type` select and the corresponding field widget to the selected `type.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ArrayOneOfField<T extends Array<any>>({\n                                                          name,\n                                                          value,\n                                                          error,\n                                                          showError,\n                                                          isSubmitting,\n                                                          setValue,\n                                                          tableMode,\n                                                          property,\n                                                          includeDescription,\n                                                          underlyingValueHasChanged,\n                                                          context,\n                                                          disabled,\n                                                          shouldAlwaysRerender\n                                                      }: FieldProps<T>) {\n\n    if (!property.oneOf)\n        throw Error(\"ArrayOneOfField misconfiguration. Property `oneOf` not set\");\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const [lastAddedId, setLastAddedId] = useState<number | undefined>();\n\n    const buildEntry = (index: number, internalId: number) => {\n        return <ArrayOneOfEntry\n            key={`array_one_of_${index}`}\n            name={`${name}[${index}]`}\n            index={index}\n            value={value[index]}\n            typeField={property.oneOf!.typeField ?? \"type\"}\n            valueField={property.oneOf!.valueField ?? \"value\"}\n            properties={property.oneOf!.properties}\n            autoFocus={internalId === lastAddedId}\n            context={context}/>;\n    };\n\n    return (\n\n        <FormControl fullWidth error={showError}>\n\n            {!tableMode && <FormHelperText filled\n                                           required={property.validation?.required}>\n                <LabelWithIcon property={property}/>\n            </FormHelperText>}\n\n            <Paper variant={\"outlined\"}\n                   sx={(theme) => ({\n                       elevation: 0,\n                       padding: theme.spacing(2),\n                       [theme.breakpoints.up(\"md\")]: {\n                           padding: theme.spacing(2)\n                       }\n                   })}>\n                <ArrayContainer value={value}\n                                name={name}\n                                buildEntry={buildEntry}\n                                onInternalIdAdded={setLastAddedId}\n                                disabled={isSubmitting || Boolean(property.disabled)}\n                                includeAddButton={!property.disabled}/>\n            </Paper>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n            {showError &&\n            typeof error === \"string\" &&\n            <FormHelperText>{error}</FormHelperText>}\n\n        </FormControl>\n    );\n}\n\ninterface ArrayOneOfEntryProps {\n    name: string;\n    index: number;\n    value: any;\n    /**\n     * Name of the field to use as the discriminator for type\n     * Defaults to `type`\n     */\n    typeField: string;\n    /**\n     * Name of the  field to use as the value\n     * Defaults to `value`\n     */\n    valueField: string;\n\n    autoFocus: boolean;\n    /**\n     * Record of properties, where the key is the `type` and the value\n     * is the corresponding property\n     */\n    properties: Record<string, Property>;\n\n    /**\n     * Additional values related to the state of the form or the entity\n     */\n    context: FormContext<any>;\n}\n\nfunction ArrayOneOfEntry({\n                             name,\n                             index,\n                             value,\n                             typeField,\n                             valueField,\n                             properties,\n                             autoFocus,\n                             context\n                         }: ArrayOneOfEntryProps) {\n\n\n    const type = value && value[typeField];\n    const [typeInternal, setTypeInternal] = useState<string | undefined>(type ?? undefined);\n\n    useEffect(() => {\n        if (type !== typeInternal) {\n            setTypeInternal(type);\n        }\n    }, [type]);\n\n    const property = typeInternal ? properties[typeInternal] : undefined;\n\n    const enumValues: EnumValues = Object.entries(properties).map(([key, property]) => ({ [key]: property.title ?? key })).reduce((a, b) => ({ ...a, ...b }));\n\n    const typeFieldName = `${name}[${typeField}]`;\n    const valueFieldName = `${name}[${valueField}]`;\n\n    return (\n        <Paper sx={(theme) => ({\n            elevation: 0,\n            padding: theme.spacing(2),\n            [theme.breakpoints.up(\"md\")]: {\n                padding: theme.spacing(2)\n            }\n        })} elevation={0}>\n\n            <FastField\n                required={true}\n                name={typeFieldName}\n            >\n                {(fieldProps: FormikFieldProps) =>\n                    (\n                        <FormControl fullWidth>\n                            <InputLabel\n                                id={`${name}_${index}_select_label`}>\n                                <span>Type</span>\n                            </InputLabel>\n                            <Select\n                                fullWidth\n                                sx={{ marginBottom: 2 }}\n                                labelId={`${name}_${index}_select_label`}\n                                value={fieldProps.field.value !== undefined && fieldProps.field.value !== null ? fieldProps.field.value : \"\"}\n                                onChange={(evt: any) => {\n                                    const eventValue = evt.target.value;\n                                    fieldProps.form.setFieldTouched(typeFieldName);\n                                    setTypeInternal(eventValue);\n                                    fieldProps.form.setFieldValue(typeFieldName, eventValue);\n                                    fieldProps.form.setFieldValue(valueFieldName, null);\n                                }}\n                                renderValue={(enumKey: any) =>\n                                    <EnumValuesChip\n                                        enumKey={enumKey}\n                                        enumValues={enumValues}\n                                        small={true}/>\n                                }>\n                                {enumToObjectEntries(enumValues)\n                                    .map(([enumKey, labelOrConfig]) => {\n                                        return (\n                                            <MenuItem\n                                                key={`select_${name}_${index}_${enumKey}`}\n                                                value={enumKey}>\n                                                <EnumValuesChip\n                                                    enumKey={enumKey}\n                                                    enumValues={enumValues}\n                                                    small={true}/>\n                                            </MenuItem>\n                                        );\n                                    })}\n                            </Select>\n                        </FormControl>\n                    )\n                }\n            </FastField>\n\n            {property && (\n                <FormControl fullWidth\n                             key={`form_control_${name}_${typeInternal}`}>\n                    {buildPropertyField({\n                        name: valueFieldName,\n                        property: property,\n                        context: context,\n                        autoFocus: autoFocus\n                    })}\n                </FormControl>\n            )}\n\n        </Paper>\n    );\n}\n\n\n","import React from \"react\";\nimport { FormControl, FormHelperText, Paper } from \"@mui/material\";\n\nimport { FieldProps } from \"../../models\";\n\nimport { PreviewComponent } from \"../../preview\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\nimport { ErrorBoundary } from \"../../core/internal/ErrorBoundary\";\n\n/**\n *\n * Simply render the non-editable preview of a field\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ReadOnlyField({\n                                  name,\n                                                                    value,\n                                                                    setValue,\n                                                                    error,\n                                                                    showError,\n                                                                    isSubmitting,\n                                                                    touched,\n                                                                    tableMode,\n                                                                    property,\n                                                                    includeDescription,\n                                                                    context\n                                                                }: FieldProps<any>) {\n\n    return (\n\n        <FormControl fullWidth error={showError}>\n\n            {!tableMode && <FormHelperText filled\n                                           required={property.validation?.required}>\n                <LabelWithIcon property={property}/>\n            </FormHelperText>}\n\n            <Paper\n                sx={(theme) => ({\n                    minHeight: \"64px\",\n                    elevation: 0,\n                    padding: theme.spacing(2),\n                    [theme.breakpoints.up(\"md\")]: {\n                        padding: theme.spacing(3)\n                    }\n                })}\n                variant={\"outlined\"}>\n\n                <ErrorBoundary>\n                    <PreviewComponent name={name}\n                                      value={value}\n                                      property={property}\n                                      size={\"regular\"}/>\n                </ErrorBoundary>\n\n            </Paper>\n\n            {showError &&\n            typeof error === \"string\" &&\n            <FormHelperText>{error}</FormHelperText>}\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n        </FormControl>\n    );\n}\n","import React from \"react\";\n\nimport { Box, FormControl, FormHelperText, Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport MDEditor from \"@uiw/react-md-editor\";\n\nimport { FieldProps } from \"../../models\";\nimport { FieldDescription } from \"../../form\";\nimport { LabelWithIcon } from \"../components\";\n\nimport { useClearRestoreValue } from \"../../hooks\";\n\ninterface MarkDownFieldProps extends FieldProps<string> {\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            \"& .w-md-editor-toolbar li > button\": {\n                color: theme.palette.text.secondary\n            },\n            \"& .w-md-editor-toolbar li.active > button\": {\n                color: theme.palette.primary.main\n            },\n            \"& .w-md-editor-text-pre, & .w-md-editor-text-pre .title, & .w-md-editor-text-pre .bold\": {\n                color: \"inherit !important\"\n            },\n            \"& .wmde-markdown-color code.language-markdown\": {\n                color: \"inherit\"\n            },\n            \"& .w-md-editor\": {\n                color: \"inherit\",\n                backgroundColor: theme.palette.mode === \"light\" ? \"rgb(240, 240, 240)\" : \"#323232\"\n            },\n            \"& .w-md-editor-toolbar\": {\n                borderBottom: \"inherit\",\n                backgroundColor: theme.palette.mode === \"light\" ? \"rgba(0, 0, 0, 0.09)\" : \"rgba(255, 255, 255, 0.09)\"\n            }\n        }\n    })\n);\n\n/**\n * Render a markdown field that allows edition and seeing the preview.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function MarkdownField({\n                                  name,\n                                  value,\n                                  setValue,\n                                  error,\n                                  showError,\n                                  disabled,\n                                  autoFocus,\n                                  touched,\n                                  property,\n                                  tableMode,\n                                  includeDescription,\n                                  context,\n                                  shouldAlwaysRerender\n                              }: MarkDownFieldProps) {\n\n    const classes = useStyles();\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const updateValue = (newValue: string | undefined) => {\n        if (!newValue) {\n            setValue(\n                null\n            );\n        } else {\n            setValue(\n                newValue\n            );\n        }\n    };\n\n    return (\n\n        <FormControl\n            required={property.validation?.required}\n            error={showError}\n            fullWidth>\n\n            {!tableMode && <FormHelperText filled\n                                           required={property.validation?.required}>\n                <LabelWithIcon property={property}/>\n            </FormHelperText>}\n\n            <div className={classes.root}>\n                <MDEditor\n                    value={typeof value === \"string\" ? value : \"\"}\n                    preview={\"edit\"}\n                    onChange={(value) => updateValue(value)}\n                />\n            </div>\n\n            <Box display={\"flex\"}>\n                <Box flexGrow={1}>\n                    {showError &&\n                    typeof error === \"string\" &&\n                    <FormHelperText>{error}</FormHelperText>}\n                    {includeDescription &&\n                    <FieldDescription property={property}/>}\n                </Box>\n            </Box>\n\n        </FormControl>\n    );\n\n}\n","import React, { useMemo } from \"react\";\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    Paper,\n    Theme\n} from \"@mui/material\";\nimport {\n    Entity,\n    EntityCollectionResolver,\n    EntityReference,\n    FieldProps,\n    Property\n} from \"../../models\";\nimport { ReferencePreview } from \"../../preview\";\nimport { ArrayContainer, FieldDescription, LabelWithIcon } from \"../components\";\nimport { ErrorView, ReferenceDialog } from \"../../core\";\n\nimport { useClearRestoreValue, useNavigation } from \"../../hooks\";\nimport { getReferenceFrom } from \"../../core/utils\";\n\n\ntype ArrayOfReferencesFieldProps = FieldProps<EntityReference[]>;\n\n/**\n * This field allows selecting multiple references.\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function ArrayOfReferencesField({\n                                           name,\n                                           value,\n                                           error,\n                                           showError,\n                                           isSubmitting,\n                                           tableMode,\n                                           property,\n                                           includeDescription,\n                                           setValue\n                                       }: ArrayOfReferencesFieldProps) {\n\n    const ofProperty: Property = property.of as Property;\n    if (ofProperty.dataType !== \"reference\") {\n        throw Error(\"ArrayOfReferencesField expected a property containing references\");\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [onHover, setOnHover] = React.useState(false);\n    const selectedIds = value && Array.isArray(value) ? value.map((ref) => ref.id) : [];\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    const navigationContext = useNavigation();\n    const collectionResolver: EntityCollectionResolver | undefined = useMemo(() => {\n        return ofProperty.path ? navigationContext.getCollectionResolver(ofProperty.path) : undefined;\n    }, [ofProperty.path]);\n\n    if (!collectionResolver) {\n        throw Error(`Couldn't find the corresponding collection for the path: ${ofProperty.path}`);\n    }\n\n    const onEntryClick = () => {\n        setOpen(true);\n    };\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const onMultipleEntitiesSelected = (entities: Entity<any>[]) => {\n        setValue(entities.map(e => getReferenceFrom(e)));\n    };\n\n    const buildEntry = (index: number, internalId: number) => {\n        const entryValue = value && value.length > index ? value[index] : undefined;\n        if (!entryValue)\n            return <div>Internal ERROR</div>;\n        return (\n            <div\n                onMouseEnter={() => setOnHover(true)}\n                onMouseMove={() => setOnHover(true)}\n                onMouseLeave={() => setOnHover(false)}>\n                <ReferencePreview\n                    value={entryValue}\n                    property={ofProperty}\n                    onHover={onHover}\n                    size={\"regular\"}\n                    onClick={onEntryClick}/>\n            </div>\n        );\n    };\n\n\n    return (\n        <>\n            <FormControl fullWidth error={showError}>\n\n                {!tableMode && <FormHelperText filled\n                                               required={property.validation?.required}>\n                    <LabelWithIcon property={property}/>\n                </FormHelperText>}\n\n                <Paper variant={\"outlined\"}\n                       sx={(theme) => ({\n                           elevation: 0,\n                           padding: theme.spacing(2),\n                           [theme.breakpoints.up(\"md\")]: {\n                               padding: theme.spacing(2)\n                           }\n                       })}>\n\n                    {!collectionResolver && <ErrorView\n                        error={\"The specified collection does not exist. Check console\"}/>}\n\n                    {collectionResolver && <>\n\n                        <ArrayContainer value={value}\n                                        name={name}\n                                        buildEntry={buildEntry}\n                                        disabled={isSubmitting}/>\n\n                        <Box p={1}\n                             justifyContent=\"center\"\n                             textAlign={\"left\"}>\n                            <Button variant=\"outlined\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    onClick={onEntryClick}>\n                                Edit {property.title}\n                            </Button>\n                        </Box>\n                    </>}\n\n                </Paper>\n\n                {includeDescription &&\n                <FieldDescription property={property}/>}\n\n                {showError &&\n                typeof error === \"string\" &&\n                <FormHelperText>{error}</FormHelperText>}\n\n            </FormControl>\n\n            {collectionResolver && ofProperty.path && <ReferenceDialog open={open}\n                                                    multiselect={true}\n                                                    collectionResolver={collectionResolver}\n                                                    path={ofProperty.path}\n                                                    onClose={onClose}\n                                                    onMultipleEntitiesSelected={onMultipleEntitiesSelected}\n                                                    selectedEntityIds={selectedIds}\n            />}\n        </>\n    );\n}\n\n\n","import React, { ComponentType, ReactElement, useEffect, useState } from \"react\";\nimport { FormHelperText } from \"@mui/material\";\n\nimport {\n    FastField,\n    Field,\n    FieldProps as FormikFieldProps,\n    getIn\n} from \"formik\";\n\nimport {\n    ArrayProperty,\n    CMSFormFieldProps,\n    CMSType,\n    FieldProps,\n    Property\n} from \"../models\";\n\nimport { Select } from \"./fields/Select\";\nimport { ArrayEnumSelect } from \"./fields/ArrayEnumSelect\";\nimport { StorageUploadField } from \"./fields/StorageUploadField\";\nimport { TextField } from \"./fields/TextField\";\nimport { SwitchField } from \"./fields/SwitchField\";\nimport { DateTimeField } from \"./fields/DateTimeField\";\nimport { ReferenceField } from \"./fields/ReferenceField\";\nimport { MapField } from \"./fields/MapField\";\nimport { ArrayDefaultField } from \"./fields/ArrayDefaultField\";\nimport { ArrayOneOfField } from \"./fields/ArrayOneOfField\";\nimport { ReadOnlyField } from \"./fields/ReadOnlyField\";\nimport { MarkdownField } from \"./fields/MarkdownField\";\n\nimport { ArrayOfReferencesField } from \"./fields/ArrayOfReferencesField\";\nimport { isReadOnly } from \"../core/utils\";\nimport isEqual from \"react-fast-compare\";\n\n\n/**\n * This factory method renders a form field creating the corresponding configuration\n * from a property. For example if bound to a string property, it will generate\n * a text field.\n *\n * You can use it when you are creating a custom field, and need to\n * render additional fields mapped to properties. This is useful if you\n * need to build a complex property mapping, like an array where each index\n * is a different property.\n *\n * Please note that if you build a custom field in a component, the\n * **validation** passed in the property will have no effect. You need to set\n * the validation in the `EntitySchema` definition.\n *\n * @param name You can use nested names such as `address.street` or `friends[2]`\n * @param property\n * @param context\n * @param includeDescription\n * @param underlyingValueHasChanged\n * @param disabled\n * @param tableMode\n * @param partOfArray\n * @param autoFocus\n * @param shouldAlwaysRerender\n * @category Form custom fields\n */\nexport function buildPropertyField<T extends CMSType = any, M = any>\n({\n     name,\n     property,\n     context,\n     includeDescription,\n     underlyingValueHasChanged,\n     disabled,\n     tableMode,\n     partOfArray,\n     autoFocus,\n     shouldAlwaysRerender\n }: CMSFormFieldProps<M>): ReactElement<CMSFormFieldProps<M>> {\n\n    let component: ComponentType<FieldProps<T, any, M>> | undefined;\n    if (isReadOnly(property)) {\n        component = ReadOnlyField;\n    } else if (property.config?.Field) {\n        component = property.config?.Field as ComponentType<FieldProps<T>>;\n    } else if (property.dataType === \"array\") {\n        const of = (property as ArrayProperty).of;\n        if (of) {\n            if ((of.dataType === \"string\" || of.dataType === \"number\") && of.config?.enumValues) {\n                component = ArrayEnumSelect as ComponentType<FieldProps<T>>;\n            } else if (of.dataType === \"string\" && of.config?.storageMeta) {\n                component = StorageUploadField as ComponentType<FieldProps<T>>;\n            } else if (of.dataType === \"reference\") {\n                component = ArrayOfReferencesField as ComponentType<FieldProps<T>>;\n            } else {\n                component = ArrayDefaultField as ComponentType<FieldProps<T>>;\n            }\n        }\n        const oneOf = (property as ArrayProperty).oneOf;\n        if (oneOf) {\n            component = ArrayOneOfField as ComponentType<FieldProps<T>>;\n        }\n        if (!of && !oneOf) {\n            throw Error(`You need to specify an 'of' or 'oneOf' prop (or specify a custom field) in your array property ${name}`);\n        }\n    } else if (property.dataType === \"map\") {\n        component = MapField as ComponentType<FieldProps<T>>;\n    } else if (property.dataType === \"reference\") {\n        if (!property.path)\n            component = ReadOnlyField as ComponentType<FieldProps<T>>;\n        else {\n            component = ReferenceField as ComponentType<FieldProps<T>>;\n        }\n    } else if (property.dataType === \"timestamp\") {\n        component = DateTimeField as ComponentType<FieldProps<T>>;\n    } else if (property.dataType === \"boolean\") {\n        component = SwitchField as ComponentType<FieldProps<T>>;\n    } else if (property.dataType === \"number\") {\n        if (property.config?.enumValues) {\n            component = Select as ComponentType<FieldProps<T>>;\n        } else {\n            component = TextField as ComponentType<FieldProps<T>>;\n        }\n    } else if (property.dataType === \"string\") {\n        if (property.config?.storageMeta) {\n            component = StorageUploadField as ComponentType<FieldProps<T>>;\n        } else if (property.config?.markdown) {\n            component = MarkdownField as ComponentType<FieldProps<T>>;\n        } else if (property.config?.enumValues) {\n            component = Select as ComponentType<FieldProps<T>>;\n        } else {\n            component = TextField as ComponentType<FieldProps<T>>;\n        }\n    }\n\n    if (component) {\n\n        const componentProps = {\n            name,\n            property,\n            includeDescription,\n            underlyingValueHasChanged,\n            context,\n            disabled,\n            tableMode,\n            partOfArray,\n            autoFocus,\n            shouldAlwaysRerender\n        };\n\n        // we use the standard Field for user defined fields, since it rebuilds\n        // when there are changes in other values, in contrast to FastField\n        const FieldComponent = shouldAlwaysRerender || property.config?.Field ? Field : FastField;\n\n        return (\n            <FieldComponent\n                required={property.validation?.required}\n                name={`${name}`}\n            >\n                {(fieldProps: FormikFieldProps<T>) => {\n                    return <FieldInternal\n                        component={component as ComponentType<FieldProps<T>>}\n                        componentProps={componentProps}\n                        fieldProps={fieldProps}/>;\n                }}\n            </FieldComponent>\n        );\n\n    }\n\n    return (\n        <div>{`Currently the field ${property.dataType} is not supported`}</div>\n    );\n}\n\n\nfunction FieldInternal<T extends CMSType, M extends { [Key: string]: any }>\n({\n     component,\n     componentProps: {\n         name,\n         property,\n         includeDescription,\n         underlyingValueHasChanged,\n         tableMode,\n         partOfArray,\n         autoFocus,\n         context,\n         disabled,\n         shouldAlwaysRerender\n     },\n     fieldProps\n\n }:\n     {\n         component: ComponentType<FieldProps<T>>,\n         componentProps: CMSFormFieldProps<M>,\n         fieldProps: FormikFieldProps<T>\n     }) {\n\n    const customFieldProps: any = property.config?.customProps;\n    const value = fieldProps.field.value;\n    const initialValue = fieldProps.meta.initialValue;\n    const error = getIn(fieldProps.form.errors, name);\n    const touched = getIn(fieldProps.form.touched, name);\n\n    const showError: boolean = error &&\n        (fieldProps.form.submitCount > 0 || property.validation?.unique) &&\n        (!Array.isArray(error) || !!error.filter((e: any) => !!e).length);\n\n    const isSubmitting = fieldProps.form.isSubmitting;\n\n    const [internalValue, setInternalValue] = useState<T | null>(value);\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                fieldProps.form.setFieldValue(name, internalValue);\n            }, 50);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [internalValue]\n    );\n\n    useEffect(\n        () => {\n            if (!isEqual(value, internalValue)) {\n                setInternalValue(value);\n            }\n        },\n        [value]\n    );\n\n    const cmsFieldProps: FieldProps<T> = {\n        name,\n        value: internalValue as T,\n        initialValue,\n        setValue: (value: T | null) => {\n            fieldProps.form.setFieldTouched(name, true, false);\n            setInternalValue(value);\n        },\n        error,\n        touched,\n        showError,\n        isSubmitting,\n        includeDescription: includeDescription ?? true,\n        property: property as Property<T>,\n        disabled: disabled ?? false,\n        underlyingValueHasChanged: underlyingValueHasChanged ?? false,\n        tableMode: tableMode ?? false,\n        partOfArray: partOfArray ?? false,\n        autoFocus: autoFocus ?? false,\n        customProps: customFieldProps,\n        context,\n        shouldAlwaysRerender: shouldAlwaysRerender ?? true\n    };\n\n    return (\n        <>\n\n            {React.createElement(component, cmsFieldProps)}\n\n            {underlyingValueHasChanged && !isSubmitting &&\n            <FormHelperText>\n                This value has been updated elsewhere\n            </FormHelperText>}\n\n        </>);\n\n}\n\n","import React from \"react\";\nimport { FieldProps, Properties, Property } from \"../../models\";\nimport {\n    Box,\n    FormControl,\n    FormHelperText,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Paper,\n    Select\n} from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\n\nimport { pick } from \"../../core/util/objects\";\nimport { FieldDescription, LabelWithIcon } from \"../components\";\nimport { useClearRestoreValue } from \"../../hooks\";\nimport { buildPropertyField } from \"../form_factory\";\nimport { isHidden } from \"../../core/utils\";\n\n/**\n * Field that renders the children property fields\n *\n * This is one of the internal components that get mapped natively inside forms\n * and tables to the specified properties.\n * @category Form fields\n */\nexport function MapField<T extends object>({\n                                               name,\n                                               value,\n                                               showError,\n                                               disabled,\n                                               property,\n                                               setValue,\n                                               tableMode,\n                                               includeDescription,\n                                               underlyingValueHasChanged,\n                                               context\n                                           }: FieldProps<T>) {\n\n\n    const pickOnlySomeKeys = property.config?.pickOnlySomeKeys || false;\n\n    if (!property.properties) {\n        throw Error(`You need to specify a 'properties' prop (or specify a custom field) in your map property ${name}`);\n    }\n\n    let mapProperties: Record<string, Property>;\n    if (!pickOnlySomeKeys) {\n        mapProperties = property.properties as Properties;\n    } else if (value) {\n        mapProperties = pick(property.properties as Properties,\n            ...Object.keys(value)\n                .filter(key => key in property.properties!)\n        );\n    } else {\n        mapProperties = {};\n    }\n\n    useClearRestoreValue({\n        property,\n        value,\n        setValue\n    });\n\n    function buildPickKeysSelect() {\n\n        const keys = Object.keys(property.properties!)\n            .filter((key) => !value || !(key in value));\n\n        const handleAddProperty = (event: SelectChangeEvent) => {\n            setValue({\n                ...value,\n                [event.target.value as string]: null\n            });\n        };\n\n        if (!keys.length) return <></>;\n\n        return <Box m={1}>\n            <FormControl fullWidth>\n                <InputLabel>Add property</InputLabel>\n                <Select\n                    variant={\"standard\"}\n                    value={\"\"}\n                    disabled={disabled}\n                    onChange={handleAddProperty}>\n                    {keys.map((key) => (\n                        <MenuItem key={key} value={key}>\n                            {(property.properties as Properties)[key].title || key}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </Box>;\n    }\n\n    return (\n        <FormControl fullWidth error={showError}>\n\n            {!tableMode && <FormHelperText filled\n                                           required={property.validation?.required}>\n                <LabelWithIcon property={property}/>\n            </FormHelperText>}\n\n            <Paper elevation={0} variant={\"outlined\"} sx={(theme) => ({\n                elevation: 0,\n                padding: theme.spacing(2),\n                [theme.breakpoints.up(\"md\")]: {\n                    padding: theme.spacing(2)\n                }\n            })}>\n                <Grid container spacing={2}>\n                    {Object.entries(mapProperties)\n                        .filter(([_, property]) => !isHidden(property))\n                        .map(([entryKey, childProperty], index) => {\n                            return (\n                                <Grid item\n                                      sm={12}\n                                      xs={12}\n                                      key={`map-${name}-${index}`}>\n                                    {\n                                        buildPropertyField<any, T>({\n                                            name: `${name}[${entryKey}]`,\n                                            disabled,\n                                            property: childProperty,\n                                            includeDescription,\n                                            underlyingValueHasChanged,\n                                            context,\n                                            tableMode,\n                                            partOfArray: false,\n                                            autoFocus: false,\n                                                shouldAlwaysRerender: false\n                                            })\n                                        }\n                                    </Grid>\n                                );\n                            }\n                        )}\n                </Grid>\n\n                {pickOnlySomeKeys && buildPickKeysSelect()}\n\n            </Paper>\n\n            {includeDescription &&\n            <FieldDescription property={property}/>}\n\n        </FormControl>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\nexport const ErrorFocus = ({ containerRef }:\n                               { containerRef?: React.RefObject<HTMLDivElement> }) => {\n    const { isSubmitting, isValidating, errors } = useFormikContext();\n\n    useEffect(() => {\n        const keys = Object.keys(errors);\n\n        // Whenever there are errors and the form is submitting but finished validating.\n        if (keys.length > 0 && isSubmitting && !isValidating) {\n            const errorElement = containerRef?.current?.querySelector<HTMLDivElement>(\n                `#form_field_${keys[0]}`\n            );\n\n            if (errorElement && containerRef?.current) {\n                const scrollableParent = getScrollableParent(containerRef.current);\n                if (scrollableParent) {\n                    const top = errorElement.getBoundingClientRect().top;\n                    scrollableParent.scrollTo({\n                        top: scrollableParent.scrollTop + top - 64,\n                        behavior: \"smooth\"\n                    });\n                }\n                const input = errorElement.querySelector(\"input\");\n                if (input) input.focus();\n            }\n        }\n    }, [isSubmitting, isValidating, errors, containerRef]);\n\n    // This component does not render anything by itself.\n    return null;\n};\n\nconst isScrollable = (ele: HTMLElement | null) => {\n    const hasScrollableContent = ele && ele.scrollHeight > ele.clientHeight;\n\n    const overflowYStyle = ele ? window.getComputedStyle(ele).overflowY : null;\n    const isOverflowHidden = overflowYStyle && overflowYStyle.indexOf(\"hidden\") !== -1;\n\n    return hasScrollableContent && !isOverflowHidden;\n};\n\nconst getScrollableParent = (ele: HTMLElement | null): HTMLElement | null => {\n    return (!ele || ele === document.body)\n        ? document.body\n        : (isScrollable(ele) ? ele : getScrollableParent(ele.parentNode as HTMLElement));\n};\n","import React from \"react\";\n\nimport {\n    FormControl,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    MenuItem,\n    Select as MuiSelect,\n    TextField as MuiTextField,\n    Theme,\n    Tooltip\n} from \"@mui/material\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nimport { ErrorMessage } from \"formik\";\n\nimport {\n    Entity,\n    EntitySchema,\n    EntityStatus,\n    FireCMSContext\n} from \"../../models\";\n\nimport {\n    useClipboard,\n    useFireCMSContext,\n    useSnackbarController\n} from \"../../hooks\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst formStyles = makeStyles((theme: Theme) => createStyles({\n    paper: {\n        elevation: 0,\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(\"md\")]: {\n            padding: theme.spacing(2)\n        }\n    },\n    largePadding: {\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(\"md\")]: {\n            padding: theme.spacing(3)\n        }\n    },\n    inputLabel: {\n        marginTop: theme.spacing(1 / 2),\n        marginLeft: theme.spacing(1 / 2)\n    },\n    shrinkInputLabel: {\n        marginTop: \"-2px\",\n        marginLeft: theme.spacing(1 / 2)\n    },\n    buttons: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    form: {\n        marginTop: theme.spacing(2)\n    },\n    input: {\n        minHeight: \"64px\"\n    },\n    select: {\n        paddingTop: theme.spacing(1 / 2)\n    },\n    oneOfInput: {\n        marginBottom: theme.spacing(2)\n    }\n}))\n\nexport function CustomIdField<M, UserType>\n({ schema, status, onChange, error, entity }: {\n    schema: EntitySchema<M>,\n    status: EntityStatus,\n    onChange: Function,\n    error: boolean,\n    entity: Entity<M> | undefined\n}) {\n\n    const classes = formStyles();\n\n    const disabled = status === \"existing\" || !schema.customId;\n    const idSetAutomatically = status !== \"existing\" && !schema.customId;\n\n    const hasEnumValues = typeof schema.customId === \"object\";\n\n    const snackbarContext = useSnackbarController();\n    const { copy } = useClipboard({\n        onSuccess: (text) => snackbarContext.open({\n            type: \"success\",\n            message: `Copied ${text}`\n        })\n    });\n\n    const appConfig: FireCMSContext<UserType> | undefined = useFireCMSContext();\n    const inputProps = {\n        className: classes.input,\n        endAdornment: entity\n? (\n            <InputAdornment position=\"end\">\n\n                <IconButton onClick={(e) => copy(entity.id)}\n                            aria-label=\"copy-id\"\n                            size=\"large\">\n                    <Tooltip title={\"Copy\"}>\n                        <svg\n                            className={\"MuiSvgIcon-root MuiSvgIcon-fontSizeSmall\"}\n                            fill={\"currentColor\"}\n                            width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n                            <path\n                                d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>\n                        </svg>\n                    </Tooltip>\n                </IconButton>\n\n                {appConfig?.entityLinkBuilder &&\n                <a href={appConfig.entityLinkBuilder({ entity })}\n                   rel=\"noopener noreferrer\"\n                   target=\"_blank\">\n                    <IconButton onClick={(e) => e.stopPropagation()}\n                                aria-label=\"go-to-datasource\" size=\"large\">\n                        <Tooltip title={\"Open in the console\"}>\n                            <OpenInNewIcon fontSize={\"small\"}/>\n                        </Tooltip>\n                    </IconButton>\n                </a>}\n\n            </InputAdornment>\n        )\n: undefined\n    };\n\n    const fieldProps: any = {\n        label: idSetAutomatically ? \"ID is set automatically\" : \"ID\",\n        disabled: disabled,\n        name: \"id\",\n        type: null,\n        value: entity && status === \"existing\" ? entity.id : undefined,\n        variant: \"filled\"\n    };\n\n    return (\n        <FormControl fullWidth\n                     error={error}\n                     {...fieldProps}\n                     key={\"custom-id-field\"}>\n\n            {hasEnumValues && schema.customId &&\n            <>\n                <InputLabel id={\"id-label\"}>{fieldProps.label}</InputLabel>\n                <MuiSelect\n                    labelId={\"id-label\"}\n                    className={classes.select}\n                    error={error}\n                    {...fieldProps}\n                    onChange={(event: any) => onChange(event.target.value)}>\n                    {Object.entries(schema.customId).map(([key, label]) =>\n                        <MenuItem\n                            key={`custom-id-item-${key}`}\n                            value={key}>\n                            {`${key} - ${label}`}\n                        </MenuItem>)}\n                </MuiSelect>\n            </>}\n\n            {!hasEnumValues &&\n            <MuiTextField {...fieldProps}\n                          error={error}\n                          InputProps={inputProps}\n                          helperText={schema.customId === \"optional\" ? \"Leave this blank to autogenerate an ID\" : \"ID of the new document\"}\n                          onChange={(event) => {\n                              let value = event.target.value;\n                              if (value) value = value.trim();\n                              return onChange(value.length ? value : undefined);\n                          }}/>}\n\n            <ErrorMessage name={\"id\"}\n                          component=\"div\">\n                {(_) => \"You need to specify an ID\"}\n            </ErrorMessage>\n\n        </FormControl>\n    );\n}\n\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Box, Button, Container, Grid, Theme, Typography } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n    CMSFormFieldProps,\n    Entity,\n    EntitySchema,\n    EntitySchemaResolver,\n    EntityStatus,\n    EntityValues,\n    FormContext,\n    Properties,\n    Property,\n    ResolvedEntitySchema\n} from \"../models\";\nimport { Form, Formik, FormikHelpers } from \"formik\";\nimport { buildPropertyField } from \"./form_factory\";\nimport { CustomFieldValidator, getYupEntitySchema } from \"./validation\";\nimport isEqual from \"react-fast-compare\";\nimport { ErrorFocus } from \"./components/ErrorFocus\";\nimport {\n    computeSchema,\n    initWithProperties,\n    isHidden,\n    isReadOnly\n} from \"../core/utils\";\nimport { CustomIdField } from \"./components/CustomIdField\";\nimport { useDataSource } from \"../hooks\";\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n    stickyButtons: {\n        marginTop: theme.spacing(2),\n        background: theme.palette.mode === \"light\" ? \"rgba(255,255,255,0.6)\" : \"rgba(255, 255, 255, 0)\",\n        backdropFilter: \"blur(4px)\",\n        borderTop: theme.palette.divider,\n        position: \"sticky\",\n        bottom: 0,\n        zIndex: 200\n    },\n    container: {\n        padding: theme.spacing(4),\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        [theme.breakpoints.down(\"lg\")]: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(2),\n            paddingTop: theme.spacing(3),\n            paddingBottom: theme.spacing(3)\n        },\n        [theme.breakpoints.down(\"md\")]: {\n            padding: theme.spacing(2)\n        }\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    form: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\n/**\n *\n * @category Components\n */\nexport interface EntityFormProps<M> {\n\n    /**\n     * New or existing status\n     */\n    status: EntityStatus;\n\n    /**\n     * Path of the collection this entity is located\n     */\n    path: string;\n\n    /**\n     * Use to resolve the schema properties for specific path, entity id or values\n     */\n    schemaOrResolver: EntitySchema<M> & EntitySchemaResolver<M>;\n\n    /**\n     * The updated entity is passed from the parent component when the underlying data\n     * has changed in the datasource\n     */\n    entity?: Entity<M>;\n\n    /**\n     * The callback function called when Save is clicked and validation is correct\n     */\n    onEntitySave?(\n        props:\n            {\n                schema: EntitySchema<M>,\n                path: string,\n                entityId: string | undefined,\n                values: EntityValues<M>,\n                previousValues?: EntityValues<M>\n            }\n    ): Promise<void>;\n\n    /**\n     * The callback function called when discard is clicked\n     */\n    onDiscard?(): void;\n\n    /**\n     * The callback function when the form is dirty, so the values are different\n     * from the original ones\n     */\n    onModified?(dirty: boolean): void;\n\n    /**\n     * The callback function when the form original values have been modified\n     */\n    onValuesChanged?(values?: EntityValues<M>): void;\n\n}\n\n/**\n * This is the form used internally by the CMS\n * @param status\n * @param path\n * @param schemaOrResolver\n * @param entity\n * @param onEntitySave\n * @param onDiscard\n * @param onModified\n * @param onValuesChanged\n * @constructor\n * @category Components\n */\nexport function EntityForm<M>({\n                                  status,\n                                  path,\n                                  schemaOrResolver,\n                                  entity,\n                                  onEntitySave,\n                                  onDiscard,\n                                  onModified,\n                                  onValuesChanged\n                              }: EntityFormProps<M>) {\n\n    const classes = useStyles();\n    const dataSource = useDataSource();\n\n    /**\n     * Base values are the ones this view is initialized from, we use them to\n     * compare them with underlying changes in the datasource\n     */\n    const entityId = status === \"existing\" ? entity?.id : undefined;\n    const initialResolvedSchema: ResolvedEntitySchema<M> = useMemo(() => computeSchema({\n        schemaOrResolver,\n        path,\n        entityId\n    }), [path, entityId]);\n\n    const baseDataSourceValues: Partial<EntityValues<M>> = useMemo(() => {\n        const properties = initialResolvedSchema.properties;\n        if ((status === \"existing\" || status === \"copy\") && entity) {\n            return entity.values ?? initWithProperties(properties, initialResolvedSchema.defaultValues);\n        } else if (status === \"new\") {\n            return initWithProperties(properties, initialResolvedSchema.defaultValues);\n        } else {\n            console.error({ status, entity });\n            throw new Error(\"Form has not been initialised with the correct parameters\");\n        }\n    }, [status, initialResolvedSchema, entity]);\n\n    const formRef = React.useRef<HTMLDivElement>(null);\n\n    const [customId, setCustomId] = React.useState<string | undefined>(undefined);\n    const [customIdError, setCustomIdError] = React.useState<boolean>(false);\n    const [savingError, setSavingError] = React.useState<any>();\n\n    const initialValuesRef = React.useRef<EntityValues<M>>(entity?.values ?? baseDataSourceValues as EntityValues<M>);\n    const initialValues = initialValuesRef.current;\n\n    const [internalValue, setInternalValue] = useState<EntityValues<M> | undefined>(initialValues);\n\n    const schema: ResolvedEntitySchema<M> = useMemo(() => computeSchema({\n        schemaOrResolver,\n        path,\n        entityId,\n        values: internalValue,\n        previousValues: initialValues\n    }), [schemaOrResolver, path, entityId, internalValue]);\n\n    const mustSetCustomId: boolean = (status === \"new\" || status === \"copy\") && (!!schema.customId && schema.customId !== \"optional\");\n\n    const underlyingChanges: Partial<EntityValues<M>> = useMemo(() => {\n        if (initialValues && status === \"existing\") {\n            return Object.keys(schema.properties)\n                .map((key) => {\n                    const initialValue = (initialValues as any)[key];\n                    const latestValue = (baseDataSourceValues as any)[key];\n                    if (!isEqual(initialValue, latestValue)) {\n                        return { [key]: latestValue };\n                    }\n                    return {};\n                })\n                .reduce((a, b) => ({ ...a, ...b }), {}) as Partial<EntityValues<M>>;\n        } else {\n            return {};\n        }\n    }, [initialValues, baseDataSourceValues]);\n\n    const saveValues = useCallback((values: EntityValues<M>, formikActions: FormikHelpers<EntityValues<M>>) => {\n\n        if (mustSetCustomId && !customId) {\n            console.error(\"Missing custom Id\");\n            setCustomIdError(true);\n            formikActions.setSubmitting(false);\n            return;\n        }\n\n        setSavingError(null);\n        setCustomIdError(false);\n\n        let savedEntityId: string | undefined;\n        if (status === \"existing\") {\n            if (!entity?.id) throw Error(\"Form misconfiguration when saving, no id for existing entity\");\n            savedEntityId = entity.id;\n        } else if (status === \"new\" || status === \"copy\") {\n            if (schema.customId) {\n                if (schema.customId !== \"optional\" && !customId) {\n                    throw Error(\"Form misconfiguration when saving, customId should be set\");\n                }\n                savedEntityId = customId;\n            }\n        } else {\n            throw Error(\"New FormType added, check EntityForm\");\n        }\n\n        if (onEntitySave)\n            onEntitySave({\n                schema: schema as EntitySchema,\n                path,\n                entityId: savedEntityId,\n                values,\n                previousValues: entity?.values\n            })\n                .then(_ => {\n                    initialValuesRef.current = values;\n                    formikActions.setTouched({});\n                })\n                .catch(e => {\n                    console.error(e);\n                    setSavingError(e);\n                })\n                .finally(() => {\n                    formikActions.setSubmitting(false);\n                });\n\n    }, [status, path, schema, entity, onEntitySave, mustSetCustomId, customId]);\n\n\n    const uniqueFieldValidator: CustomFieldValidator = useCallback(({\n                                                                        name,\n                                                                        value,\n                                                                        property\n                                                                    }) => dataSource.checkUniqueField(path, name, value, property, entityId),\n        [dataSource, path, entityId]);\n\n    const validationSchema = useMemo(() => getYupEntitySchema(\n        schema.properties,\n        uniqueFieldValidator), [schema.properties]);\n\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={saveValues}\n            validationSchema={validationSchema}\n            validate={(values) => console.debug(\"Validating\", values)}\n            onReset={() => onDiscard && onDiscard()}\n        >\n            {({\n                  values,\n                  touched,\n                  setFieldValue,\n                  handleSubmit,\n                  isSubmitting,\n                  dirty\n              }) => {\n\n                return <FormInternal baseDataSourceValues={baseDataSourceValues}\n                                     values={values} onModified={onModified}\n                                     setInternalValue={setInternalValue}\n                                     onValuesChanged={onValuesChanged}\n                                     underlyingChanges={underlyingChanges}\n                                     entityId={entityId}\n                                     entity={entity}\n                                     touched={touched}\n                                     setFieldValue={setFieldValue}\n                                     schema={schema}\n                                     isSubmitting={isSubmitting}\n                                     classes={classes}\n                                     formRef={formRef}\n                                     status={status}\n                                     setCustomId={setCustomId}\n                                     customIdError={customIdError}\n                                     handleSubmit={handleSubmit}\n                                     savingError={savingError}/>;\n            }}\n        </Formik>\n    );\n}\n\nfunction FormInternal<M>({\n                             baseDataSourceValues,\n                             values,\n                             onModified,\n                             setInternalValue,\n                             onValuesChanged,\n                             underlyingChanges,\n                             entity,\n                             touched,\n                             setFieldValue,\n                             schema,\n                             entityId,\n                             isSubmitting,\n                             classes,\n                             formRef,\n                             status,\n                             setCustomId,\n                             customIdError,\n                             handleSubmit,\n                             savingError\n                         }: {\n    baseDataSourceValues: Partial<M>,\n    values: any,\n    onModified: ((modified: boolean) => void) | undefined,\n    setInternalValue: any,\n    onValuesChanged?: (changedValues?: EntityValues<M>) => void,\n    underlyingChanges: Partial<M>,\n    entity: Entity<M> | undefined,\n    touched: any,\n    setFieldValue: any,\n    schema: ResolvedEntitySchema<M>,\n    entityId: string | undefined,\n    isSubmitting: any,\n    classes: any,\n    formRef: any,\n    status: \"new\" | \"existing\" | \"copy\",\n    setCustomId: any,\n    customIdError: any,\n    handleSubmit: any,\n    savingError: any\n}) {\n    const modified = useMemo(() => !isEqual(baseDataSourceValues, values), [baseDataSourceValues, values]);\n    useEffect(() => {\n        if (onModified)\n            onModified(modified);\n        setInternalValue(values);\n        if (onValuesChanged)\n            onValuesChanged(values);\n    }, [modified, values]);\n\n    if (underlyingChanges && entity) {\n        // we update the form fields from the Firestore data\n        // if they were not touched\n        Object.entries(underlyingChanges).forEach(([key, value]) => {\n            const formValue = (values as any)[key];\n            if (!isEqual(value, formValue) && !(touched as any)[key]) {\n                console.debug(\"Updated value from the datasource:\", key, value);\n                setFieldValue(key, value !== undefined ? value : null);\n            }\n        });\n    }\n\n    const context: FormContext<M> = {\n        schema,\n        entityId,\n        values\n    };\n\n    const formFields = (\n        <Grid container spacing={4}>\n\n            {Object.entries<Property>(schema.properties as Properties)\n                .filter(([key, property]) => !isHidden(property))\n                .map(([key, property]) => {\n\n                    const underlyingValueHasChanged: boolean =\n                        !!underlyingChanges &&\n                        Object.keys(underlyingChanges).includes(key) &&\n                        !!(touched as any)[key];\n\n                    const shouldAlwaysRerender = typeof (schema.originalSchema.properties as any)[key] === \"function\";\n\n                    const disabled = isSubmitting || isReadOnly(property) || Boolean(property.disabled);\n                    const cmsFormFieldProps: CMSFormFieldProps = {\n                        name: key,\n                        disabled: disabled,\n                        property: property,\n                        includeDescription: true,\n                        underlyingValueHasChanged: underlyingValueHasChanged,\n                        context: context,\n                        tableMode: false,\n                        partOfArray: false,\n                        autoFocus: false,\n                        shouldAlwaysRerender: shouldAlwaysRerender\n                    };\n                    return (\n                        <Grid item\n                              xs={12}\n                              id={`form_field_${key}`}\n                              key={`field_${schema.name}_${key}`}>\n                            {buildPropertyField(cmsFormFieldProps)}\n                        </Grid>\n                    );\n                })}\n\n        </Grid>\n    );\n\n    return (\n        <Container maxWidth={\"sm\"}\n                   className={classes.container}\n                   ref={formRef}>\n\n            <CustomIdField schema={schema as EntitySchema}\n                           status={status}\n                           onChange={setCustomId}\n                           error={customIdError}\n                           entity={entity}/>\n\n            <Form className={classes.form}\n                  onSubmit={handleSubmit}\n                  noValidate>\n\n                <Box pt={3}>\n                    {formFields}\n                </Box>\n\n                <div className={classes.stickyButtons}>\n\n                    {savingError &&\n                    <Box textAlign=\"right\">\n                        <Typography color={\"error\"}>\n                            {savingError.message}\n                        </Typography>\n                    </Box>}\n\n                    {buildButtons(classes, isSubmitting, modified, status)}\n\n                </div>\n\n            </Form>\n\n\n            <ErrorFocus containerRef={formRef}/>\n\n        </Container>\n    );\n}\n\nfunction buildButtons(classes: any, isSubmitting: boolean, modified: boolean, status: EntityStatus) {\n    const disabled = isSubmitting || (!modified && status === \"existing\");\n    return (\n        <Box textAlign=\"right\">\n\n            {status === \"existing\" &&\n            <Button\n                variant=\"text\"\n                color=\"primary\"\n                disabled={disabled}\n                className={classes.button}\n                type=\"reset\"\n            >\n                Discard\n            </Button>}\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={disabled}\n                className={classes.button}\n            >\n                {status === \"existing\" && \"Save\"}\n                {status === \"copy\" && \"Create copy\"}\n                {status === \"new\" && \"Create\"}\n            </Button>\n\n        </Box>\n    );\n}\n\n\nexport default EntityForm;\n","import { RefObject, useCallback, useEffect, useRef } from \"react\";\n\ninterface Props {\n    onResize: (event: Event) => void;\n}\n\nexport const ElementResizeListener: React.FC<Props> = ({ onResize }) => {\n    const rafRef = useRef(0);\n    const objectRef: RefObject<HTMLObjectElement> = useRef(null);\n    const onResizeRef = useRef(onResize);\n\n    onResizeRef.current = onResize;\n\n    const _onResize = useCallback((e: Event) => {\n        if (rafRef.current) {\n            cancelAnimationFrame(rafRef.current);\n        }\n        rafRef.current = requestAnimationFrame(() => {\n            onResizeRef.current(e);\n        });\n    }, []);\n\n    const onLoad = useCallback(() => {\n        const obj = objectRef.current;\n        if (obj && obj.contentDocument && obj.contentDocument.defaultView) {\n            obj.contentDocument.defaultView.addEventListener(\"resize\", _onResize);\n        }\n    }, [_onResize]);\n\n    useEffect(() => {\n        const obj = objectRef.current;\n        return () => {\n            if (obj && obj.contentDocument && obj.contentDocument.defaultView) {\n                obj.contentDocument.defaultView.removeEventListener(\"resize\", _onResize);\n            }\n        };\n    }, [_onResize]);\n\n    return (\n        <object\n            onLoad={onLoad}\n            ref={objectRef} tabIndex={-1}\n            type={\"text/html\"}\n            data={\"about:blank\"}\n            title={\"\"}\n            style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                height: \"100%\",\n                width: \"100%\",\n                pointerEvents: \"none\",\n                zIndex: -1,\n                opacity: 0\n            }}\n        />\n    );\n};\n","import React, {\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useState\n} from \"react\";\n\nimport { Button, IconButton, Theme, Typography } from \"@mui/material\";\nimport { Portal } from \"@mui/base\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nimport isEqual from \"react-fast-compare\";\n\nimport {\n    Entity,\n    EntitySchemaResolver,\n    EntityValues,\n    FormContext,\n    Properties,\n    Property\n} from \"../../../../../models\";\nimport { Form, Formik, FormikProps } from \"formik\";\nimport { useDraggable } from \"./useDraggable\";\nimport {\n    CustomFieldValidator,\n    getYupEntitySchema\n} from \"../../../../../form/validation\";\nimport { useWindowSize } from \"./useWindowSize\";\nimport { computeSchema, isReadOnly } from \"../../../../utils\";\nimport { buildPropertyField } from \"../../../../../form\";\nimport clsx from \"clsx\";\nimport { ElementResizeListener } from \"./ElementResizeListener\";\nimport { OnCellValueChangeParams } from \"../../column_builder\";\nimport { ErrorView } from \"../../../ErrorView\";\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        alignSelf: \"flex-end\",\n        position: \"sticky\",\n        bottom: 0\n    },\n    popup: {\n        display: \"inline-block\",\n        userSelect: \"none\",\n        position: \"fixed\",\n        zIndex: 1300,\n        boxShadow: \"0 0 0 2px rgba(128,128,128,0.2)\",\n        borderRadius: \"4px\",\n        backgroundColor: theme.palette.background.paper\n        // transition: \"transform 250ms ease-out\",\n        // transform: \"scale(1.0)\"\n    },\n    popupInner: {\n        padding: theme.spacing(2),\n        overflow: \"auto\",\n        cursor: \"inherit\"\n    },\n    hidden: {\n        visibility: \"hidden\",\n        // transform: \"scale(0.7)\",\n        zIndex: -1\n    }\n}));\n\n\ninterface PopupFormFieldProps<M extends { [Key: string]: any }> {\n    entity?: Entity<M>;\n    customFieldValidator?: CustomFieldValidator;\n    path: string;\n    tableKey: string;\n    name?: keyof M;\n    schemaResolver?: EntitySchemaResolver<M>;\n    cellRect?: DOMRect;\n    open: boolean;\n    onClose: () => void;\n    columnIndex?: number;\n    setPreventOutsideClick: (value: any) => void;\n\n    /**\n     * Callback when the value of a cell has been edited\n     * @param params\n     */\n    onCellValueChange?: (params: OnCellValueChangeParams<any, M>) => Promise<void>;\n}\n\nexport function PopupFormField<M extends { [Key: string]: any }>({\n                                                                     tableKey,\n                                                                     entity,\n                                                                     customFieldValidator,\n                                                                     name,\n                                                                     schemaResolver,\n                                                                     path,\n                                                                     cellRect,\n                                                                     setPreventOutsideClick,\n                                                                     open,\n                                                                     onClose,\n                                                                     columnIndex,\n                                                                     onCellValueChange\n                                                                 }: PopupFormFieldProps<M>) {\n\n    const [savingError, setSavingError] = React.useState<any>();\n    const [popupLocation, setPopupLocation] = useState<{ x: number, y: number }>();\n    const [internalValue, setInternalValue] = useState<EntityValues<M> | undefined>(entity?.values);\n\n    const classes = useStyles();\n    const windowSize = useWindowSize();\n\n    const ref = React.useRef<HTMLDivElement>(null);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const initialPositionSet = React.useRef<boolean>(false);\n\n    const draggableBoundingRect = ref.current?.getBoundingClientRect();\n\n    useDraggable({\n        containerRef,\n        ref,\n        x: popupLocation?.x,\n        y: popupLocation?.y,\n        onMove: (x, y) => onMove({ x, y })\n    });\n\n    useEffect(\n        () => {\n            initialPositionSet.current = false;\n        },\n        [name, entity]\n    );\n\n    const getInitialLocation = useCallback(() => {\n        if (!cellRect) throw Error(\"getInitialLocation error\");\n\n        return {\n            x: cellRect.left < windowSize.width - cellRect.right\n                ? cellRect.x + cellRect.width / 2\n                : cellRect.x - cellRect.width / 2,\n            y: cellRect.top < windowSize.height - cellRect.bottom\n                ? cellRect.y + cellRect.height / 2\n                : cellRect.y - cellRect.height / 2\n        };\n    }, [cellRect, windowSize.height, windowSize.width]);\n\n    const normalizePosition = useCallback(({\n                                               x,\n                                               y\n                                           }: { x: number, y: number }) => {\n        if (!draggableBoundingRect)\n            throw Error(\"normalizePosition called before draggableBoundingRect is set\");\n\n        return {\n            x: Math.max(0, Math.min(x, windowSize.width - draggableBoundingRect.width)),\n            y: Math.max(0, Math.min(y, windowSize.height - draggableBoundingRect.height))\n        };\n    }, [draggableBoundingRect, windowSize]);\n\n    const updatePopupLocation = useCallback((position?: { x: number, y: number }) => {\n        if (!cellRect || !draggableBoundingRect) return;\n        const newPosition = normalizePosition(position ?? getInitialLocation());\n        if (!popupLocation || newPosition.x !== popupLocation.x || newPosition.y !== popupLocation.y)\n            setPopupLocation(newPosition);\n    }, [cellRect, draggableBoundingRect, getInitialLocation, normalizePosition, popupLocation]);\n\n    useEffect(\n        () => {\n            if (!cellRect || !draggableBoundingRect || initialPositionSet.current) return;\n            initialPositionSet.current = true;\n            updatePopupLocation(getInitialLocation());\n        },\n        [cellRect, draggableBoundingRect, getInitialLocation, updatePopupLocation]\n    );\n\n    useLayoutEffect(\n        () => {\n            updatePopupLocation(popupLocation);\n        },\n        [windowSize, cellRect]\n    );\n\n    useEffect(\n        () => {\n            setPreventOutsideClick(open);\n        },\n        [open]\n    );\n\n    const validationSchema = useMemo(() => {\n        if (!schemaResolver) return;\n        const schema = computeSchema({\n            schemaOrResolver: schemaResolver,\n            path,\n            values: internalValue,\n            previousValues: entity?.values\n        });\n        return getYupEntitySchema(\n            name && schema.properties[name]\n                ? { [name]: schema.properties[name] } as Properties<any>\n                : {} as Properties<any>,\n            customFieldValidator);\n    }, [path, internalValue, name]);\n\n    const adaptResize = () => {\n        if (!draggableBoundingRect) return;\n        return updatePopupLocation(popupLocation);\n    };\n\n    const onMove = (position: { x: number, y: number }) => {\n        if (!draggableBoundingRect) return;\n        return updatePopupLocation(position);\n    };\n\n    const saveValue = async (values: M) => {\n        setSavingError(null);\n        if (entity && onCellValueChange && name) {\n            return onCellValueChange({\n                value: values[name as string],\n                name: name as string,\n                entity,\n                setError: setSavingError,\n                setSaved: () => {\n                }\n            });\n        }\n        return Promise.resolve();\n    };\n\n    if (!entity)\n        return <></>;\n\n    const form = entity && (\n        <div\n            key={`popup_form_${tableKey}_${entity.id}_${columnIndex}`}\n            style={{\n                width: 520,\n                maxWidth: \"100vw\",\n                maxHeight: \"85vh\"\n            }}>\n            <Formik\n                initialValues={entity.values}\n                validationSchema={validationSchema}\n                validate={(values) => console.debug(\"Validating\", values)}\n                onSubmit={(values, actions) => {\n                    saveValue(values)\n                        .then(() => onClose())\n                        .finally(() => actions.setSubmitting(false));\n                }}\n            >\n                {({\n                      handleChange,\n                      values,\n                      errors,\n                      touched,\n                      dirty,\n                      setFieldValue,\n                      setFieldTouched,\n                      handleSubmit,\n                      isSubmitting\n                  }: FormikProps<EntityValues<M>>) => {\n\n                    if (!isEqual(values, internalValue)) {\n                        setInternalValue(values);\n                    }\n\n                    if (!entity)\n                        return <ErrorView\n                            error={\"PopupFormField misconfiguration\"}/>;\n\n                    if (!schemaResolver)\n                        return <></>;\n\n                    const disabled = isSubmitting;\n\n                    const schema = computeSchema({\n                        schemaOrResolver: schemaResolver,\n                        path,\n                        values,\n                        previousValues: entity?.values\n                    });\n\n                    const context: FormContext<M> = {\n                        schema,\n                        entityId: entity.id,\n                        values\n                    };\n\n                    const property: Property<any> | undefined = schema.properties[name];\n\n                    return <Form\n                        className={classes.form}\n                        onSubmit={handleSubmit}\n                        noValidate>\n\n                        {name && property && buildPropertyField<any, M>({\n                            name: name as string,\n                            disabled: isSubmitting || isReadOnly(property) || !!property.disabled,\n                            property,\n                            includeDescription: false,\n                            underlyingValueHasChanged: false,\n                            context,\n                            tableMode: true,\n                            partOfArray: false,\n                            autoFocus: open,\n                            shouldAlwaysRerender: true\n                        })}\n\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={disabled}\n                        >\n                            Save\n                        </Button>\n\n                    </Form>;\n                }}\n            </Formik>\n\n            {savingError &&\n            <Typography color={\"error\"}>\n                {savingError.message}\n            </Typography>\n            }\n\n        </div>\n    );\n\n    const draggable = (\n        <div\n            key={`draggable_${name}_${entity.id}`}\n            className={clsx(classes.popup,\n                { [classes.hidden]: !open }\n            )}\n            ref={containerRef}>\n\n            <ElementResizeListener onResize={adaptResize}/>\n\n            <div className={classes.popupInner}\n                 ref={ref}>\n\n                {form}\n\n                <IconButton\n                    size={\"small\"}\n                    style={{\n                        position: \"absolute\",\n                        top: -14,\n                        right: -14,\n                        backgroundColor: \"#666\"\n                    }}\n                    onClick={(event) => {\n                        event.stopPropagation();\n                        onClose();\n                    }}>\n                    <ClearIcon style={{ color: \"white\" }}\n                               fontSize={\"small\"}/>\n                </IconButton>\n            </div>\n\n        </div>\n    );\n\n    return (\n        <Portal container={document.body}>\n            {draggable}\n        </Portal>\n    );\n\n}\n\n\n","import { getCellAlignment, getPropertyColumnWidth } from \"./internal/common\";\nimport {\n    AdditionalColumnDelegate,\n    CollectionSize,\n    Entity,\n    EntitySchemaResolver,\n    EnumValues,\n    FireCMSContext,\n    Property,\n    ResolvedEntitySchema\n} from \"../../../models\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { TableCell } from \"../Table/TableCell\";\nimport { PreviewComponent, SkeletonComponent } from \"../../../preview\";\nimport { getPreviewSizeFrom } from \"../../../preview/util\";\nimport {\n    CustomFieldValidator,\n    mapPropertyToYup\n} from \"../../../form/validation\";\nimport {\n    OnCellChangeParams,\n    PropertyTableCell\n} from \"./internal/PropertyTableCell\";\nimport { ErrorBoundary } from \"../../internal/ErrorBoundary\";\nimport { useAuthController, useFireCMSContext } from \"../../../hooks\";\nimport { PopupFormField } from \"./internal/popup_field/PopupFormField\";\nimport { TableColumn, TableColumnFilter, TableEnumValues } from \"../../index\";\nimport { getIconForProperty } from \"../../util/property_icons\";\nimport {\n    buildEnumLabel,\n    enumToObjectEntries,\n    isEnumValueDisabled\n} from \"../../util/enums\";\nimport { computeSchema } from \"../../utils\";\n\n\nexport type ColumnsFromSchemaProps<M, AdditionalKey extends string, UserType> = {\n\n    /**\n     * Absolute collection path\n     */\n    path: string;\n\n    /**\n     * Use to resolve the schema properties for specific path, entity id or values\n     */\n    schemaResolver: EntitySchemaResolver<M>;\n\n    /**\n     * Properties displayed in this collection. If this property is not set\n     * every property is displayed, you can filter\n     */\n    displayedProperties: string[];\n\n    /**\n     * You can add additional columns to the collection view by implementing\n     * an additional column delegate.\n     * Usually defined by the end user.\n     */\n    additionalColumns?: AdditionalColumnDelegate<M, AdditionalKey, UserType>[];\n\n    /**\n     * Can the table be edited inline\n     */\n    inlineEditing: ((entity: Entity<any>) => boolean) | boolean;\n\n    /**\n     * Size of the elements in the collection\n     */\n    size: CollectionSize;\n\n    /**\n     * Use this callback to validate if an entity field should be unique\n     */\n    uniqueFieldValidator?: UniqueFieldValidator;\n\n    /**\n     * Callback when the value of a cell has been edited\n     * @param params\n     */\n    onCellValueChange?: OnCellValueChange<unknown, M>;\n\n};\n\n/**\n * @category Collection components\n */\nexport type UniqueFieldValidator = (props: { name: string, value: any, property: Property, entityId?: string }) => Promise<boolean>;\n\n/**\n * Callback when a cell has changed in a table\n * @category Collection components\n */\nexport type OnCellValueChange<T, M extends { [Key: string]: any }> = (params: OnCellValueChangeParams<T, M>) => Promise<void>;\n\n/**\n * Props passed in a callback when the content of a cell in a table has been edited\n * @category Collection components\n */\nexport interface OnCellValueChangeParams<T, M extends { [Key: string]: any }> {\n    value: T,\n    name: string,\n    entity: Entity<M>,\n    setSaved: (saved: boolean) => void\n    setError: (e: Error) => void\n}\n\n\nexport function checkInlineEditing<M>(inlineEditing: ((entity: Entity<any>) => boolean) | boolean, entity: Entity<M>) {\n    if (typeof inlineEditing === \"boolean\") {\n        return inlineEditing;\n    } else if (typeof inlineEditing === \"function\") {\n        return inlineEditing(entity);\n    } else {\n        return true;\n    }\n}\n\ntype SelectedCellProps<M> =\n    {\n        name: keyof M,\n        columnIndex: number,\n        cellRect: DOMRect;\n        width: number,\n        height: number,\n        schemaResolver: EntitySchemaResolver<M>,\n        entity: Entity<any>\n    };\n\n\nexport function useBuildColumnsFromSchema<M, AdditionalKey extends string, UserType>({\n                                                                                         schemaResolver,\n                                                                                         additionalColumns,\n                                                                                         displayedProperties,\n                                                                                         path,\n                                                                                         inlineEditing,\n                                                                                         size,\n                                                                                         onCellValueChange,\n                                                                                         uniqueFieldValidator\n                                                                                     }: ColumnsFromSchemaProps<M, AdditionalKey, UserType>\n): { columns: TableColumn<M>[], popupFormField: React.ReactElement } {\n\n    const context: FireCMSContext<UserType> = useFireCMSContext();\n\n    const [selectedCell, setSelectedCell] = React.useState<SelectedCellProps<M> | undefined>(undefined);\n    const [popupCell, setPopupCell] = React.useState<SelectedCellProps<M> | undefined>(undefined);\n    const [focused, setFocused] = React.useState<boolean>(false);\n\n    const [preventOutsideClick, setPreventOutsideClick] = React.useState<boolean>(false);\n\n    const tableKey = React.useRef<string>(Math.random().toString(36));\n\n    const additionalColumnsMap: Record<string, AdditionalColumnDelegate<M, string, UserType>> = useMemo(() => {\n        return additionalColumns\n            ? additionalColumns\n                .map((aC) => ({ [aC.id]: aC }))\n                .reduce((a, b) => ({ ...a, ...b }), [])\n            : {};\n    }, [additionalColumns]);\n\n    // on ESC key press\n    useEffect(() => {\n        const escFunction = (event: any) => {\n            if (event.keyCode === 27) {\n                unselect();\n            }\n        };\n        document.addEventListener(\"keydown\", escFunction, false);\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    });\n\n    const select = useCallback((cell?: SelectedCellProps<M>) => {\n        setSelectedCell(cell);\n        setFocused(true);\n    }, []);\n\n    const unselect = useCallback(() => {\n        setSelectedCell(undefined);\n        setFocused(false);\n        setPreventOutsideClick(false);\n    }, []);\n\n    const onPopupClose = useCallback(() => {\n        setPopupCell(undefined);\n        setFocused(true);\n    }, []);\n\n    const buildFilterEnumValues = useCallback((values: EnumValues): TableEnumValues => enumToObjectEntries(values)\n        .filter(([enumKey, labelOrConfig]) => !isEnumValueDisabled(labelOrConfig))\n        .map(([enumKey, labelOrConfig]) => ({ [enumKey]: buildEnumLabel(labelOrConfig) as string }))\n        .reduce((a, b) => ({ ...a, ...b }), {}), []);\n\n    const buildFilterableFromProperty = useCallback((property: Property,\n                                                     isArray: boolean = false): TableColumnFilter | undefined => {\n\n        if (property.dataType === \"number\" || property.dataType === \"string\") {\n            const title = property.title;\n            const enumValues = property.config?.enumValues;\n            return {\n                dataType: property.dataType,\n                isArray,\n                title,\n                enumValues: enumValues ? buildFilterEnumValues(enumValues) : undefined\n            };\n        } else if (property.dataType === \"array\" && property.of) {\n            return buildFilterableFromProperty(property.of, true);\n        } else if (property.dataType === \"boolean\") {\n            const title = property.title;\n            return {\n                dataType: property.dataType,\n                isArray,\n                title\n            };\n        } else if (property.dataType === \"timestamp\") {\n            const title = property.title;\n            return {\n                dataType: property.dataType,\n                isArray,\n                title\n            };\n        }\n\n        return undefined;\n\n    }, [buildFilterEnumValues]);\n\n    const resolvedSchema: ResolvedEntitySchema<M> = useMemo(() => computeSchema({\n        schemaOrResolver: schemaResolver,\n        path\n    }), [schemaResolver, path]);\n\n\n    const auth = useAuthController()\n    const isGlobalAdmin = auth.extra.admin\n\n    const newProps: any = {}\n    Object.keys(resolvedSchema.properties).forEach(k => {\n        if (resolvedSchema.properties[k].onlyForGlobalAdmin) {\n            if (isGlobalAdmin) {\n                newProps[k] = resolvedSchema.properties[k]\n            }\n        } else {\n            newProps[k] = resolvedSchema.properties[k]\n        }\n    })\n\n    resolvedSchema.properties = newProps\n\n\n    const propertyCellRenderer = ({\n                                      column,\n                                      columnIndex,\n                                      rowData,\n                                      rowIndex\n                                  }: any) => {\n\n\n        const entity: Entity<M> = rowData;\n\n        const name = column.dataKey as keyof M;\n\n        const resolvedSchema = schemaResolver({\n            entityId: entity.id,\n            values: entity.values\n        });\n        const property = resolvedSchema.properties[name] as Property<any>;\n        if (!property)\n            return null;\n\n        const inlineEditingEnabled = checkInlineEditing(inlineEditing, entity);\n\n        if (!inlineEditingEnabled) {\n            return (\n                <TableCell\n                    key={`preview_cell_${name}_${rowIndex}_${columnIndex}`}\n                    size={size}\n                    value={entity.values[name]}\n                    align={column.align}\n                    disabled={true}>\n                    <PreviewComponent\n                        width={column.width}\n                        height={column.height}\n                        name={`preview_${name}_${rowIndex}_${columnIndex}`}\n                        property={property}\n                        value={entity.values[name]}\n                        size={getPreviewSizeFrom(size)}\n                    />\n                </TableCell>\n            );\n        } else {\n\n            const openPopup = (cellRect: DOMRect | undefined) => {\n                if (!cellRect) {\n                    setPopupCell(undefined);\n                } else {\n                    setPopupCell({\n                        columnIndex,\n                        width: column.width,\n                        height: column.height,\n                        entity,\n                        cellRect,\n                        name,\n                        schemaResolver\n                    });\n                }\n            };\n\n            const onSelect = (cellRect: DOMRect | undefined) => {\n                if (!cellRect) {\n                    select(undefined);\n                } else {\n                    select({\n                        columnIndex,\n                        // rowIndex,\n                        width: column.width,\n                        height: column.height,\n                        entity,\n                        cellRect,\n                        name,\n                        schemaResolver\n                    });\n                }\n            };\n\n            const selected = selectedCell?.columnIndex === columnIndex &&\n                selectedCell?.entity.id === entity.id;\n\n            const isFocused = selected && focused;\n\n            const customFieldValidator: CustomFieldValidator | undefined = uniqueFieldValidator\n                ? ({ name, value, property }) => uniqueFieldValidator({\n                    name, value, property, entityId: entity.id\n                })\n                : undefined;\n\n            const validation = mapPropertyToYup({\n                property,\n                customFieldValidator,\n                name: name\n            });\n\n            const onValueChange = onCellValueChange\n                ? (props: OnCellChangeParams<any>) => onCellValueChange({\n                    ...props,\n                    entity\n                })\n                : undefined;\n\n            return entity\n                ? <PropertyTableCell\n                    key={`table_cell_${name}_${rowIndex}_${columnIndex}`}\n                    size={size}\n                    align={column.align}\n                    name={name as string}\n                    validation={validation}\n                    onValueChange={onValueChange}\n                    selected={selected}\n                    focused={isFocused}\n                    setPreventOutsideClick={setPreventOutsideClick}\n                    setFocused={setFocused}\n                    value={entity?.values ? entity.values[name] : undefined}\n                    property={property}\n                    openPopup={openPopup}\n                    select={onSelect}\n                    width={column.width}\n                    height={column.height}\n                    entityId={entity.id}\n                    entityValues={entity.values}/>\n                : <SkeletonComponent property={property}\n                                     size={getPreviewSizeFrom(size)}/>;\n        }\n\n\n    };\n\n    const additionalCellRenderer = ({\n                                        column,\n                                        columnIndex,\n                                        rowData,\n                                        rowIndex\n                                    }: any) => {\n\n        const entity: Entity<M> = rowData;\n\n        const additionalColumn = additionalColumnsMap[column.dataKey as AdditionalKey];\n        const value = additionalColumn.dependencies\n            ? Object.entries(entity.values)\n                .filter(([key, value]) => additionalColumn.dependencies!.includes(key as any))\n                .reduce((a, b) => ({ ...a, ...b }), {})\n            : undefined;\n\n        return (\n            <TableCell\n                value={value}\n                focused={false}\n                selected={false}\n                disabled={true}\n                size={size}\n                align={\"left\"}\n                allowScroll={false}\n                showExpandIcon={false}\n                disabledTooltip={\"Additional columns can't be edited directly\"}\n            >\n                <ErrorBoundary>\n                    {additionalColumn.builder({\n                        entity,\n                        context\n                    })}\n                </ErrorBoundary>\n            </TableCell>\n        );\n\n    };\n\n    const allColumns: TableColumn<M>[] = (Object.keys(resolvedSchema.properties) as (keyof M)[])\n        .map((key) => {\n            const property: Property<any> | undefined = resolvedSchema.properties[key];\n\n            return ({\n                key: key as string,\n                property,\n                align: getCellAlignment(property),\n                icon: (hoverOrOpen) => getIconForProperty(property, hoverOrOpen ? undefined : \"disabled\", \"small\"),\n                label: property.title || key as string,\n                sortable: true,\n                filter: buildFilterableFromProperty(property),\n                width: getPropertyColumnWidth(property),\n                cellRenderer: propertyCellRenderer\n            });\n        });\n\n    if (additionalColumns) {\n        const items: TableColumn<M>[] = additionalColumns.map((additionalColumn) =>\n            ({\n                key: additionalColumn.id,\n                type: \"additional\",\n                align: \"left\",\n                sortable: false,\n                label: additionalColumn.title,\n                width: additionalColumn.width ?? 200,\n                cellRenderer: additionalCellRenderer\n            }));\n        allColumns.push(...items);\n    }\n\n    const columns = displayedProperties\n        .map((p) => {\n            return allColumns.find(c => c.key === p);\n        }).filter(c => !!c) as TableColumn<M>[];\n\n    const customFieldValidator: CustomFieldValidator | undefined = uniqueFieldValidator\n        ? ({ name, value, property }) => uniqueFieldValidator({\n            name,\n            value,\n            property,\n            entityId: selectedCell?.entity.id\n        })\n        : undefined;\n\n    const popupFormField = (\n        <PopupFormField\n            open={Boolean(popupCell)}\n            onClose={onPopupClose}\n            cellRect={popupCell?.cellRect}\n            columnIndex={popupCell?.columnIndex}\n            name={popupCell?.name}\n            schemaResolver={popupCell?.schemaResolver}\n            entity={popupCell?.entity}\n            tableKey={tableKey.current}\n            customFieldValidator={customFieldValidator}\n            path={path}\n            onCellValueChange={onCellValueChange}\n            setPreventOutsideClick={setPreventOutsideClick}\n        />\n    );\n\n    return { columns, popupFormField };\n\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Button, Paper, Theme, useMediaQuery, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nimport {\n    AdditionalColumnDelegate,\n    CollectionSize,\n    Entity,\n    FilterCombination,\n    FilterValues,\n    SaveEntityProps,\n    User,\n    WhereFilterOp\n} from \"../../../models\";\nimport { getSubcollectionColumnId, useColumnIds } from \"./internal/common\";\nimport { CollectionTableToolbar } from \"./internal/CollectionTableToolbar\";\nimport { CollectionRowActions } from \"./internal/CollectionRowActions\";\nimport { CollectionTableProps } from \"./CollectionTableProps\";\nimport {\n    saveEntityWithCallbacks,\n    useCollectionFetch,\n    useDataSource,\n    useFireCMSContext,\n    useSideEntityController\n} from \"../../../hooks\";\nimport { Table } from \"../../index\";\nimport {\n    checkInlineEditing,\n    OnCellValueChange,\n    UniqueFieldValidator,\n    useBuildColumnsFromSchema\n} from \"./column_builder\";\n\nconst DEFAULT_PAGE_SIZE = 50;\n\nexport const useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    }\n}));\n\n\n/**\n * This component is in charge of rendering a collection table with a high\n * degree of customization. It is in charge of fetching data from\n * the {@link DataSource} and holding the state of filtering and sorting.\n *\n * This component is used internally by {@link EntityCollectionView} and\n * {@link ReferenceDialog}\n *\n * Please note that you only need to use this component if you are building\n * a custom view. If you just need to create a default view you can do it\n * exclusively with config options.\n *\n * If you want to bind a {@link EntityCollection} to a table with the default\n * options you see in collections in the top level navigation, you can\n * check {@link EntityCollectionView}\n *\n * If you need a table that is not bound to the datasource or entities and\n * properties at all, you can check {@link Table}\n *\n * @see CollectionTableProps\n * @see EntityCollectionView\n * @see Table\n * @category Components\n */\nexport const CollectionTable = React.memo<CollectionTableProps<any, any>>(CollectionTableInternal, areEqual) as React.FunctionComponent<CollectionTableProps<any, any>>;\n\nfunction areEqual(prevProps: CollectionTableProps<any, any>, nextProps: CollectionTableProps<any, any>) {\n    return prevProps.path === nextProps.path &&\n        prevProps.collection === nextProps.collection &&\n        prevProps.title === nextProps.title &&\n        prevProps.toolbarActionsBuilder === nextProps.toolbarActionsBuilder &&\n        prevProps.tableRowActionsBuilder === nextProps.tableRowActionsBuilder &&\n        prevProps.inlineEditing === nextProps.inlineEditing\n        ;\n}\n\n\nexport function CollectionTableInternal<M extends { [Key: string]: any },\n    AdditionalKey extends string = string,\n    UserType = User>\n({\n     path,\n     collection,\n     schemaResolver,\n     inlineEditing,\n     toolbarActionsBuilder,\n     title,\n     tableRowActionsBuilder,\n     entitiesDisplayedFirst,\n     onEntityClick,\n     onColumnResize,\n     onSizeChanged,\n     hoverRow = true\n }: CollectionTableProps<M, AdditionalKey>) {\n\n    const context = useFireCMSContext();\n    const dataSource = useDataSource();\n    const sideEntityController = useSideEntityController();\n\n    const theme = useTheme();\n    const largeLayout = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    const [size, setSize] = React.useState<CollectionSize>(\"xs\");\n\n    const initialFilter = collection.initialFilter;\n    const initialSort = collection.initialSort;\n    const filterCombinations = collection.filterCombinations;\n    const textSearchEnabled = collection.textSearchEnabled;\n    const paginationEnabled = collection.pagination === undefined || Boolean(collection.pagination);\n    const pageSize = typeof collection.pagination === \"number\" ? collection.pagination : DEFAULT_PAGE_SIZE;\n\n    const [itemCount, setItemCount] = React.useState<number | undefined>(paginationEnabled ? pageSize : undefined);\n\n    const [filterValues, setFilterValues] = React.useState<FilterValues<M> | undefined>(initialFilter || {});\n    const [sortBy, setSortBy] = React.useState<[Extract<keyof M, string>, \"asc\" | \"desc\"] | undefined>(initialSort);\n\n    const filterIsSet = !!filterValues && Object.keys(filterValues).length > 0;\n\n    const classes = useStyles();\n\n    const additionalColumns = useMemo(() => {\n        const subcollectionColumns: AdditionalColumnDelegate<M, any, any>[] = collection.subcollections?.map((subcollection) => {\n            return {\n                id: getSubcollectionColumnId(subcollection),\n                title: subcollection.name,\n                width: 200,\n                dependencies: [],\n                builder: ({ entity }) => (\n                    <Button color={\"primary\"}\n                            onClick={(event) => {\n                                event.stopPropagation();\n                                sideEntityController.open({\n                                    path,\n                                    entityId: entity.id,\n                                    selectedSubpath: subcollection.path,\n                                    permissions: collection.permissions,\n                                    schema: schemaResolver,\n                                    subcollections: collection.subcollections,\n                                    callbacks: collection.callbacks,\n                                    overrideSchemaRegistry: false\n                                });\n                            }}>\n                        {(subcollection.buttonContent && subcollection.buttonContent({ entity })) ?? subcollection.name}\n                    </Button>\n                )\n            };\n        }) ?? [];\n        return [...(collection.additionalColumns ?? []), ...subcollectionColumns];\n    }, [collection, path]);\n\n    const resolvedSchema = useMemo(() => schemaResolver({}), []);\n    const displayedProperties = useColumnIds(collection, resolvedSchema, true);\n\n    const uniqueFieldValidator: UniqueFieldValidator = useCallback(\n        ({\n             name,\n             value,\n             property,\n             entityId\n         }) => dataSource.checkUniqueField(path, name, value, property, entityId),\n        [path, dataSource]);\n\n\n    const onCellChanged: OnCellValueChange<any, M> = useCallback(({\n                                                                      value,\n                                                                      name,\n                                                                      setSaved,\n                                                                      setError,\n                                                                      entity\n                                                                  }) => {\n        const saveProps: SaveEntityProps<M> = {\n            path,\n            entityId: entity.id,\n            values: {\n                ...entity.values,\n                [name]: value\n            },\n            previousValues: entity.values,\n            schema: schemaResolver,\n            status: \"existing\"\n        };\n\n        return saveEntityWithCallbacks({\n            ...saveProps,\n            callbacks: collection.callbacks,\n            dataSource,\n            context,\n            onSaveSuccess: () => setSaved(true),\n            onSaveFailure: (e: Error) => {\n                setError(e);\n            }\n        });\n\n    }, [path, collection, schemaResolver]);\n\n    let { columns, popupFormField } = useBuildColumnsFromSchema({\n        schemaResolver,\n        additionalColumns,\n        displayedProperties,\n        path,\n        inlineEditing,\n        size,\n        onCellValueChange: onCellChanged,\n        uniqueFieldValidator\n    });\n    console.log('columns', columns)\n    columns = columns.filter(c => {\n        if (c.property) {\n            return !c.property.hideInTable\n        } else {\n            return true\n        }\n    })\n    const [searchString, setSearchString] = React.useState<string | undefined>();\n\n    const {\n        data,\n        dataLoading,\n        noMoreToLoad,\n        dataLoadingError\n    } = useCollectionFetch({\n        entitiesDisplayedFirst,\n        path,\n        schemaResolver,\n        filterValues,\n        sortBy,\n        searchString,\n        itemCount\n    });\n\n    const actions = useMemo(() => toolbarActionsBuilder && toolbarActionsBuilder({\n        size,\n        data\n    }), [toolbarActionsBuilder, size, data]);\n\n    const loadNextPage = useCallback(() => {\n        if (!paginationEnabled || dataLoading || noMoreToLoad)\n            return;\n        if (itemCount !== undefined)\n            setItemCount(itemCount + pageSize);\n    }, [dataLoading, itemCount, noMoreToLoad, pageSize, paginationEnabled]);\n\n    const resetPagination = useCallback(() => {\n        setItemCount(pageSize);\n    }, [pageSize]);\n\n    const clearFilter = useCallback(() => setFilterValues({}), []);\n\n    const buildIdColumn = useCallback(({ entry, size }: {\n        entry: Entity<M>,\n        size: CollectionSize,\n    }) => {\n        if (tableRowActionsBuilder)\n            return tableRowActionsBuilder({ entity: entry, size });\n        else\n            return <CollectionRowActions entity={entry} size={size} data={data}/>;\n\n    }, [tableRowActionsBuilder]);\n\n    const onRowClick = useCallback(({ rowData }: { rowData: Entity<M> }) => {\n\n    }, [onEntityClick]);\n\n    const updateSize = useCallback((size: CollectionSize) => {\n        if (onSizeChanged)\n            onSizeChanged(size);\n        setSize(size);\n    }, []);\n\n    const onTextSearch = useCallback((newSearchString) => setSearchString(newSearchString), []);\n    return (\n\n        <Paper className={classes.root}>\n\n            <CollectionTableToolbar filterIsSet={filterIsSet}\n                                    onTextSearch={textSearchEnabled ? onTextSearch : undefined}\n                                    clearFilter={clearFilter}\n                                    actions={actions}\n                                    size={size}\n                                    onSizeChanged={updateSize}\n                                    title={title}\n                                    loading={dataLoading}/>\n\n            <Table\n                data={data}\n                columns={columns}\n                onRowClick={onRowClick}\n                onEndReached={loadNextPage}\n                onResetPagination={resetPagination}\n                idColumnBuilder={buildIdColumn}\n                error={dataLoadingError}\n                paginationEnabled={paginationEnabled}\n                onColumnResize={onColumnResize}\n                frozenIdColumn={largeLayout}\n                size={size}\n                loading={dataLoading}\n                filter={filterValues}\n                onFilterUpdate={setFilterValues}\n                sortBy={sortBy}\n                onSortByUpdate={setSortBy as any}\n                hoverRow={hoverRow}\n                checkFilterCombination={(filterValues, sortBy) => isFilterCombinationValid(filterValues, filterCombinations, sortBy)}\n                collection={collection}\n            />\n\n            {popupFormField}\n\n\n        </Paper>\n    );\n\n}\n\nfunction isFilterCombinationValid<M>(\n    filterValues: FilterValues<M>,\n    indexes?: FilterCombination<string>[],\n    sortBy?: [string, \"asc\" | \"desc\"]\n): boolean {\n\n    const sortKey = sortBy ? sortBy[0] : undefined;\n    const sortDirection = sortBy ? sortBy[1] : undefined;\n\n    // Order by clause cannot contain a field with an equality filter available\n    const values: [WhereFilterOp, any][] = Object.values(filterValues) as [WhereFilterOp, any][];\n    if (sortKey && values.map((v) => v[0]).includes(\"==\")) {\n        return false;\n    }\n\n    const filterKeys = Object.keys(filterValues);\n    const filtersCount = filterKeys.length;\n\n    if (filtersCount === 1 && (!sortKey || sortKey === filterKeys[0])) {\n        return true;\n    }\n\n    if (!indexes && filtersCount > 1) {\n        return false;\n    }\n\n    // only one filter set, different to the sort key\n    if (sortKey && filtersCount === 1 && filterKeys[0] !== sortKey) {\n        return false;\n    }\n\n    return !!indexes && indexes\n        .filter((compositeIndex) => !sortKey || sortKey in compositeIndex)\n        .find((compositeIndex) =>\n            Object.entries(filterValues).every(([key, value]) => compositeIndex[key] !== undefined && (!sortDirection || compositeIndex[key] === sortDirection))\n        ) !== undefined;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CollectionSize, Entity, EntityCollectionResolver } from \"../../models\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    Divider,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { CollectionTable } from \"./CollectionTable\";\nimport { CollectionRowActions } from \"./CollectionTable/internal/CollectionRowActions\";\nimport { useDataSource } from \"../../hooks\";\n\n\nexport const useStyles = makeStyles(theme => createStyles({\n    dialogBody: {\n        flexGrow: 1,\n        overflow: \"auto\",\n        minWidth: \"85vw\"\n    },\n    paper: {\n        height: \"100%\"\n    }\n}));\n\n/**\n * @category Components\n */\nexport interface ReferenceDialogProps {\n\n    /**\n     * Is the dialog currently open\n     */\n    open: boolean;\n\n    /**\n     * Allow multiple selection of values\n     */\n    multiselect: boolean;\n\n    /**\n     * Entity collection config\n     */\n    collectionResolver: EntityCollectionResolver;\n\n    /**\n     * Absolute path of the collection\n     */\n    path: string;\n\n    /**\n     * If you are opening the dialog for the first time, you can select some\n     * entity ids to be displayed first.\n     */\n    selectedEntityIds?: string[];\n\n    /**\n     * If `multiselect` is set to `false`, you will get the select entity\n     * in this callback.\n     * @param entity\n     * @callback\n        */\n    onSingleEntitySelected?(entity: Entity<any> | null): void;\n\n    /**\n     * If `multiselect` is set to `true`, you will get the selected entities\n     * in this callback.\n     * @param entities\n     * @callback\n        */\n    onMultipleEntitiesSelected?(entities: Entity<any>[]): void;\n\n    /**\n     * Is the dialog currently open\n     * @callback\n        */\n    onClose(): void;\n\n}\n\n/**\n * This component renders an overlay dialog that allows to select entities\n * in a given collection\n * @category Components\n */\nexport function ReferenceDialog(\n    {\n        onSingleEntitySelected,\n        onMultipleEntitiesSelected,\n        onClose,\n        open,\n        multiselect,\n        collectionResolver,\n        path,\n        selectedEntityIds\n    }: ReferenceDialogProps) {\n\n    const classes = useStyles();\n    const dataSource = useDataSource();\n\n    const collection = collectionResolver;\n    const schema = collectionResolver.schema;\n    const schemaResolver = collectionResolver.schemaResolver;\n\n    const [selectedEntities, setSelectedEntities] = useState<Entity<any>[] | undefined>();\n\n    useEffect(() => {\n        let unmounted = false;\n        if (selectedEntityIds) {\n            Promise.all(\n                selectedEntityIds.map((entityId) => {\n                    return dataSource.fetchEntity({\n                        path,\n                        entityId,\n                        schema: schemaResolver\n                    });\n                }))\n                .then((entities) => {\n                    if (!unmounted)\n                        setSelectedEntities(entities);\n                });\n        } else {\n            setSelectedEntities([]);\n        }\n        return () => {\n            unmounted = true;\n        };\n    }, [dataSource, path, selectedEntityIds]);\n\n\n    const onEntityClick = (entity: Entity<any>) => {\n        if (!multiselect && onSingleEntitySelected) {\n            onSingleEntitySelected(entity);\n        } else {\n            toggleEntitySelection(entity);\n        }\n    };\n\n    const onClear = () => {\n        if (!multiselect && onSingleEntitySelected) {\n            onSingleEntitySelected(null);\n        } else if (onMultipleEntitiesSelected) {\n            onMultipleEntitiesSelected([]);\n        }\n    };\n\n\n    const toggleEntitySelection = (entity: Entity<any>) => {\n        let newValue;\n        if (selectedEntities) {\n            if (selectedEntities.map((e) => e.id).indexOf(entity.id) > -1) {\n                newValue = selectedEntities.filter((item: Entity<any>) => item.id !== entity.id);\n            } else {\n                newValue = [...selectedEntities, entity];\n            }\n            setSelectedEntities(newValue);\n\n            if (onMultipleEntitiesSelected)\n                onMultipleEntitiesSelected(newValue);\n        }\n    };\n\n    const tableRowActionsBuilder = ({\n                                        entity,\n                                        size\n                                    }: { entity: Entity<any>, size: CollectionSize }) => {\n\n        const isSelected = selectedEntityIds && selectedEntityIds.indexOf(entity.id) > -1;\n        return <CollectionRowActions\n            entity={entity}\n            size={size}\n            isSelected={isSelected}\n            selectionEnabled={multiselect}\n            toggleEntitySelection={toggleEntitySelection}\n        />;\n\n    };\n\n    const toolbarActionsBuilder = () => (\n        <Button onClick={onClear}\n                color=\"primary\">\n            Clear\n        </Button>\n    );\n\n    const title = (\n        <Typography variant={\"h6\"}>\n            {`Select ${schema.name}`}\n        </Typography>);\n\n    return (\n\n        <Dialog\n            onClose={onClose}\n            classes={{\n                paper: classes.paper\n            }}\n            maxWidth={\"xl\"}\n            scroll={\"paper\"}\n            open={open}>\n\n            <div className={classes.dialogBody}>\n\n                {selectedEntities &&\n                <CollectionTable path={path}\n                                 collection={collection}\n                                 schemaResolver={schemaResolver}\n                                 inlineEditing={false}\n                                 toolbarActionsBuilder={toolbarActionsBuilder}\n                                 onEntityClick={onEntityClick}\n                                 tableRowActionsBuilder={tableRowActionsBuilder}\n                                 title={title}\n                                 entitiesDisplayedFirst={selectedEntities}\n                />}\n            </div>\n\n            <Divider/>\n\n            <DialogActions>\n                <Button onClick={(event) => {\n                    event.stopPropagation();\n                    onClose();\n                }}\n                        color=\"primary\"\n                        variant=\"contained\">\n                    Close\n                </Button>\n            </DialogActions>\n\n        </Dialog>\n\n    );\n\n}\n","import {\n    Entity,\n    EntityCallbacks,\n    EntitySchema,\n    EntitySchemaResolver\n} from \"../../../../models\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle\n} from \"@mui/material\";\nimport { EntityPreview } from \"../../index\";\nimport {\n    deleteEntityWithCallbacks,\n    useDataSource,\n    useFireCMSContext,\n    useSnackbarController\n} from \"../../../../hooks\";\n\n\nexport interface DeleteEntityDialogProps<M extends { [Key: string]: any }> {\n    entityOrEntitiesToDelete?: Entity<M> | Entity<M>[],\n    path: string,\n    schema: EntitySchema<M>,\n    schemaResolver: EntitySchemaResolver<M>;\n    open: boolean;\n    onClose: () => void;\n    callbacks?: EntityCallbacks<M>,\n\n    onEntityDelete?(path: string, entity: Entity<M>): void;\n\n    onMultipleEntitiesDelete?(path: string, entities: Entity<M>[]): void;\n}\n\nexport function DeleteEntityDialog<M extends { [Key: string]: any }>({\n                                                                                   entityOrEntitiesToDelete,\n                                                                                   schemaResolver,\n                                                                                   onClose,\n                                                                                   open,\n                                                                                   callbacks,\n                                                                                   onEntityDelete,\n                                                                                   onMultipleEntitiesDelete,\n                                                                                   path,\n                                                                                   ...other\n                                                                               }\n                                                                         : DeleteEntityDialogProps<M>) {\n\n    const dataSource = useDataSource();\n    const snackbarContext = useSnackbarController();\n    const [loading, setLoading] = useState(false);\n\n    const [entityOrEntities, setUsedEntityOrEntities] = React.useState<Entity<M> | Entity<M>[]>();\n    const [multipleEntities, setMultipleEntities] = React.useState<boolean>();\n    const context = useFireCMSContext();\n\n    const schema = useMemo(() => schemaResolver({}), []);\n\n    React.useEffect(() => {\n        if (entityOrEntitiesToDelete) {\n            const revisedEntityOrEntities = Array.isArray(entityOrEntitiesToDelete) && entityOrEntitiesToDelete.length === 1\n                ? entityOrEntitiesToDelete[0]\n                : entityOrEntitiesToDelete;\n            setUsedEntityOrEntities(revisedEntityOrEntities);\n            setMultipleEntities(Array.isArray(revisedEntityOrEntities));\n        }\n    }, [entityOrEntitiesToDelete]);\n\n    const handleCancel = useCallback(() => {\n        onClose();\n    }, [onClose]);\n\n    const onDeleteSuccess = useCallback((entity: Entity<any>) => {\n        console.debug(\"Deleted\", entity);\n    }, []);\n\n    const onDeleteFailure = useCallback((entity: Entity<any>, e: Error) => {\n        snackbarContext.open({\n            type: \"error\",\n            title: `${schema.name}: Error deleting`,\n            message: e?.message\n        });\n\n        console.error(\"Error deleting entity\");\n        console.error(e);\n    }, [schema.name]);\n\n    const onPreDeleteHookError = useCallback((entity: Entity<any>, e: Error) => {\n        snackbarContext.open({\n            type: \"error\",\n            title: `${schema.name}: Error before deleting`,\n            message: e?.message\n        });\n        console.error(e);\n    }, [schema.name]);\n\n    const onDeleteSuccessHookError = useCallback((entity: Entity<any>, e: Error) => {\n        snackbarContext.open({\n            type: \"error\",\n            title: `${schema.name}: Error after deleting (entity is deleted)`,\n            message: e?.message\n        });\n        console.error(e);\n    }, [schema.name]);\n\n    const performDelete = useCallback((entity: Entity<M>): Promise<boolean> =>\n        deleteEntityWithCallbacks({\n            dataSource,\n            entity,\n            schema,\n            callbacks,\n            onDeleteSuccess,\n            onDeleteFailure,\n            onPreDeleteHookError,\n            onDeleteSuccessHookError,\n            context\n        }), [dataSource, schema, callbacks, onDeleteSuccess, onDeleteFailure, onPreDeleteHookError, onDeleteSuccessHookError, context]);\n\n    const handleOk = useCallback(async () => {\n        if (entityOrEntities) {\n\n            setLoading(true);\n\n            if (multipleEntities) {\n                Promise.all((entityOrEntities as Entity<M>[]).map(performDelete)).then((results) => {\n\n                    setLoading(false);\n\n                    if (onMultipleEntitiesDelete && entityOrEntities)\n                        onMultipleEntitiesDelete(path, entityOrEntities as Entity<M>[]);\n\n                    if (results.every(Boolean)) {\n                        snackbarContext.open({\n                            type: \"success\",\n                            message: `${schema.name}: multiple deleted`\n                        });\n                    } else if (results.some(Boolean)) {\n                        snackbarContext.open({\n                            type: \"warning\",\n                            message: `${schema.name}: Some of the entities have been deleted, but not all`\n                        });\n                    } else {\n                        snackbarContext.open({\n                            type: \"error\",\n                            message: `${schema.name}: Error deleting entities`\n                        });\n                    }\n                    onClose();\n                });\n\n            } else {\n                performDelete(entityOrEntities as Entity<M>).then((success) => {\n                    setLoading(false);\n                    if (success) {\n                        if (onEntityDelete && entityOrEntities)\n                            onEntityDelete(path, entityOrEntities as Entity<M>);\n                        snackbarContext.open({\n                            type: \"success\",\n                            message: `${schema.name} deleted`\n                        });\n                        onClose();\n                    }\n                });\n            }\n        }\n    }, [entityOrEntities, multipleEntities, performDelete, onMultipleEntitiesDelete, path, onClose, snackbarContext, schema.name, onEntityDelete]);\n\n\n    let content: JSX.Element;\n    if (entityOrEntities && multipleEntities) {\n        content = <div>Multiple entities</div>;\n    } else {\n        const entity = entityOrEntities as Entity<M> | undefined;\n        const resolvedSchema = schemaResolver({\n            entityId: entity?.id,\n            values: entity?.values\n        })\n        content = entity\n            ? <EntityPreview\n                entity={entity}\n                schema={resolvedSchema}\n                path={path}/>\n            : <></>;\n    }\n\n    const dialogTitle = multipleEntities\n        ? `${schema.name}: Confirm multiple delete?`\n        : `Would you like to delete this ${schema.name}?`;\n\n    return (\n        <Dialog\n            maxWidth=\"md\"\n            aria-labelledby=\"delete-dialog\"\n            open={open}\n            onBackdropClick={onClose}\n            {...other}\n        >\n            <DialogTitle id=\"delete-dialog-title\">\n                {dialogTitle}\n            </DialogTitle>\n\n            {!multipleEntities && <DialogContent dividers>\n                {content}\n            </DialogContent>}\n\n            <DialogActions>\n\n                {loading && <CircularProgress size={16} thickness={8}/>}\n\n                <Button onClick={handleCancel}\n                        disabled={loading}\n                        color=\"primary\">\n                    Cancel\n                </Button>\n                <Button\n                    autoFocus\n                    disabled={loading}\n                    onClick={handleOk}\n                    color=\"primary\">\n                    Ok\n                </Button>\n            </DialogActions>\n\n        </Dialog>\n    );\n}\n\n","import {\n    Entity,\n    EntityReference,\n    ExportConfig,\n    Properties,\n    Property,\n    ResolvedEntitySchema\n} from \"../../models\";\nimport { getValueInPath } from \"./objects\";\n\ninterface Header {\n    key: string;\n    label: string;\n}\n\nexport function downloadCSV<M>(data: Entity<M>[],\n                               additionalData: Record<string, any>[] | undefined,\n                               schema: ResolvedEntitySchema<M>,\n                               path: string,\n                               exportConfig: ExportConfig | undefined) {\n    const properties = schema.properties;\n    const headers = getExportHeaders(properties, path, exportConfig);\n    const exportableData = getExportableData(data, additionalData, properties, headers);\n    const headersData = entryToCSVRow(headers.map(h => h.label));\n    const csvData = exportableData.map(entry => entryToCSVRow(entry));\n    downloadBlob([headersData, ...csvData], `${schema.name}.csv`, \"text/csv\");\n}\n\nexport function getExportableData(data: any[],\n                                  additionalData: Record<string, any>[] | undefined,\n                                  properties: Properties,\n                                  headers: Header[]\n) {\n\n    const mergedData: any[] = data.map(e => ({ id: e.id, ...processCSVValues(e.values as any, properties) }));\n    if (additionalData) {\n        additionalData.forEach((additional, index) => {\n            mergedData[index] = { ...mergedData[index], ...additional };\n        });\n    }\n    return mergedData && mergedData.map((entry) => {\n        return headers.map((header) => getValueInPath(entry, header.key));\n    });\n}\n\n\nfunction getExportHeaders<M extends { [Key: string]: any }, UserType>(properties: Properties<M>,\n                                                                      path: string,\n                                                                      exportConfig?: ExportConfig<UserType>): Header[] {\n    const headers = [\n        { label: \"id\", key: \"id\" },\n        ...Object.entries(properties)\n            .map(([childKey, property]) => getHeaders(property, childKey, \"\"))\n            .flat()\n    ];\n\n    if (exportConfig?.additionalColumns) {\n        headers.push(...exportConfig.additionalColumns.map((column) => ({\n            label: column.key,\n            key: column.key\n        })));\n    }\n\n    return headers;\n}\n\n/**\n * Get headers for property. There could be more than one header per property\n * @param property\n * @param propertyKey\n * @param prefix\n */\nfunction getHeaders(property: Property, propertyKey: string, prefix: string = \"\"): Header[] {\n    const currentKey = prefix ? `${prefix}.${propertyKey}` : propertyKey;\n    if (property.dataType === \"map\" && property.properties) {\n        return Object.entries(property.properties)\n            .map(([childKey, p]) => getHeaders(p, childKey, currentKey))\n            .flat();\n    } else {\n        return [{ label: currentKey, key: currentKey }];\n    }\n}\n\nfunction processCSVValue(inputValue: any,\n                         property: Property): any {\n\n    let value;\n    if (property.dataType === \"map\" && property.properties) {\n        value = processCSVValues(inputValue, property.properties as Properties);\n    } else if (property.dataType === \"array\") {\n        if (property.of && Array.isArray(inputValue)) {\n            if (property.of.dataType === \"map\") {\n                value = inputValue.map((e) => JSON.stringify(e));\n            } else {\n                value = inputValue.map((e) => processCSVValue(e, property.of as Property));\n            }\n        } else {\n            value = inputValue;\n        }\n    } else if (property.dataType === \"reference\") {\n        const ref = inputValue ? inputValue as EntityReference : undefined;\n        value = ref ? ref.pathWithId : null;\n    } else if (property.dataType === \"timestamp\") {\n        value = inputValue ? inputValue.getTime() : null;\n    } else {\n        value = inputValue;\n    }\n\n    return value;\n}\n\nfunction processCSVValues<M extends { [Key: string]: any }>\n(inputValues: Record<keyof M, any>, properties: Properties<M>): Record<keyof M, any> {\n    const updatedValues = Object.entries(properties)\n        .map(([key, property]) => {\n            const inputValue = inputValues && (inputValues as any)[key];\n            const updatedValue = processCSVValue(inputValue, property as Property);\n            if (updatedValue === undefined) return {};\n            return ({ [key]: updatedValue });\n        })\n        .reduce((a, b) => ({ ...a, ...b }), {}) as Record<keyof M, any>;\n    return { ...inputValues, ...updatedValues };\n}\n\nfunction entryToCSVRow(entry: any[]) {\n    return entry\n        .map((v: string | undefined) => {\n            if (v === null || v === undefined) return \"\";\n            const s = String(v);\n            return '\"' + s.replaceAll('\"', '\"\"') + '\"';\n        })\n        .join(\",\") + \"\\r\\n\";\n}\n\nexport function downloadBlob(content: BlobPart[], filename: string, contentType: string) {\n    const blob = new Blob(content, { type: contentType });\n    const url = URL.createObjectURL(blob);\n    const pom = document.createElement(\"a\");\n    pom.href = url;\n    pom.setAttribute(\"download\", filename);\n    pom.click();\n}\n\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport {\n    Alert,\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    Tooltip\n} from \"@mui/material\";\n\nimport Upload from \"@mui/icons-material/Upload\";\nimport {\n    Entity,\n    EntitySchema,\n    EntitySchemaResolver,\n    ExportConfig\n} from \"../../../../models\";\nimport { useDataSource, useFireCMSContext } from \"../../../../hooks\";\nimport { downloadCSV } from \"../../../util/csv\";\n\ninterface ExportButtonProps<M extends { [Key: string]: any }, UserType> {\n    schema: EntitySchema<M>;\n    schemaResolver: EntitySchemaResolver<M>;\n    path: string;\n    exportConfig?: ExportConfig<UserType>;\n}\n\nconst INITIAL_DOCUMENTS_LIMIT = 200;\n\nexport function ExportButton<M extends { [Key: string]: any }, UserType>({\n                                                                             schema,\n                                                                             schemaResolver,\n                                                                             path,\n                                                                             exportConfig\n                                                                         }: ExportButtonProps<M, UserType>\n) {\n\n    const dataSource = useDataSource();\n    const context = useFireCMSContext();\n\n    const dataRef = useRef<Entity<M>[]>();\n    const additionalDataRef = useRef<Record<string, any>[]>();\n\n    const [dataLoading, setDataLoading] = React.useState<boolean>(false);\n    const [dataLoadingError, setDataLoadingError] = React.useState<Error | undefined>();\n\n    // If in the initial load, we get more than INITIAL_DOCUMENTS_LIMIT results\n    const [hasLargeAmountOfData, setHasLargeAmountOfData] = React.useState<boolean>(false);\n\n    // did the user agree to export a large amount of data\n    const [fetchLargeDataAccepted, setFetchLargeDataAccepted] = React.useState<boolean>(false);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = useCallback(() => {\n        setOpen(true);\n    }, [setOpen]);\n\n    const handleClose = useCallback(() => {\n        setOpen(false);\n    }, [setOpen]);\n\n    const doDownload = useCallback((data: Entity<M>[] | undefined,\n                                    additionalData: Record<string, any>[] | undefined,\n                                    schema: EntitySchema<M>,\n                                    schemaResolver: EntitySchemaResolver<M>,\n                                    path: string,\n                                    exportConfig: ExportConfig | undefined) => {\n        if (!data)\n            throw Error(\"Trying to perform export without loading data first\");\n\n        const resolvedSchema = schemaResolver({});\n        downloadCSV(data, additionalData, resolvedSchema, path, exportConfig);\n    }, []);\n\n    useEffect(() => {\n\n        if (!open) return;\n\n        setDataLoading(true);\n\n        const updateEntities = async (entities: Entity<M>[]) => {\n            if (entities.length >= INITIAL_DOCUMENTS_LIMIT) {\n                setHasLargeAmountOfData(true);\n            }\n\n            const pendingDownload = dataRef.current && entities.length > dataRef.current.length && fetchLargeDataAccepted;\n\n            dataRef.current = entities;\n            const additionalColumnsData = await fetchAdditionalColumns(entities);\n            additionalDataRef.current = additionalColumnsData;\n            setDataLoading(false);\n            setDataLoadingError(undefined);\n\n            if (pendingDownload) {\n                doDownload(entities, additionalColumnsData, schema, schemaResolver, path, exportConfig);\n                handleClose();\n            }\n        };\n\n        const fetchAdditionalColumns = async (entities: Entity<M>[]) => {\n\n            if (!exportConfig?.additionalColumns) {\n                return;\n            }\n\n            const additionalColumns = exportConfig.additionalColumns;\n\n            const resolvedColumnsValues: Record<string, any>[] = await Promise.all(entities.map(async (entity) => {\n                return (await Promise.all(additionalColumns.map(async (column) => {\n                    return {\n                        [column.key]: await column.builder({\n                            entity,\n                            context\n                        })\n                    };\n                }))).reduce((a, b) => ({ ...a, ...b }), {});\n            }));\n            return resolvedColumnsValues;\n        };\n\n        const onFetchError = (error: Error) => {\n            console.error(\"ERROR\", error);\n            setDataLoading(false);\n            setDataLoadingError(error);\n        };\n\n        dataSource.fetchCollection<M>({\n            path,\n            schema: schemaResolver,\n            limit: fetchLargeDataAccepted ? undefined : INITIAL_DOCUMENTS_LIMIT\n        })\n            .then(updateEntities)\n            .catch(onFetchError);\n\n    }, [path, fetchLargeDataAccepted, schema, open, dataSource, schemaResolver, doDownload, exportConfig, handleClose, context]);\n\n    const needsToAcceptFetchAllData = hasLargeAmountOfData && !fetchLargeDataAccepted;\n\n    const onOkClicked = useCallback(() => {\n        if (needsToAcceptFetchAllData) {\n            setFetchLargeDataAccepted(true);\n        } else {\n            doDownload(dataRef.current, additionalDataRef.current, schema, schemaResolver, path, exportConfig);\n            handleClose();\n        }\n    }, [needsToAcceptFetchAllData, doDownload, schema, schemaResolver, path, exportConfig, handleClose]);\n\n    return <>\n\n        <Tooltip title={\"Export\"}>\n            <IconButton color={\"primary\"} onClick={handleClickOpen}\n                        size=\"large\">\n                <Upload/>\n            </IconButton>\n        </Tooltip>\n\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <DialogTitle>Export data</DialogTitle>\n\n            <DialogContent>\n                <DialogContentText>\n\n                    <div>Download the the content of this table as a CSV\n                    </div>\n                    <br/>\n\n                    {needsToAcceptFetchAllData &&\n                    <Alert elevation={1}\n                              variant=\"filled\"\n                              severity={\"warning\"}>\n                        <div>\n                            This collections has a large number\n                            of documents (more than {INITIAL_DOCUMENTS_LIMIT}).\n                        </div>\n                        <div>\n                            Would you like to proceed?\n                        </div>\n\n                    </Alert>}\n\n                </DialogContentText>\n            </DialogContent>\n\n            <DialogActions>\n\n                {dataLoading && <CircularProgress size={16} thickness={8}/>}\n\n                <Button color=\"primary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n\n                <Button color=\"primary\"\n                        disabled={dataLoading}\n                        onClick={onOkClicked}>\n                    Download\n                </Button>\n\n            </DialogActions>\n\n        </Dialog>\n\n    </>;\n}\n\n","import {\n    AuthController,\n    Entity,\n    FireCMSContext,\n    Permissions,\n    PermissionsBuilder\n} from \"../../models\";\n\nconst DEFAULT_PERMISSIONS = {\n    edit: true,\n    create: true,\n    delete: true\n};\n\nfunction checkHasPermissionOnEntity<M extends { [Key: string]: any }, UserType>\n(permission: PermissionsBuilder<M, UserType> | Permissions | undefined,\n entity: Entity<M> | null,\n authController: AuthController<UserType>,\n path: string,\n context: FireCMSContext<UserType>): Permissions {\n\n    if (permission === undefined) {\n        return DEFAULT_PERMISSIONS;\n    } else if (typeof permission === \"object\") {\n        return permission as Permissions;\n    } else if (typeof permission === \"function\") {\n        return permission({\n            user: authController.user,\n            authController,\n            entity,\n            path,\n            context\n        });\n    }\n\n    throw Error(\"New type of HasPermission added and not mapped\");\n}\n\nexport function canEdit<M extends { [Key: string]: any }, UserType>\n(permission: PermissionsBuilder<M, UserType> | Permissions | undefined,\n entity: Entity<M>,\n authController: AuthController<UserType>,\n path: string,\n context: FireCMSContext<UserType>): boolean {\n    return checkHasPermissionOnEntity(permission, entity, authController, path, context).edit ?? DEFAULT_PERMISSIONS.edit;\n}\n\nexport function canCreate<M extends { [Key: string]: any }, UserType>\n(permission: PermissionsBuilder<M, UserType> | Permissions | undefined,\n authController: AuthController<UserType>,\n path: string,\n context: FireCMSContext<UserType>): boolean {\n    return checkHasPermissionOnEntity(permission, null, authController, path, context).create ?? DEFAULT_PERMISSIONS.create;\n}\n\nexport function canDelete<M extends { [Key: string]: any }, UserType>\n(permission: PermissionsBuilder<M, UserType> | Permissions | undefined,\n entity: Entity<M>,\n authController: AuthController<UserType>,\n path: string,\n context: FireCMSContext<UserType>): boolean {\n    return checkHasPermissionOnEntity(permission, entity, authController, path, context).delete ?? DEFAULT_PERMISSIONS.delete;\n}\n\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n    Box,\n    Button,\n    IconButton,\n    Popover,\n    Tooltip,\n    Typography,\n    useMediaQuery,\n    useTheme\n} from \"@mui/material\";\nimport { Add, Delete } from \"@mui/icons-material\";\n\nimport {\n    AnyProperty,\n    CollectionSize,\n    Entity,\n    EntityCollection,\n    PartialEntityCollection,\n    SelectionController\n} from \"../../models\";\nimport { CollectionTable, OnColumnResizeParams } from \"./CollectionTable\";\n\nimport { CollectionRowActions } from \"./CollectionTable/internal/CollectionRowActions\";\nimport { DeleteEntityDialog } from \"./CollectionTable/internal/DeleteEntityDialog\";\nimport { ExportButton } from \"./CollectionTable/internal/ExportButton\";\n\nimport { canCreate, canDelete, canEdit } from \"../util/permissions\";\nimport { Markdown } from \"../../preview\";\nimport {\n    useAuthController, useCollectionFetch,\n    useFireCMSContext,\n    useNavigation,\n    useSideEntityController\n} from \"../../hooks\";\n\n/**\n * @category Components\n */\nexport interface EntityCollectionViewProps<M extends { [Key: string]: any }> {\n\n    /**\n     * Absolute path this collection view points to\n     */\n    path: string;\n\n    /**\n     * Entity collection props\n     */\n    collection: EntityCollection<M>;\n\n}\n\n\nexport function useSelectionController<M = any>(collection?: any): SelectionController {\n\n    const [selectedEntities, setSelectedEntities] = useState<Entity<M>[]>([]);\n    let collectionData = useCollectionFetch({\n        path: collection.path,\n        schemaResolver: collection.schemaResolver\n    })\n\n    collectionData = useCollectionFetch({\n        path: collection.path,\n        schemaResolver: collection.schemaResolver\n    })\n\n    const toggleEntitySelection = useCallback((entity: Entity<M>) => {\n        let newValue;\n        if (selectedEntities.map(e => e.id).includes(entity.id)) {\n            newValue = selectedEntities.filter((item: Entity<M>) => item.id !== entity.id);\n        } else {\n            newValue = [...selectedEntities, entity];\n        }\n        setSelectedEntities(newValue);\n    }, [selectedEntities]);\n\n    const selectAll = useCallback((d: any) => {\n        if ((selectedEntities.length === collectionData.data.length) && selectedEntities.length !== 0) {\n            setSelectedEntities([]);\n        } else {\n            if (collectionData.data) {\n                const new1: any = collectionData.data\n                setSelectedEntities(new1);\n            }\n        }\n    }, [selectedEntities]);\n\n    const isEntitySelected = useCallback((entity: Entity<M>) => selectedEntities.map(e => e.id).includes(entity.id), [selectedEntities]);\n    const isAllEntitiesSelected = useCallback(() => (selectedEntities.length === collectionData.data.length) && selectedEntities.length !== 0, [selectedEntities, collectionData]);\n\n    return {\n        selectedEntities,\n        setSelectedEntities,\n        isEntitySelected,\n        isAllEntitiesSelected,\n        toggleEntitySelection,\n        selectAll\n    };\n}\n\n/**\n * This component is in charge of binding a datasource path with an {@link EntityCollection}\n * where it's configuration is defined. It includes an infinite scrolling table,\n * 'Add' new entities button,\n *\n * This component is the default one used for displaying entity collections\n * and is in charge of generating all the specific actions and customization\n * of the lower level {@link CollectionTable}\n *\n * Please **note** that you only need to use this component if you are building\n * a custom view. If you just need to create a default view you can do it\n * exclusively with config options.\n *\n * If you need a lower level implementation with more granular options, you\n * can use {@link CollectionTable}.\n *\n * If you need a table that is not bound to the datasource or entities and\n * properties at all, you can check {@link Table}\n *\n * @param path\n * @param collection\n * @constructor\n * @category Components\n */\nexport function EntityCollectionView<M extends { [Key: string]: any }>({\n                                                                           path,\n                                                                           collection: baseCollection\n                                                                       }: EntityCollectionViewProps<M>\n) {\n\n    const sideEntityController = useSideEntityController();\n    const context = useFireCMSContext();\n    const authController = useAuthController();\n    const navigationContext = useNavigation();\n\n    const theme = useTheme();\n    const largeLayout = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    const [deleteEntityClicked, setDeleteEntityClicked] = React.useState<Entity<M> | Entity<M>[] | undefined>(undefined);\n    const collectionResolver = navigationContext.getCollectionResolver<M>(path);\n    if (!collectionResolver) {\n        throw Error(`Couldn't find the corresponding collection view for the path: ${path}`);\n    }\n\n    const onCollectionModifiedForUser = useCallback((partialCollection: PartialEntityCollection<any>) => {\n        navigationContext.onCollectionModifiedForUser(path, partialCollection);\n    }, [path]);\n\n    const collection: EntityCollection<M> = collectionResolver ?? baseCollection;\n\n    const { schemaResolver } = collectionResolver;\n\n    const exportable = collection.exportable === undefined || collection.exportable;\n\n    const selectionEnabled = collection.selectionEnabled === undefined || collection.selectionEnabled;\n    const hoverRow = collection.inlineEditing !== undefined && !collection.inlineEditing;\n\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    const selectionController = useSelectionController<M>(collection);\n    const usedSelectionController = collection.selectionController ?? selectionController;\n    const {\n        selectedEntities,\n        toggleEntitySelection,\n        selectAll,\n        isAllEntitiesSelected,\n        isEntitySelected,\n        setSelectedEntities,\n        collectionData\n    } = usedSelectionController;\n\n    useEffect(() => {\n        setDeleteEntityClicked(undefined);\n    }, [selectedEntities]);\n\n    const onEntityClick = useCallback((entity: Entity<M>) => {\n        return sideEntityController.open({\n            entityId: entity.id,\n            path,\n            permissions: collection.permissions,\n            schema: collection.schema,\n            subcollections: collection.subcollections,\n            callbacks: collection.callbacks,\n            overrideSchemaRegistry: false\n        });\n    }, [path, collection, sideEntityController]);\n\n    const onNewClick = useCallback((e: React.MouseEvent) => {\n        e.stopPropagation();\n        return sideEntityController.open({\n            path,\n            permissions: collection.permissions,\n            schema: collection.schema,\n            subcollections: collection.subcollections,\n            callbacks: collection.callbacks,\n            overrideSchemaRegistry: false\n        });\n    }, [path, collection, sideEntityController]);\n\n    const internalOnEntityDelete = useCallback((_path: string, entity: Entity<M>) => {\n        setSelectedEntities(selectedEntities.filter((e) => e.id !== entity.id));\n    }, [selectedEntities, setSelectedEntities]);\n\n    const internalOnMultipleEntitiesDelete = useCallback((_path: string, entities: Entity<M>[]) => {\n        setSelectedEntities([]);\n        setDeleteEntityClicked(undefined);\n    }, [setSelectedEntities]);\n\n    const checkInlineEditing = useCallback((entity: Entity<any>) => {\n        if (!canEdit(collection.permissions, entity, authController, path, context)) {\n            return false;\n        }\n        return collection.inlineEditing === undefined || collection.inlineEditing;\n    }, [collection.inlineEditing, collection.permissions, path]);\n\n    const onColumnResize = useCallback(({\n                                            width,\n                                            key\n                                        }: OnColumnResizeParams) => {\n        // Only for property columns\n        if (!collection.schema.properties[key]) return;\n        const property: Partial<AnyProperty> = { columnWidth: width };\n        const updatedFields: PartialEntityCollection<any> = { schema: { properties: { [key as keyof M]: property } } };\n        if (onCollectionModifiedForUser)\n            onCollectionModifiedForUser(updatedFields)\n    }, [collection.schema.properties, onCollectionModifiedForUser]);\n\n    const onSizeChanged = useCallback((size: CollectionSize) => {\n        if (onCollectionModifiedForUser)\n            onCollectionModifiedForUser({ defaultSize: \"xs\" })\n    }, [onCollectionModifiedForUser]);\n\n    const open = anchorEl != null;\n    const title = useMemo(() => (\n        <div style={{\n            padding: \"4px\"\n        }}>\n\n            <Typography\n                variant=\"h6\"\n                style={{\n                    lineHeight: \"1.0\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    maxWidth: \"160px\",\n                    cursor: collection.description ? \"pointer\" : \"inherit\"\n                }}\n                onClick={collection.description\n                    ? (e) => {\n                        setAnchorEl(e.currentTarget);\n                        e.stopPropagation();\n                    }\n                    : undefined}\n            >\n                {`${collection.name}`}\n            </Typography>\n            <Typography\n                style={{\n                    display: \"block\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    maxWidth: \"160px\",\n                    direction: \"rtl\",\n                    textAlign: \"left\"\n                }}\n                variant={\"caption\"}\n                color={\"textSecondary\"}>\n                {`/${path}`}\n            </Typography>\n\n            {collection.description &&\n                <Popover\n                    id={\"info-dialog\"}\n                    open={open}\n                    anchorEl={anchorEl}\n                    elevation={1}\n                    onClose={() => {\n                        setAnchorEl(null);\n                    }}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    }}\n                >\n\n                    <Box m={2}>\n                        <Markdown source={collection.description}/>\n                    </Box>\n\n                </Popover>\n            }\n\n        </div>\n    ), [collection.description, collection.name, path, open, anchorEl]);\n\n    const tableRowActionsBuilder = useCallback(({\n                                                    entity,\n                                                    size\n                                                }: { entity: Entity<any>, size: CollectionSize }) => {\n\n        const isSelected = isEntitySelected(entity);\n        const isAllSelected: any = isAllEntitiesSelected();\n\n\n        const createEnabled = canCreate(collection.permissions, authController, path, context);\n        const editEnabled = canEdit(collection.permissions, entity, authController, path, context);\n        const deleteEnabled = canDelete(collection.permissions, entity, authController, path, context);\n\n        const onCopyClicked = (clickedEntity: Entity<M>) => sideEntityController.open({\n            entityId: clickedEntity.id,\n            path,\n            copy: true,\n            permissions: {\n                edit: editEnabled,\n                create: createEnabled,\n                delete: deleteEnabled\n            },\n            schema: collection.schema,\n            subcollections: collection.subcollections,\n            callbacks: collection.callbacks,\n            overrideSchemaRegistry: false\n        });\n\n        const onEditClicked = (clickedEntity: Entity<M>) => sideEntityController.open({\n            entityId: clickedEntity.id,\n            path,\n            permissions: {\n                edit: editEnabled,\n                create: createEnabled,\n                delete: deleteEnabled\n            },\n            schema: collection.schema,\n            subcollections: collection.subcollections,\n            callbacks: collection.callbacks,\n            overrideSchemaRegistry: false\n        });\n\n        return (\n            <CollectionRowActions\n                entity={entity}\n                isSelected={isSelected}\n                isAllSelected={isAllSelected}\n                selectionEnabled={selectionEnabled}\n                size={size}\n                toggleEntitySelection={toggleEntitySelection}\n                selectAll={selectAll}\n                onEditClicked={onEditClicked}\n                onCopyClicked={createEnabled ? onCopyClicked : undefined}\n                onDeleteClicked={deleteEnabled ? setDeleteEntityClicked : undefined}\n            />\n        );\n\n    }, [usedSelectionController, sideEntityController, collection.permissions, authController, path]);\n\n    const toolbarActionsBuilder = useCallback((_: { size: CollectionSize, data: Entity<any>[] }) => {\n\n        const addButton = canCreate(collection.permissions, authController, path, context) && onNewClick && (largeLayout\n            ? <Button\n                onClick={onNewClick}\n                startIcon={<Add/>}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\">\n                Add {collection.schema.name}\n            </Button>\n            : <Button\n                onClick={onNewClick}\n                size=\"medium\"\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                <Add/>\n            </Button>);\n\n        const multipleDeleteEnabled = selectedEntities.every((entity) => canDelete(collection.permissions, entity, authController, path, context));\n        const onMultipleDeleteClick = (event: React.MouseEvent) => {\n            event.stopPropagation();\n            setDeleteEntityClicked(selectedEntities);\n        };\n\n\n        const extraActions = collection.extraActions\n            ? collection.extraActions({\n                path,\n                collection,\n                selectionController: usedSelectionController,\n                context\n            })\n            : undefined;\n\n        const exportButton = exportable &&\n            <ExportButton schema={collection.schema}\n                          schemaResolver={schemaResolver}\n                          exportConfig={typeof collection.exportable === \"object\" ? collection.exportable : undefined}\n                          path={path}/>;\n\n        return (\n            <>\n                {extraActions}\n                {exportButton}\n                {addButton}\n            </>\n        );\n    }, [usedSelectionController, path, collection, largeLayout]);\n\n    return (\n        <>\n\n            <CollectionTable\n                key={`collection_table_${path}`}\n                title={title}\n                path={path}\n                collection={collection}\n                schemaResolver={schemaResolver}\n                onSizeChanged={onSizeChanged}\n                inlineEditing={checkInlineEditing}\n                onEntityClick={onEntityClick}\n                onColumnResize={onColumnResize}\n                tableRowActionsBuilder={tableRowActionsBuilder}\n                toolbarActionsBuilder={toolbarActionsBuilder}\n                hoverRow={hoverRow}\n            />\n\n            {deleteEntityClicked && <DeleteEntityDialog entityOrEntitiesToDelete={deleteEntityClicked}\n                                                        path={path}\n                                                        schema={collection.schema}\n                                                        schemaResolver={schemaResolver}\n                                                        callbacks={collection.callbacks}\n                                                        open={!!deleteEntityClicked}\n                                                        onEntityDelete={internalOnEntityDelete}\n                                                        onMultipleEntitiesDelete={internalOnMultipleEntitiesDelete}\n                                                        onClose={() => setDeleteEntityClicked(undefined)}/>}\n        </>\n    );\n}\n\nexport default EntityCollectionView;\n\n","import { Box, CircularProgress, CircularProgressProps } from \"@mui/material\";\nimport React from \"react\";\n\n/**\n *\n * @param props\n * @constructor\n * @ignore\n */\nexport function CircularProgressCenter(props: CircularProgressProps) {\n    return (\n        <Box\n            display=\"flex\"\n            width={\"100%\"}\n            maxHeight={\"100%\"}\n            height={\"100vh\"}>\n            <Box m=\"auto\">\n                <CircularProgress {...props}/>\n            </Box>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport {\n    Box,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    Container,\n    Divider,\n    Grid,\n    Paper,\n    Theme,\n    Typography\n} from \"@mui/material\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\nimport { Link as ReactLink } from \"react-router-dom\";\n\nimport {\n    computeTopNavigation,\n    TopNavigationEntry\n} from \"../util/navigation_utils\";\nimport { Markdown } from \"../../preview\";\nimport { useNavigation } from \"../../hooks\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            minHeight: 248\n        },\n        flexGrow: {\n            flexGrow: 1\n        }\n    })\n);\n\n/**\n * Default entry view for the CMS under the path \"/\"\n * This components takes navigation as an input and renders cards\n * for each entry, including title and description.\n * @constructor\n * @category Components\n */\nexport function FireCMSHomePage() {\n\n    const classes = useStyles();\n    const navigationContext = useNavigation();\n    if (!navigationContext.navigation)\n        return <></>;\n\n    const {\n        navigationEntries,\n        groups\n    } = computeTopNavigation(navigationContext, false);\n\n    const allGroups: Array<string | null> = [...groups];\n    if (navigationEntries.filter(e => !e.group).length > 0) {\n        allGroups.push(null);\n    }\n\n    function buildNavigationCard(entry: TopNavigationEntry) {\n        return (\n            <Grid item xs={12}\n                  sm={6}\n                  md={4}\n                  key={`nav_${entry.group}_${entry.name}`}>\n                <Paper variant={\"outlined\"}>\n\n                    <CardActionArea\n                        className={classes.card}\n                        component={ReactLink}\n                        to={entry.url}>\n                        <CardContent\n                            className={classes.flexGrow}>\n\n                            <PlaylistPlayIcon color={\"disabled\"}/>\n                            <Typography gutterBottom variant=\"h5\"\n                                        component=\"h2\">\n                                {entry.name}\n                            </Typography>\n\n                            {entry.description && <Typography variant=\"body2\"\n                                                              color=\"textSecondary\"\n                                                              component=\"div\">\n                                <Markdown source={entry.description}/>\n                            </Typography>}\n                        </CardContent>\n\n                        <CardActions style={{ alignSelf: \"flex-end\" }}>\n                            <Box p={1}>\n                                <ArrowForwardIcon color=\"primary\"/>\n                            </Box>\n                        </CardActions>\n\n                    </CardActionArea>\n                </Paper>\n            </Grid>\n        );\n    }\n\n    return (\n        <Container>\n            {allGroups.map((group, index) => (\n                <Box mt={6} mb={6} key={`group_${index}`}>\n                    {allGroups.length > 0 && <>\n                        <Typography color={\"textSecondary\"}\n                                    className={\"weight-500\"}>\n                            {group?.toUpperCase() ?? \"Collections\".toUpperCase()}\n                        </Typography>\n                        <Divider/>\n                    </>}\n\n                    <Box mt={2}>\n                        <Grid container spacing={2}>\n                            {group && navigationEntries\n                                .filter((entry) => entry.group === group)\n                                .map((entry) => buildNavigationCard(entry))\n                            }\n                            {!group && navigationEntries\n                                .filter((entry) => !entry.group)\n                                .map((entry) => buildNavigationCard(entry))\n                            }\n                        </Grid>\n                    </Box>\n                </Box>\n            ))}\n        </Container>\n    );\n}\n\n","import React from \"react\";\nimport { alpha, Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { TableSize } from \"./TableProps\";\nimport { css } from \"@emotion/react\";\n\nexport const baseTableCss = css`\n  & .BaseTable {\n    box-shadow: 0 2px 4px 0 rgba(128, 128, 128, 0.2);\n    contain: strict;\n    position: relative;\n    box-sizing: border-box;\n    font-size: 13px;\n  }\n\n  & .BaseTable--disabled {\n    opacity: 0.7;\n    pointer-events: none;\n  }\n\n  & .BaseTable--dynamic .BaseTable__row {\n    overflow: hidden;\n    align-items: stretch;\n  }\n\n  & .BaseTable:not(.BaseTable--dynamic) .BaseTable__row-cell-text,\n  & .BaseTable .BaseTable__row--frozen .BaseTable__row-cell-text {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  & .BaseTable__table {\n    position: absolute;\n    top: 0;\n    display: flex;\n    flex-direction: column-reverse;\n  }\n\n  & .BaseTable__table-main {\n    outline: 1px solid rgba(128, 128, 128, 0.1);\n    left: 0;\n  }\n\n  & .BaseTable__table-main .BaseTable__header-cell:first-of-type, .BaseTable__table-main .BaseTable__row-cell:first-of-type {\n    padding: 0;\n  }\n\n  & .BaseTable__table-frozen-left .BaseTable__body {\n    backdrop-filter: blur(4px);\n  }\n\n  & .BaseTable__table-frozen-left .BaseTable__header,\n  & .BaseTable__table-frozen-left .BaseTable__body, .BaseTable__table-frozen-right .BaseTable__header,\n  & .BaseTable__table-frozen-right .BaseTable__body {\n    overflow: hidden !important;\n  }\n\n  & .BaseTable__table-frozen-left {\n    box-shadow: 2px 0 4px 0 rgba(128, 128, 128, 0.1);\n    top: 0;\n    left: 0;\n  }\n\n  & .BaseTable__table-frozen-left .BaseTable__header-cell:first-of-type, .BaseTable__table-frozen-left .BaseTable__row-cell:first-of-type {\n    padding: 0;\n  }\n\n  & .BaseTable__table-frozen-left .BaseTable__header-row,\n  & .BaseTable__table-frozen-left .BaseTable__row {\n    padding-right: 0 !important;\n  }\n\n  & .BaseTable__table-frozen-left .BaseTable__body {\n    overflow-y: auto !important;\n  }\n\n  & .BaseTable__table-frozen-right {\n    box-shadow: -2px 0 4px 0 rgba(128, 128, 128, 0.3);\n    top: 0;\n    right: 0;\n  }\n\n  & .BaseTable__table-frozen-right .BaseTable__header-cell:last-child, .BaseTable__table-frozen-right .BaseTable__row-cell:last-child {\n    padding-right: 15px;\n  }\n\n  & .BaseTable__table-frozen-right .BaseTable__header-row,\n  & .BaseTable__table-frozen-right .BaseTable__row {\n    padding-left: 0 !important;\n  }\n\n  & .BaseTable__table-frozen-right .BaseTable__body {\n    overflow-y: auto !important;\n  }\n\n  & .BaseTable__header {\n    overflow: hidden !important;\n  }\n\n  & .BaseTable .BaseTable__header,\n  & .BaseTable .BaseTable__body {\n    outline: none;\n  }\n\n  & .BaseTable__header-row, .BaseTable__row {\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgba(128, 128, 128, 0.1);\n    box-sizing: border-box;\n  }\n\n  & .BaseTable__header-row {\n    /*background-color: #f8f8f8;*/\n    font-weight: 700;\n  }\n\n  & .BaseTable__row {\n    /*background-color: #ffffff;*/\n  }\n\n  & .BaseTable__row:hover, .BaseTable__row--hovered {\n    /*background-color: rgba(128, 128, 128, 0.02);*/\n  }\n\n  & .BaseTable__row-expanded {\n    /*border-bottom: 1px solid #eeeeee;*/\n  }\n\n  & .BaseTable__header-cell, .BaseTable__row-cell {\n    min-width: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 7.5px;\n    box-sizing: border-box;\n  }\n\n  & .BaseTable__header-cell--align-center, .BaseTable__row-cell--align-center {\n    justify-content: center;\n    text-align: center;\n  }\n\n  & .BaseTable__header-cell--align-right, .BaseTable__row-cell--align-right {\n    justify-content: flex-end;\n    text-align: right;\n  }\n\n  & .BaseTable__header-cell {\n    position: relative;\n    cursor: default;\n  }\n\n  & .BaseTable__header-cell:hover .BaseTable__column-resizer {\n    visibility: visible;\n    opacity: 0.5;\n  }\n\n  & .BaseTable__header-cell:hover .BaseTable__column-resizer:hover {\n    opacity: 1;\n  }\n\n  & .BaseTable__header-cell .BaseTable__sort-indicator {\n    display: none;\n  }\n\n  & .BaseTable__header-cell--sortable:hover {\n    background-color: #f3f3f3;\n    cursor: pointer;\n  }\n\n  & .BaseTable__header-cell--sortable:not(.BaseTable__header-cell--sorting):hover .BaseTable__sort-indicator {\n    display: block;\n    color: #888888;\n  }\n\n  & .BaseTable__header-cell--sorting .BaseTable__sort-indicator, .BaseTable__header-cell--sorting:hover .BaseTable__sort-indicator {\n    display: block;\n  }\n\n  & .BaseTable__header-cell--resizing .BaseTable__column-resizer {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  & .BaseTable__header-cell--resizing .BaseTable__column-resizer::after {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    content: '';\n    left: -9999px;\n  }\n\n  & .BaseTable__header-cell-text {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n\n  & .BaseTable__header-row--resizing .BaseTable__header-cell {\n    background-color: transparent;\n    cursor: col-resize;\n  }\n\n  & .BaseTable__header-row--resizing .BaseTable__header-cell:not(.BaseTable__header-cell--sorting) .BaseTable__sort-indicator {\n    display: none;\n  }\n\n  & .BaseTable__header-row--resizing .BaseTable__header-cell:not(.BaseTable__header-cell--resizing) .BaseTable__column-resizer {\n    visibility: hidden;\n  }\n\n  & .BaseTable__column-resizer {\n    width: 3px;\n    visibility: hidden;\n    background-color: #cccccc;\n  }\n\n  & .BaseTable__column-resizer:hover {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  & .BaseTable__footer {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n    background-color: #ffffff;\n  }\n\n  & .BaseTable__resizing-line {\n    cursor: col-resize;\n    position: absolute;\n    top: 0;\n    background-color: #cccccc;\n    width: 3px;\n    transform: translateX(-100%);\n  }\n\n  & .BaseTable__empty-layer {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n  }\n\n  & .BaseTable__overlay {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    pointer-events: none;\n  }\n\n  & .BaseTable__overlay > * {\n    pointer-events: auto;\n  }\n`;\n\n\n\nexport interface CellStyleProps {\n    size: TableSize;\n    align: \"right\" | \"left\" | \"center\";\n}\n\n\n","import {\n    Box,\n    FormControl,\n    IconButton,\n    MenuItem,\n    OutlinedInput,\n    Select as MuiSelect\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport React, { useState } from \"react\";\nimport Tooltip from \"@mui/material/Tooltip/Tooltip\";\nimport { EnumValuesChip } from \"../../../../preview/components/CustomChip\";\nimport { TableEnumValues, TableWhereFilterOp } from \"../TableProps\";\n\ninterface StringNumberFilterFieldProps {\n    name: string,\n    dataType: \"string\" | \"number\";\n    value?: [op: TableWhereFilterOp, fieldValue: any];\n    setValue: (value?: [op: TableWhereFilterOp, newValue: any]) => void;\n    isArray?: boolean;\n    enumValues?: TableEnumValues;\n    title?: string;\n}\n\nconst operationLabels = {\n    \"==\": \"==\",\n    \"!=\": \"!=\",\n    \">\": \">\",\n    \"<\": \"<\",\n    \">=\": \">=\",\n    \"<=\": \"<=\",\n    in: \"in\",\n    \"array-contains\": \"Contains\",\n    \"array-contains-any\": \"Any\"\n};\n\nconst multipleSelectOperations = [\"array-contains-any\", \"in\"];\n\nexport function StringNumberFilterField({\n                                            name,\n                                            value,\n                                            setValue,\n                                            dataType,\n                                            isArray,\n                                            enumValues,\n                                            title\n                                        }: StringNumberFilterFieldProps) {\n\n    const possibleOperations: (keyof typeof operationLabels) [] = isArray\n        ? [\"array-contains\"]\n        : [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"];\n\n    if (enumValues)\n        isArray\n            ? possibleOperations.push(\"array-contains-any\")\n            : possibleOperations.push(\"in\");\n\n    const [fieldOperation, fieldValue] = value || [possibleOperations[0], undefined];\n    const [operation, setOperation] = useState<TableWhereFilterOp>(fieldOperation);\n    const [internalValue, setInternalValue] = useState<string | number | string[] | number[] | undefined>(fieldValue);\n\n    function updateFilter(op: TableWhereFilterOp, val: string | number | string[] | number[] | undefined) {\n        let newValue = val;\n        const prevOpIsArray = multipleSelectOperations.includes(operation);\n        const newOpIsArray = multipleSelectOperations.includes(op);\n        if (prevOpIsArray !== newOpIsArray) {\n            // @ts-ignore\n            newValue = newOpIsArray ? (typeof val === \"string\" || typeof val === \"number\" ? [val] : []) : \"\";\n        }\n\n        if (typeof newValue === \"number\" && isNaN(newValue))\n            newValue = undefined;\n\n        setOperation(op);\n        setInternalValue(newValue);\n\n        const hasNewValue = newValue !== null && Array.isArray(newValue)\n            ? newValue.length > 0\n            : newValue !== undefined;\n        if (op && hasNewValue) {\n            setValue(\n                [op, newValue]\n            );\n        } else {\n            setValue(\n                undefined\n            );\n        }\n    }\n\n    const multiple = multipleSelectOperations.includes(operation);\n    return (\n\n        <Box display={\"flex\"} width={340} alignItems={\"center\"}>\n            <Box width={80}>\n                <FormControl fullWidth>\n                    <MuiSelect value={operation}\n                               fullWidth\n                               onChange={(evt: any) => {\n                                   updateFilter(evt.target.value, internalValue);\n                               }}>\n                        {possibleOperations.map((op) =>\n                            <MenuItem\n                                key={`filter_op_${name}_${op}`}\n                                value={op}>{operationLabels[op]}</MenuItem>\n                        )}\n\n                    </MuiSelect>\n                </FormControl>\n            </Box>\n\n            <Box flexGrow={1} ml={1}>\n\n                <FormControl fullWidth>\n                    {!enumValues && <OutlinedInput\n                        fullWidth\n                        key={`filter_${name}`}\n                        type={dataType === \"number\" ? \"number\" : undefined}\n                        value={internalValue !== undefined ? internalValue : \"\"}\n                        onChange={(evt) => {\n                            const val = dataType === \"number\"\n                                ? parseFloat(evt.target.value)\n                                : evt.target.value;\n                            updateFilter(operation, val);\n                        }}\n                    />}\n\n                    {enumValues &&\n                    <MuiSelect\n                        fullWidth\n                        key={`filter-select-${multiple}-${name}`}\n                        multiple={multiple}\n                        value={internalValue !== undefined ? internalValue : isArray ? [] : \"\"}\n                        onChange={(evt: any) => updateFilter(operation, dataType === \"number\" ? parseInt(evt.target.value) : evt.target.value)}\n                        renderValue={multiple\n? (selected: any) =>\n                            (\n                                <div>\n                                    {selected.map((enumKey: any) => {\n                                        return <EnumValuesChip\n                                            key={`select_value_${name}_${enumKey}`}\n                                            enumKey={enumKey}\n                                            enumValues={enumValues}\n                                            small={true}/>;\n                                    })}\n                                </div>\n                            )\n: undefined}>\n                        {Object.entries(enumValues).map(([enumKey, labelOrConfig]) => {\n                            return (\n                                <MenuItem\n                                    key={`select_${name}_${enumKey}`}\n                                    value={enumKey}>\n                                    <EnumValuesChip\n                                        enumKey={enumKey}\n                                        enumValues={enumValues}\n                                        small={true}/>\n                                </MenuItem>\n                            );\n                        })}\n                    </MuiSelect>}\n                </FormControl>\n            </Box>\n\n            {internalValue !== undefined && <Box ml={1}>\n                <IconButton\n                    onClick={(e) => updateFilter(operation, undefined)}\n                    size={\"small\"}>\n                    <Tooltip title={`Clear ${title}`}>\n                        <ClearIcon fontSize={\"small\"}/>\n                    </Tooltip>\n                </IconButton>\n            </Box>}\n\n        </Box>\n    );\n\n}\n","import React from \"react\";\nimport { Checkbox, FormControlLabel, Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { TableWhereFilterOp } from \"../TableProps\";\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            width: \"200px\"\n        },\n        label: {\n            width: \"100%\",\n            height: \"100%\"\n        }\n    })\n);\n\ninterface BooleanFieldProps {\n    name: string,\n    value?: [op: TableWhereFilterOp, fieldValue: any];\n    setValue: (value?: [op: TableWhereFilterOp, newValue: any]) => void;\n    title?: string;\n}\n\nexport function BooleanFilterField({\n                                       name,\n                                       title,\n                                       value,\n                                       setValue\n                                   }: BooleanFieldProps) {\n    const classes = useStyles();\n\n    function updateFilter(val?: boolean) {\n        if (val !== undefined) {\n            setValue(\n                [\"==\", val]\n            );\n        } else {\n            setValue(\n                undefined\n            );\n        }\n    }\n\n    const valueSetToTrue = value && value[1];\n    const valueSet = !!value;\n\n    return (\n        <FormControlLabel\n            className={classes.formControl}\n            labelPlacement={\"end\"}\n            checked={valueSet && valueSetToTrue}\n            control={\n                <Checkbox\n                    key={`filter-${name}`}\n                    indeterminate={!valueSet}\n                    onChange={(evt) => {\n                        if (valueSetToTrue) { updateFilter(false); } else if (!valueSet) { updateFilter(true); } else { updateFilter(undefined); }\n                    }}\n                />\n            }\n            label={!valueSet ? \"No filter\" : (valueSetToTrue ? `${title} is true` : `${title} is false`)}\n        />\n    );\n}\n","import React, { useState } from \"react\";\nimport {\n    Box,\n    FormControl,\n    IconButton,\n    Input,\n    MenuItem,\n    Select as MuiSelect\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport Tooltip from \"@mui/material/Tooltip/Tooltip\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport { TableWhereFilterOp } from \"../TableProps\";\n\ninterface DateTimeFilterFieldProps {\n    name: string,\n    value?: [op: TableWhereFilterOp, fieldValue: any];\n    setValue: (value?: [op: TableWhereFilterOp, newValue: any]) => void;\n    isArray?: boolean;\n    title?: string;\n}\n\n\nconst operationLabels = {\n    \"==\": \"==\",\n    \"!=\": \"!=\",\n    \">\": \">\",\n    \"<\": \"<\",\n    \">=\": \">=\",\n    \"<=\": \"<=\",\n    in: \"in\",\n    \"array-contains\": \"Contains\",\n    \"array-contains-any\": \"Any\"\n};\n\nconst multipleSelectOperations = [\"array-contains-any\", \"in\"];\n\n\nexport function DateTimeFilterField({\n                                        name,\n                                        isArray,\n                                        value,\n                                        setValue,\n                                        title\n                                    }: DateTimeFilterFieldProps) {\n\n    const possibleOperations: (keyof typeof operationLabels) [] = isArray\n        ? [\"array-contains\"]\n        : [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"];\n\n    const [fieldOperation, fieldValue] = value || [possibleOperations[0], undefined];\n    const [operation, setOperation] = useState<TableWhereFilterOp>(fieldOperation);\n    const [internalValue, setInternalValue] = useState<Date | undefined>(fieldValue);\n\n    function updateFilter(op: TableWhereFilterOp, val: Date | undefined) {\n        let newValue: Date | undefined = val;\n        const prevOpIsArray = multipleSelectOperations.includes(operation);\n        const newOpIsArray = multipleSelectOperations.includes(op);\n        if (prevOpIsArray !== newOpIsArray) {\n            // @ts-ignore\n            newValue = newOpIsArray ? (val ? [val] : []) : \"\";\n        }\n\n        setOperation(op);\n        setInternalValue(newValue === null ? undefined : newValue);\n\n        const hasNewValue = newValue !== null && Array.isArray(newValue)\n            ? newValue.length > 0\n            : newValue !== undefined;\n        if (op && hasNewValue) {\n            setValue(\n                [op, newValue]\n            );\n        } else {\n            setValue(\n                undefined\n            );\n        }\n    }\n\n    return (\n\n        <Box display={\"flex\"} width={340} alignItems={\"center\"}>\n            <Box width={80}>\n                <FormControl fullWidth>\n                    <MuiSelect value={operation}\n                               fullWidth\n                               onChange={(evt: any) => {\n                                   updateFilter(evt.target.value, internalValue);\n                               }}>\n                        {possibleOperations.map((op) =>\n                            <MenuItem\n                                key={`filter_op_${name}_${op}`}\n                                value={op}>{operationLabels[op]}</MenuItem>\n                        )}\n\n                    </MuiSelect>\n                </FormControl>\n            </Box>\n\n            <Box flexGrow={1} ml={1}>\n\n                <DateTimePicker\n                    clearable\n                    InputProps={{\n                        // disableUnderline: true,\n                    }}\n                    renderInput={(props) => (\n                        <Input\n                            startAdornment={\n                                <CalendarTodayIcon fontSize={\"small\"}/>\n                            }\n                        />\n                    )}\n                    value={internalValue ?? null}\n                    onChange={(dateValue: Date | null) => {\n                        updateFilter(operation, dateValue === null ? undefined : dateValue);\n                    }}\n                />\n\n            </Box>\n\n            {internalValue !== undefined && <Box ml={1}>\n                <IconButton\n                    onClick={(e) => updateFilter(operation, undefined)}\n                    size={\"small\"}>\n                    <Tooltip title={`Clear ${title}`}>\n                        <ClearIcon fontSize={\"small\"}/>\n                    </Tooltip>\n                </IconButton>\n            </Box>}\n\n        </Box>\n    );\n\n}\n","import React, { useCallback, useRef, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport {\n    alpha,\n    Badge,\n    Box,\n    Button,\n    darken,\n    Divider,\n    Grid,\n    IconButton,\n    Popover,\n    Theme\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport ArrowDropDownCircleIcon from \"@mui/icons-material/ArrowDropDownCircle\";\n\nimport {\n    TableColumn,\n    TableColumnFilter,\n    TableSort,\n    TableWhereFilterOp\n} from \"./TableProps\";\nimport { StringNumberFilterField } from \"./filters/StringNumberFilterField\";\nimport { BooleanFilterField } from \"./filters/BooleanFilterField\";\nimport { DateTimeFilterField } from \"./filters/DateTimeFilterfield\";\nimport { ErrorBoundary } from \"../../internal/ErrorBoundary\";\n\nexport const useStyles = makeStyles<Theme, { onHover?: boolean, align?: \"right\" | \"left\" | \"center\" }>(theme => createStyles({\n    header: ({ onHover }) => ({\n        width: \"calc(100% + 24px)\",\n        margin: \"0px -12px\",\n        padding: \"0px 12px\",\n        color: onHover ? theme.palette.text.primary : theme.palette.text.secondary,\n        backgroundColor: onHover ? darken(theme.palette.background.default, 0.05) : theme.palette.background.default,\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        height: \"100%\",\n        fontSize: \"0.750rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 600\n    }),\n    headerInternal: ({ align }) => ({\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: align === \"right\" ? \"flex-end\" : (align === \"center\" ? \"center\" : \"flex-start\")\n    }),\n    headerTitle: ({ align }) => ({\n        overflow: \"hidden\",\n        flexShrink: 1\n    }),\n    headerTitleInternal: ({ align }) => ({\n        margin: \"0px 4px\",\n        overflow: \"hidden\",\n        justifyContent: align,\n        flexShrink: 1\n    }),\n    headerIcon: {\n        paddingTop: \"4px\"\n    },\n    headerIconButton: {\n        backgroundColor: theme.palette.mode === \"light\" ? \"#f5f5f5\" : theme.palette.background.default\n    },\n    headerTypography: {\n        fontSize: \"0.750rem\",\n        fontWeight: 600,\n        textTransform: \"uppercase\"\n    }\n}));\n\n\nexport const TableHeader = React.memo<TableHeaderProps<any>>(TableHeaderInternal) as React.FunctionComponent<TableHeaderProps<any>>;\n\ntype TableHeaderProps<M extends { [Key: string]: any }> = {\n    column: TableColumn<M>;\n    onColumnSort: (key: Extract<keyof M, string>) => void;\n    onFilterUpdate: (filterForProperty?: [TableWhereFilterOp, any]) => void;\n    filter?: [TableWhereFilterOp, any];\n    sort: TableSort;\n};\n\nfunction TableHeaderInternal<M extends { [Key: string]: any }>({\n                                                                   sort,\n                                                                   onColumnSort,\n                                                                   onFilterUpdate,\n                                                                   filter,\n                                                                   column\n                                                               }: TableHeaderProps<M>) {\n    const [onHover, setOnHover] = useState(false);\n    const ref = useRef<HTMLDivElement>(null);\n\n    const classes = useStyles({ onHover, align: column.align });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleSettingsClick = useCallback((event: any) => {\n        setOpen(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n        setOpen(false);\n    }, []);\n\n    const update = useCallback((filterForProperty?: [TableWhereFilterOp, any]) => {\n        onFilterUpdate(filterForProperty);\n        setOpen(false);\n    }, []);\n\n    return (\n        <ErrorBoundary>\n            <Grid\n                className={classes.header}\n                ref={ref}\n                wrap={\"nowrap\"}\n                alignItems={\"center\"}\n                onMouseEnter={() => setOnHover(true)}\n                onMouseMove={() => setOnHover(true)}\n                onMouseLeave={() => setOnHover(false)}\n                container>\n\n                <Grid item xs={true} className={classes.headerTitle}>\n                    <div className={classes.headerInternal}>\n                        <div className={classes.headerIcon}>\n                            {column.icon && column.icon(onHover || open)}\n                        </div>\n                        <div className={classes.headerTitleInternal}>\n                            {column.label}\n                        </div>\n                    </div>\n                </Grid>\n\n                {column.property && !column.property.hideFilter && column.sortable && (sort || onHover || open) &&\n                <Grid item>\n                    <Badge color=\"secondary\"\n                           variant=\"dot\"\n                           overlap=\"circular\"\n                           invisible={!sort}>\n                        <IconButton\n                            size={\"small\"}\n                            className={classes.headerIconButton}\n                            onClick={() => {\n                                onColumnSort(column.key as Extract<keyof M, string>);\n                            }}\n                        >\n                            {!sort && <ArrowUpwardIcon fontSize={\"small\"}/>}\n                            {sort === \"asc\" &&\n                            <ArrowUpwardIcon fontSize={\"small\"}/>}\n                            {sort === \"desc\" &&\n                            <ArrowDownwardIcon fontSize={\"small\"}/>}\n                        </IconButton>\n                    </Badge>\n                </Grid>\n                }\n\n                {column.property && !column.property.hideFilter && column.filter && <Grid item>\n                    <Badge color=\"secondary\"\n                           variant=\"dot\"\n                           overlap=\"circular\"\n                           invisible={!filter}>\n                        <IconButton\n                            className={classes.headerIconButton}\n                            size={\"small\"}\n                            onClick={handleSettingsClick}>\n                            <ArrowDropDownCircleIcon fontSize={\"small\"}\n                                                     color={onHover || open ? undefined : \"disabled\"}/>\n                        </IconButton>\n\n                    </Badge>\n                </Grid>}\n            </Grid>\n\n            {column.sortable && <Popover\n                id={open ? `popover_${column.key}` : undefined}\n                open={open}\n                elevation={2}\n                anchorEl={ref.current}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\"\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                }}\n            >\n                <FilterForm column={column}\n                            filter={filter}\n                            onFilterUpdate={update}/>\n            </Popover>}\n\n        </ErrorBoundary>\n    );\n}\n\ninterface FilterFormProps<M> {\n    column: TableColumn<M>;\n    onFilterUpdate: (filter?: [TableWhereFilterOp, any]) => void;\n    filter?: [TableWhereFilterOp, any];\n}\n\n\nfunction FilterForm<M>({\n                           column,\n                           onFilterUpdate,\n                           filter\n                       }: FilterFormProps<M>) {\n\n\n    const id = column.key;\n    const classes = useStyles({});\n\n    const [filterInternal, setFilterInternal] = useState<[TableWhereFilterOp, any] | undefined>(filter);\n\n    const submit = (e: any) => {\n        onFilterUpdate(filterInternal);\n    };\n\n    const reset = (e: any) => {\n        onFilterUpdate(undefined);\n    };\n\n    const filterIsSet = !!filter;\n\n    function createFilterField(id: string,\n                               filterConfig: TableColumnFilter,\n                               filterValue: [TableWhereFilterOp, any] | undefined,\n                               setFilterValue: (filterValue?: [TableWhereFilterOp, any]) => void\n    ): JSX.Element {\n\n        if (filterConfig.dataType === \"number\" || filterConfig.dataType === \"string\") {\n            const dataType = filterConfig.dataType;\n            const title = filterConfig.title;\n            const enumValues = filterConfig.enumValues;\n            return <StringNumberFilterField value={filterValue}\n                                            setValue={setFilterValue}\n                                            name={id as string}\n                                            dataType={dataType}\n                                            isArray={filterConfig.isArray}\n                                            enumValues={enumValues}\n                                            title={title}/>;\n        } else if (filterConfig.dataType === \"boolean\") {\n            const title = filterConfig.title;\n            return <BooleanFilterField value={filterValue}\n                                       setValue={setFilterValue}\n                                       name={id as string}\n                                       title={title}/>;\n        } else if (filterConfig.dataType === \"timestamp\") {\n            const title = filterConfig.title;\n            return <DateTimeFilterField value={filterValue}\n                                        setValue={setFilterValue}\n                                        name={id as string}\n                                        isArray={filterConfig.isArray}\n                                        title={title}/>;\n        }\n\n        return (\n            <div>{`Currently the field ${filterConfig.dataType} is not supported`}</div>\n        );\n    }\n\n\n    return (\n        <>\n\n            <Box p={2} className={classes.headerTypography}>\n                {column.label ?? id}\n            </Box>\n\n            <Divider/>\n\n            {column.filter && <Box p={2}>\n                {createFilterField(id, column.filter, filterInternal, setFilterInternal)}\n            </Box>}\n\n            <Box display=\"flex\"\n                 justifyContent=\"flex-end\"\n                 m={2}>\n                <Box mr={1}>\n                    <Button\n                        disabled={!filterIsSet}\n                        color=\"primary\"\n                        type=\"reset\"\n                        aria-label=\"filter clear\"\n                        onClick={reset}>Clear</Button>\n                </Box>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={submit}>Filter</Button>\n            </Box>\n        </>\n    );\n\n}\n\n","import React, {useCallback, useEffect, useRef} from \"react\";\nimport BaseTable, {Column, ColumnShape} from \"react-base-table\";\nimport Measure, {ContentRect} from \"react-measure\";\nimport {alpha, Box, Checkbox, Theme, Tooltip, Typography} from \"@mui/material\";\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\nimport clsx from \"clsx\";\n\nimport {ErrorBoundary} from \"../../internal/ErrorBoundary\";\nimport {CircularProgressCenter} from \"../CircularProgressCenter\";\nimport {baseTableCss} from \"./styles\";\nimport {TableHeader} from \"./TableHeader\";\nimport {TableColumn, TableFilterValues, TableProps, TableWhereFilterOp} from \"./TableProps\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport {getRowHeight} from \"./common\";\nimport {useSelectionController} from \"../EntityCollectionView\";\nimport {useNavigation} from \"../../../hooks\";\n\nconst PIXEL_NEXT_PAGE_OFFSET = 1200;\n\n// @types/react/index.d.ts\ndeclare module \"react\" {\n    interface Attributes {\n        css?: any;\n    }\n}\n\nexport const useTableStyles = makeStyles<Theme>(theme => createStyles({\n    tableContainer: {\n        width: \"100%\",\n        height: \"100%\",\n        flexGrow: 1\n    },\n    header: {\n        width: \"calc(100% + 24px)\",\n        margin: \"0px -12px\",\n        padding: \"0px 12px\",\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.default,\n        transition: \"color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        height: \"100%\",\n        fontSize: \"0.750rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 600\n    },\n    tableRow: {\n        cursor: \"pointer\",\n        display: \"flex\",\n        alignItems: \"center\",\n        fontSize: \"0.875rem\"\n    },\n    tableRowClickable: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.mode === \"dark\" ? alpha(theme.palette.background.default, 0.6) : alpha(theme.palette.background.default, 0.5)\n        }\n    },\n    column: {\n        padding: \"0px !important\"\n    },\n    alignText: {\n        paddingLeft: \"12px !important\",\n    }\n}));\n\n/**\n * This is a Table component that allows displaying arbitrary data, not\n * necessarily related to entities or properties. It is the component\n * that powers the entity collections but has a generic API so it\n * can be reused.\n *\n * If you have an entity collection defined, you probably want to use\n * {@link CollectionTable} or {@link EntityCollectionView}\n *\n * @see CollectionTable\n * @see EntityCollectionView\n * @category Components\n */\nexport function Table<T>({\n                             data,\n                             idColumnBuilder,\n                             onResetPagination,\n                             onEndReached,\n                             size,\n                             columns,\n                             frozenIdColumn,\n                             onRowClick,\n                             onColumnResize,\n                             filter,\n                             checkFilterCombination,\n                             collection,\n                             onFilterUpdate,\n                             sortBy,\n                             error,\n                             emptyMessage,\n                             onSortByUpdate,\n                             loading,\n                             hoverRow = true\n                         }: TableProps<T>) {\n    const sortByProperty: string | undefined = sortBy ? sortBy[0] : undefined;\n    const currentSort: \"asc\" | \"desc\" | undefined = sortBy ? sortBy[1] : undefined;\n\n    const [tableSize, setTableSize] = React.useState<ContentRect | undefined>();\n\n    const tableRef = useRef<BaseTable>(null);\n\n    // these refs are a workaround to prevent the scroll jump caused by Firestore\n    // firing listeners with incomplete data\n    const scrollRef = useRef<number>(0);\n    const endReachedTimestampRef = useRef<number>(0);\n\n    const classes = useTableStyles();\n    const getClass = (column: any) => {\n        if (!column.property) return classes.column\n\n        if (!column.property.disableCustomStyles &&\n            (column.property.dataType === \"number\" ||\n                column.property.dataType === \"string\" ||\n                column.property.dataType === \"timestamp\")\n        ) {\n            return `${classes.column} ${classes.alignText} alignText`\n        } else return classes.column\n    }\n    useEffect(() => {\n        if (tableRef.current && data?.length) {\n            tableRef.current.scrollToTop(scrollRef.current);\n        }\n    }, [data?.length]);\n\n    const onColumnSort = (key: string) => {\n\n        const isDesc = sortByProperty === key && currentSort === \"desc\";\n        const isAsc = sortByProperty === key && currentSort === \"asc\";\n        const newSort = isAsc ? \"desc\" : (isDesc ? undefined : \"asc\");\n        const newSortProperty: string | undefined = isDesc ? undefined : key;\n\n        const newSortBy: [string, \"asc\" | \"desc\"] | undefined = newSort && newSortProperty ? [newSortProperty, newSort] : undefined;\n        if (filter) {\n            if (checkFilterCombination && !checkFilterCombination(filter, newSortBy)) {\n                if (onFilterUpdate)\n                    onFilterUpdate(undefined);\n            }\n        }\n\n        if (onResetPagination) {\n            onResetPagination();\n        }\n\n        if (onSortByUpdate) {\n            onSortByUpdate(newSortBy);\n        }\n\n        scrollToTop();\n    };\n\n\n    const [isSelected, setIsSelected] = React.useState(undefined);\n\n    const selectAll = () => {\n        const checkbox = document.querySelectorAll(\".select-all\")[0].getElementsByTagName(\"input\")[0] as any;\n        if (isSelected === undefined) {\n            checkbox.click()\n            setTimeout(() => {\n                checkbox.click()\n            }, 100)\n        } else {\n            checkbox.click()\n        }\n        setIsSelected(checkbox.checked)\n    }\n\n    const resetSort = () => {\n        if (onSortByUpdate)\n            onSortByUpdate(undefined);\n    };\n\n    const scrollToTop = () => {\n        if (tableRef.current) {\n            scrollRef.current = 0;\n            tableRef.current.scrollToTop(0);\n        }\n    };\n    const onScroll = ({scrollTop, scrollUpdateWasRequested}: {\n        scrollLeft: number;\n        scrollTop: number;\n        horizontalScrollDirection: \"forward\" | \"backward\";\n        verticalScrollDirection: \"forward\" | \"backward\";\n        scrollUpdateWasRequested: boolean;\n    }) => {\n        const prudentTime = Date.now() - endReachedTimestampRef.current > 3000;\n        if (!scrollUpdateWasRequested && prudentTime) {\n            scrollRef.current = scrollTop;\n        }\n    };\n\n    const onEndReachedInternal = () => {\n        endReachedTimestampRef.current = Date.now();\n        if (onEndReached)\n            onEndReached();\n    };\n\n    const clickRow = (props: { rowData: T; rowIndex: number; rowKey: string; event: React.SyntheticEvent }) => {\n        if (!onRowClick)\n            return;\n        onRowClick(props);\n    };\n\n    const headerRenderer = ({columnIndex}: any) => {\n\n        const column = columns[columnIndex - 1];\n\n        const filterForThisProperty: [TableWhereFilterOp, any] | undefined =\n            column && filter && filter[column.key]\n                ? filter[column.key]\n                : undefined;\n\n        const onInternalFilterUpdate = (filterForProperty?: [TableWhereFilterOp, any]) => {\n\n            let newFilterValue: TableFilterValues<any> = filter ? {...filter} : {};\n\n            if (!filterForProperty) {\n                delete newFilterValue[column.key];\n            } else {\n                newFilterValue[column.key] = filterForProperty;\n            }\n\n            const newSortBy: [string, \"asc\" | \"desc\"] | undefined = sortByProperty && currentSort ? [sortByProperty, currentSort] : undefined;\n            const isNewFilterCombinationValid = !checkFilterCombination || checkFilterCombination(newFilterValue, newSortBy);\n            if (!isNewFilterCombinationValid) {\n                newFilterValue = filterForProperty ? {[column.key]: filterForProperty} as TableFilterValues<T> : {};\n            }\n\n            if (onFilterUpdate) onFilterUpdate(newFilterValue);\n\n            if (column.key !== sortByProperty) {\n                resetSort();\n            }\n        };\n\n        return (\n\n            <ErrorBoundary>\n                {columnIndex === 0\n                    ? <div className={classes.header}\n                           style={{\n                               display: \"flex\",\n                               justifyContent: \"center\",\n                               alignItems: \"center\",\n                               width: \"100%\",\n                               padding: 0\n                           }}>\n                        <p style={{\n                            margin: 0,\n                            width: \"45px\"\n                        }}>ID</p>\n\n                        <Tooltip title={\"Select All\"} className={\"select-all\"}>\n                            <Checkbox\n                                checked={isSelected}\n                                onChange={selectAll}\n                            />\n                        </Tooltip>\n                    </div>\n                    : <TableHeader\n                        onFilterUpdate={onInternalFilterUpdate}\n                        filter={filterForThisProperty}\n                        sort={sortByProperty === column.key ? currentSort : undefined}\n                        onColumnSort={onColumnSort}\n                        column={column}/>\n\n                }\n            </ErrorBoundary>\n        );\n    };\n\n\n    function buildErrorView() {\n        return (\n            <Box display=\"flex\"\n                 flexDirection={\"column\"}\n                 justifyContent=\"center\"\n                 margin={6}>\n\n                <Typography variant={\"h6\"}>\n                    {\"Error fetching data from the data source\"}\n                </Typography>\n\n                {error?.name && <Typography>\n                    {error?.name}\n                </Typography>}\n\n                {error?.message && <Typography>\n                    {error?.message}\n                </Typography>}\n\n            </Box>\n\n        );\n    }\n\n    function buildEmptyView() {\n        if (loading)\n            return <CircularProgressCenter/>;\n        return (\n            <Box display=\"flex\"\n                 flexDirection={\"column\"}\n                 alignItems=\"center\"\n                 justifyContent=\"center\"\n                 width={\"100%\"}\n                 height={\"100%\"}\n                 padding={2}>\n                <Box padding={1}>\n                    <AssignmentIcon/>\n                </Box>\n                <Typography>\n                    {emptyMessage}\n                </Typography>\n            </Box>\n        );\n    }\n\n    const onBaseTableColumnResize = useCallback(({\n                                                     column,\n                                                     width\n                                                 }: { column: ColumnShape; width: number }) => {\n        if (onColumnResize) {\n            onColumnResize({\n                width,\n                key: column.key as string,\n                column: column as TableColumn<any>\n            });\n        }\n    }, [onColumnResize]);\n\n    return (\n\n        <>\n\n            <Measure\n                bounds\n                onResize={setTableSize}>\n                {({measureRef}) => {\n\n                    return (\n                        <div ref={measureRef}\n                             className={classes.tableContainer}\n                             css={baseTableCss}>\n\n                            {tableSize?.bounds &&\n                                <BaseTable\n                                    rowClassName={clsx(classes.tableRow, {[classes.tableRowClickable]: hoverRow})}\n                                    data={data}\n                                    onColumnResizeEnd={onBaseTableColumnResize}\n                                    width={tableSize.bounds.width}\n                                    height={tableSize.bounds.height}\n                                    emptyRenderer={error ? buildErrorView() : buildEmptyView()}\n                                    fixed\n                                    ignoreFunctionInColumnCompare={false}\n                                    rowHeight={getRowHeight(size)}\n                                    ref={tableRef}\n                                    onScroll={onScroll}\n                                    overscanRowCount={2}\n                                    onEndReachedThreshold={PIXEL_NEXT_PAGE_OFFSET}\n                                    onEndReached={onEndReachedInternal}\n                                    rowEventHandlers={\n                                        {onClick: clickRow as any}\n                                    }\n                                >\n\n                                    <Column\n                                        headerRenderer={headerRenderer}\n                                        cellRenderer={({\n                                                           rowData\n                                                       }: any) =>\n                                            idColumnBuilder\n                                                ? idColumnBuilder({\n                                                    size,\n                                                    entry: rowData\n                                                })\n                                                : null\n                                        }\n                                        align={\"center\"}\n                                        key={\"header-id\"}\n                                        dataKey={\"id\"}\n                                        flexShrink={0}\n                                        frozen={frozenIdColumn ? \"left\" : undefined}\n                                        width={160}/>\n\n                                    {columns.map((column) =>\n                                        <Column\n                                            key={column.key}\n                                            title={column.label}\n                                            className={getClass(column)}\n                                            style={{color: column.property && column.property.textColor ? column.property.textColor : \"rgba(0, 0, 0, 0.87)\"}}\n                                            headerRenderer={headerRenderer}\n                                            cellRenderer={column.cellRenderer}\n                                            height={getRowHeight(size)}\n                                            align={column.align}\n                                            flexGrow={1}\n                                            flexShrink={0}\n                                            resizable={true}\n                                            size={size}\n                                            dataKey={column.key}\n                                            width={column.width}/>)\n                                    }\n                                </BaseTable>}\n                        </div>\n                    );\n                }}\n            </Measure>\n\n        </>\n    );\n}\n","import { useContext } from \"react\";\nimport { BreadcrumbContext } from \"../core/contexts/BreacrumbsContext\";\n\n\n/**\n * @category Hooks and utilities\n */\nexport interface BreadcrumbsController {\n    breadcrumbs: BreadcrumbEntry[];\n    set: (props: {\n        breadcrumbs: BreadcrumbEntry[];\n    }) => void;\n}\n\n/**\n * @category Hooks and utilities\n */\nexport interface BreadcrumbEntry {\n    title: string;\n    url: string;\n}\n\n/**\n * Hook to retrieve the BreadcrumbContext.\n *\n * Consider that in order to use this hook you need to have a parent\n * `FireCMS`\n *\n * @see BreadcrumbsController\n * @category Hooks and utilities\n */\nexport const useBreadcrumbsContext = (): BreadcrumbsController => useContext(BreadcrumbContext);\n","import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\n\nexport function NotFoundPage() {\n\n    return (\n        <Box\n            display=\"flex\"\n            width={\"100%\"}\n            height={\"100%\"}>\n            <Box m=\"auto\">\n                <Typography variant={\"h4\"} align={\"center\"} gutterBottom={true}>\n                    Page not found\n                </Typography>\n                <Typography align={\"center\"}>\n                    This page does not exist or you may not have access to it\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\n","import React, { PropsWithChildren } from \"react\";\n\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport { CMSView } from \"../models\";\nimport { EntityCollectionView, FireCMSHomePage } from \"./components\";\nimport { useNavigation } from \"../hooks\";\nimport { useBreadcrumbsContext } from \"../hooks/useBreadcrumbsContext\";\nimport { NotFoundPage } from \"./components/NotFoundPage\";\n\n/**\n * @category Components\n */\nexport type NavigationRoutesProps = {\n    /**\n     * In case you need to override the home page\n     */\n    HomePage?: React.ComponentType;\n};\n\n/**\n * This component is in charge of taking a {@link Navigation} and rendering\n * all the related routes (entity collection root views, custom views\n * or the home route).\n * This component needs a parent {@link FireCMS}\n *\n * @constructor\n * @category Components\n */\nexport function NavigationRoutes({ HomePage }: NavigationRoutesProps) {\n\n    const location = useLocation();\n    const navigationContext = useNavigation();\n    const navigation = navigationContext.navigation;\n\n    if (!navigation)\n        return <></>;\n\n    const state = location.state as any;\n    /**\n     * The location can be overridden if `base_location` is set in the\n     * state field of the current location. This can happen if you open\n     * a side entity, like `products`, from a different one, like `users`\n     */\n    const baseLocation = state && state.base_location ? state.base_location : location;\n\n    const customRoutes: JSX.Element[] = [];\n    if (navigation.views) {\n        const buildCMSViewRoute = (path: string, cmsView: CMSView) => {\n            return <Route\n                key={\"navigation_view_\" + path}\n                path={path}\n                element={\n                    <BreadcrumbUpdater\n                        path={path}\n                        key={`navigation_${path}`}\n                        title={cmsView.name}>\n                        {cmsView.view}\n                    </BreadcrumbUpdater>}\n            />;\n        };\n\n        navigation.views.forEach((cmsView) => {\n            if (Array.isArray(cmsView.path))\n                customRoutes.push(...cmsView.path.map(path => buildCMSViewRoute(path, cmsView)));\n            else\n                customRoutes.push(buildCMSViewRoute(cmsView.path, cmsView));\n        });\n    }\n\n    const collectionRoutes = [...navigation.collections]\n        // we reorder collections so that nested paths are included first\n        .sort((a, b) => b.path.length - a.path.length)\n        .map((collection) => {\n                const urlPath = navigationContext.buildUrlCollectionPath(collection.path);\n                return <Route path={urlPath + \"/*\"}\n                              key={`navigation_${collection.path}`}\n                              element={\n                                  <BreadcrumbUpdater\n                                      path={urlPath}\n                                      title={collection.name}>\n                                      <EntityCollectionView\n                                          path={collection.path}\n                                          collection={collection}/>\n                                  </BreadcrumbUpdater>\n                              }/>;\n            }\n        );\n\n    const homeRoute =\n        <Route path={\"/\"}\n               element={\n                   <BreadcrumbUpdater\n                       path={\"/\"}\n                       key={\"navigation_home\"}\n                       title={\"Home\"}>\n                       {HomePage ? <HomePage/> : <FireCMSHomePage/>}\n                   </BreadcrumbUpdater>\n               }/>;\n\n    const notFoundRoute = <Route path={\"*\"}\n                                 element={\n                                     <NotFoundPage/>\n                                 }/>;\n\n    return (\n        <Routes location={baseLocation}>\n\n            {collectionRoutes}\n\n            {customRoutes}\n\n            {homeRoute}\n\n            {notFoundRoute}\n\n        </Routes>\n    );\n}\n\n\ninterface BreadcrumbRouteProps {\n    title: string;\n    path: string;\n}\n\n/**\n * This component updates the breadcrumb in the app bar when rendered\n * @param children\n * @param title\n * @param path\n * @constructor\n * @category Components\n */\nfunction BreadcrumbUpdater({\n                               children,\n                               title,\n                               path\n                           }\n                               : PropsWithChildren<BreadcrumbRouteProps>) {\n\n    const breadcrumbsContext = useBreadcrumbsContext();\n    React.useEffect(() => {\n        breadcrumbsContext.set({\n            breadcrumbs: [{\n                title: title,\n                url: path\n            }]\n        });\n    }, [path, title]);\n\n    return <>{children}</>;\n}\n","import React from \"react\";\n\nexport function FireCMSLogo() {\n    return (\n        <svg\n            width=\"232\" height=\"232\"\n            viewBox=\"0 0 599 599\" version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <defs>\n                <radialGradient cx=\"28.6213569%\" cy=\"43.1133328%\"\n                                fx=\"28.6213569%\"\n                                fy=\"43.1133328%\" r=\"71.5003456%\"\n                                gradientTransform=\"translate(0.286214,0.431133),rotate(3.343450),scale(1.000000,0.996175),translate(-0.286214,-0.431133)\"\n                                id=\"radialGradient-1\">\n                    <stop stopColor=\"#FF5B79\" offset=\"0%\"/>\n                    <stop stopColor=\"#FA5574\" offset=\"28.0930803%\"/>\n                    <stop stopColor=\"#EC4C51\" offset=\"44.7242531%\"/>\n                    <stop stopColor=\"#9543C1\" offset=\"71.4578165%\"/>\n                    <stop stopColor=\"#3857B3\" offset=\"100%\"/>\n                </radialGradient>\n                <radialGradient cx=\"53.6205516%\" cy=\"47.2473036%\"\n                                fx=\"53.6205516%\"\n                                fy=\"47.2473036%\" r=\"50.8229649%\"\n                                gradientTransform=\"translate(0.536206,0.472473),rotate(90.000000),scale(1.000000,1.206631),translate(-0.536206,-0.472473)\"\n                                id=\"radialGradient-2\">\n                    <stop stopColor=\"#68294F\" stopOpacity=\"0\" offset=\"0%\"/>\n                    <stop stopColor=\"#5E2548\" stopOpacity=\"0.04641108\"\n                          offset=\"75.3503173%\"/>\n                    <stop stopColor=\"#0D060B\" stopOpacity=\"0.437431709\"\n                          offset=\"100%\"/>\n                </radialGradient>\n                <radialGradient cx=\"53.8605015%\" cy=\"48.1990423%\"\n                                fx=\"53.8605015%\"\n                                fy=\"48.1990423%\" r=\"59.9151549%\"\n                                gradientTransform=\"translate(0.538605,0.481990),rotate(180.000000),scale(1.000000,0.925027),translate(-0.538605,-0.481990)\"\n                                id=\"radialGradient-3\">\n                    <stop stopColor=\"#68294F\" stopOpacity=\"0\" offset=\"0%\"/>\n                    <stop stopColor=\"#5E2548\" stopOpacity=\"0.04641108\"\n                          offset=\"84.0867343%\"/>\n                    <stop stopColor=\"#FF0000\" stopOpacity=\"0.567324765\"\n                          offset=\"100%\"/>\n                </radialGradient>\n            </defs>\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\"\n               fillRule=\"evenodd\">\n                <g id=\"firecms_logo\">\n                    <circle fill=\"url(#radialGradient-1)\" cx=\"299.5\" cy=\"299.5\"\n                            r=\"299.5\"/>\n                    <circle fill=\"url(#radialGradient-2)\" cx=\"299.5\" cy=\"299.5\"\n                            r=\"299.5\"/>\n                    <circle fill=\"url(#radialGradient-3)\" cx=\"299.5\" cy=\"299.5\"\n                            r=\"299.5\"/>\n                </g>\n            </g>\n        </svg>\n    );\n\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport {\n    Box,\n    Divider,\n    Link,\n    List,\n    ListItem,\n    Theme,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    computeTopNavigation,\n    TopNavigationEntry,\n    TopNavigationResult\n} from \"./util/navigation_utils\";\nimport { useNavigation } from \"../hooks\";\nimport { FireCMSLogo } from \"./components/FireCMSLogo\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        logo: {\n            padding: theme.spacing(3),\n            maxWidth: 280\n        }\n    })\n);\n\n/**\n * Props used in case you need to override the default drawer\n * @category Core\n */\nexport interface DrawerProps {\n    logo: string | undefined,\n    closeDrawer: () => any,\n}\n\n/**\n * Default drawer used in the CMS\n * @category Core\n */\nexport function Drawer({\n                           logo,\n                           closeDrawer\n                       }: DrawerProps) {\n\n    const classes = useStyles();\n\n    const navigationContext = useNavigation();\n\n    const {\n        navigationEntries,\n        groups\n    }: TopNavigationResult = useMemo(() => computeTopNavigation(navigationContext, false), [navigationContext]);\n\n    const ungroupedNavigationViews = Object.values(navigationEntries).filter(e => !e.group);\n\n    const createNavigationListItem = useCallback((index: number, group: string, entry: TopNavigationEntry) =>\n        <ListItem\n            // @ts-ignore\n            button\n            key={`navigation_${index}`}\n            component={NavLink}\n            onClick={closeDrawer}\n            // @ts-ignore\n            style={({ isActive }) => ({\n                fontWeight: isActive ? \"600\" : \"500\",\n                background: isActive ? \"rgba(128,128,128,0.1)\" : \"inherit\"\n            })}\n            to={entry.url}\n        >\n            <Typography\n                variant={\"subtitle2\"}\n                sx={{\n                    fontWeight: \"inherit\",\n                    py: 0.5\n                }}>\n                {entry.name.toUpperCase()}\n            </Typography>\n        </ListItem>, [closeDrawer]);\n\n    let logoComponent;\n    if (logo) {\n        logoComponent = <img className={classes.logo}\n                             src={logo}\n                             alt={\"Logo\"}/>;\n    } else {\n        logoComponent = <div className={classes.logo}>\n            <FireCMSLogo/>\n        </div>;\n    }\n\n    return <>\n\n        <Link\n            key={\"breadcrumb-home\"}\n            color=\"inherit\"\n            onClick={closeDrawer}\n            component={NavLink}\n\n            to={navigationContext.homeUrl}>\n            {logoComponent}\n        </Link>\n\n        <List>\n\n            {groups.map((group) => (\n                <React.Fragment\n                    key={`drawer_group_${group}`}>\n                    <Divider key={`divider_${group}`}/>\n                    <Box pt={2} pl={2} pr={2} pb={0.5}>\n                        <Typography variant={\"caption\"}\n                                    color={\"textSecondary\"}\n                                    className={\"weight-500\"}>\n                            {group.toUpperCase()}\n                        </Typography>\n                    </Box>\n                    {Object.values(navigationEntries)\n                        .filter(e => e.group === group)\n                        .map((view, index) => createNavigationListItem(index, group, view))}\n                </React.Fragment>\n            ))}\n\n            {ungroupedNavigationViews.length > 0 &&\n            <Divider key={\"divider_ungrouped\"}/>}\n\n            {ungroupedNavigationViews.map((view, index) => createNavigationListItem(index, \"none\", view))}\n\n        </List>\n\n    </>;\n}\n","/* @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport {\n    AppBar,\n    Avatar,\n    Box,\n    Breadcrumbs,\n    Button,\n    Chip,\n    Hidden,\n    IconButton,\n    Link,\n    Slide,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Brightness5Icon from \"@mui/icons-material/Brightness5\";\nimport Brightness3Icon from \"@mui/icons-material/Brightness3\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport { Link as ReactLink } from \"react-router-dom\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { useAuthController, useModeState } from \"../../hooks\";\nimport { useBreadcrumbsContext } from \"../../hooks/useBreadcrumbsContext\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appbar: {},\n        menuButton: {\n            marginRight: theme.spacing(2)\n        },\n        breadcrumb: {\n            backgroundColor: theme.palette.grey[100],\n            height: theme.spacing(3),\n            color: theme.palette.grey[800],\n            fontWeight: theme.typography.fontWeightMedium,\n            \"&:hover, &:focus\": {\n                cursor: \"pointer\",\n                backgroundColor: theme.palette.grey[300]\n            },\n            \"&:active\": {\n                boxShadow: theme.shadows[1],\n                backgroundColor: theme.palette.grey[400]\n            }\n        }\n    })\n);\n\n\ninterface CMSAppBarProps {\n    title: string;\n    handleDrawerToggle: () => void,\n    /**\n     * A component that gets rendered on the upper side of the main toolbar\n     */\n    toolbarExtraWidget?: React.ReactNode;\n}\n\n\nexport function FireCMSAppBar({\n                                  title,\n                                  handleDrawerToggle,\n                                  toolbarExtraWidget\n                              }: CMSAppBarProps) {\n\n    const classes = useStyles();\n\n    const breadcrumbsContext = useBreadcrumbsContext();\n    const { breadcrumbs } = breadcrumbsContext;\n\n    const authController = useAuthController();\n    const { mode, toggleMode } = useModeState();\n\n    const initial = authController.user?.displayName\n        ? authController.user.displayName[0].toUpperCase()\n        : (authController.user?.email ? authController.user.email[0].toUpperCase() : \"A\");\n\n    return (\n        <Slide\n            direction=\"down\" in={true} mountOnEnter unmountOnExit>\n            <AppBar\n                className={classes.appbar}\n                position={\"relative\"}\n                elevation={1}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                        size=\"large\">\n                        <MenuIcon/>\n                    </IconButton>\n\n                    <Hidden lgDown>\n                        <Box mr={3}>\n                            <Link\n                                underline={\"none\"}\n                                key={\"breadcrumb-home\"}\n                                color=\"inherit\"\n                                component={ReactLink}\n                                to={\"/\"}>\n                                <Typography variant=\"h6\" noWrap>\n                                    {title}\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </Hidden>\n\n                    <Box mr={2}>\n                        <Breadcrumbs\n                            separator={<NavigateNextIcon\n                                htmlColor={\"rgb(0,0,0,0.87)\"}\n                                fontSize=\"small\"/>}\n                            aria-label=\"breadcrumb\">\n                            {breadcrumbs.map((entry, index) => (\n                                <Link\n                                    underline={\"none\"}\n                                    key={`breadcrumb-${index}`}\n                                    color=\"inherit\"\n                                    component={ReactLink}\n                                    to={entry.url}>\n                                    <Chip\n                                        classes={{ root: classes.breadcrumb }}\n                                        label={entry.title}\n                                    />\n                                </Link>)\n                            )\n                            }\n                        </Breadcrumbs>\n                    </Box>\n\n                    <Box flexGrow={1}/>\n\n                    {toolbarExtraWidget &&\n                    <ErrorBoundary>\n                        {\n                            toolbarExtraWidget\n                        }\n                    </ErrorBoundary>}\n\n\n                    <Box p={1} mr={1}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            edge=\"start\"\n                            onClick={() => toggleMode()}\n                            size=\"large\">\n                            {mode === \"dark\"\n                                ? <Brightness3Icon/>\n                                : <Brightness5Icon/>}\n                        </IconButton>\n                    </Box>\n\n                    <Box p={1} mr={1}>\n                        {authController.user && authController.user.photoURL\n                            ? <Avatar\n                                src={authController.user.photoURL}/>\n                            : <Avatar>{initial}</Avatar>\n                        }\n                    </Box>\n\n                    <Button variant=\"text\"\n                            color=\"inherit\"\n                            onClick={authController.signOut}>\n                        Log Out\n                    </Button>\n\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import React, { PropsWithChildren } from \"react\";\n\nimport { Drawer as MuiDrawer, Theme } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { Drawer as FireCMSDrawer, DrawerProps } from \"./Drawer\";\nimport { FireCMSAppBar } from \"./internal/FireCMSAppBar\";\nimport { useNavigation } from \"../hooks\";\nimport { CircularProgressCenter } from \"./components\";\n\n\n/**\n * @category Core\n */\nexport interface ScaffoldProps {\n\n    /**\n     * Name of the app, displayed as the main title and in the tab title\n     */\n    name: string;\n\n    /**\n     * Logo to be displayed in the drawer of the CMS\n     */\n    logo?: string;\n\n    /**\n     * A component that gets rendered on the upper side of the main toolbar\n     */\n    toolbarExtraWidget?: React.ReactNode;\n\n    /**\n     * In case you need to override the view that gets rendered as a drawer\n     * @see FireCMSDrawer\n     */\n    Drawer?: React.ComponentType<DrawerProps>;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        main: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100vw\",\n            height: \"100vh\"\n        },\n        content: {\n            flexGrow: 1,\n            width: \"100%\",\n            height: \"100%\",\n            overflow: \"auto\"\n        },\n        drawerPaper: {\n            width: 280\n        }\n    })\n);\n\n/**\n * This view acts as a scaffold for FireCMS.\n *\n * It is in charge of displaying the navigation drawer, top bar and main\n * collection views.\n * This component needs a parent {@link FireCMS}\n *\n * @param props\n * @constructor\n * @category Core\n */\nexport function Scaffold(props: PropsWithChildren<ScaffoldProps>) {\n\n    const {\n        children,\n        name,\n        logo,\n        toolbarExtraWidget,\n        Drawer\n    } = props;\n\n    const classes = useStyles();\n\n    const navigationContext = useNavigation();\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => setDrawerOpen(!drawerOpen);\n    const closeDrawer = () => setDrawerOpen(false);\n\n    const UsedDrawer = Drawer || FireCMSDrawer;\n\n    return (\n\n        <>\n            <nav>\n                <MuiDrawer\n                    variant=\"temporary\"\n                    anchor={\"left\"}\n                    open={drawerOpen}\n                    onClose={closeDrawer}\n                    classes={{\n                        paper: classes.drawerPaper\n                    }}\n                    ModalProps={{\n                        keepMounted: true\n                    }}\n                >\n                    {!navigationContext.navigation ? <CircularProgressCenter/> : <UsedDrawer logo={logo} closeDrawer={closeDrawer}/>}\n\n                </MuiDrawer>\n            </nav>\n\n            <div className={classes.main}>\n\n                <FireCMSAppBar title={name}\n                               handleDrawerToggle={handleDrawerToggle}\n                               toolbarExtraWidget={toolbarExtraWidget}/>\n                <main\n                    className={classes.content}>\n                    {children}\n                </main>\n            </div>\n\n        </>\n    );\n\n\n}\n\n","import * as React from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { debounce, ownerWindow, useForkRef, useTheme } from \"@mui/material\";\n\n// Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\nfunction getTranslateValue(node: any) {\n    const rect = node.getBoundingClientRect();\n    const containerWindow = ownerWindow(node);\n    let transform;\n\n    if (node.fakeTransform) {\n        transform = node.fakeTransform;\n    } else {\n        const computedStyle = containerWindow.getComputedStyle(node);\n        transform =\n            computedStyle.getPropertyValue(\"-webkit-transform\") ||\n            computedStyle.getPropertyValue(\"transform\");\n    }\n\n    let offsetX = 0;\n\n    if (transform && transform !== \"none\" && typeof transform === \"string\") {\n        const transformValues = transform.split(\"(\")[1].split(\")\")[0].split(\",\");\n        offsetX = parseInt(transformValues[4], 10);\n    }\n\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n}\n\nexport function setTranslateValue(node: any) {\n    const transform = getTranslateValue(node);\n\n    if (transform) {\n        node.style.webkitTransform = transform;\n        node.style.transform = transform;\n    }\n}\n\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nexport const SlideFade = React.forwardRef(function SlideFade(props: SlideProps, ref) {\n    const {\n        children,\n        in: inProp,\n        timeout,\n        onExitAnimation,\n        ...other\n    } = props;\n\n    const theme: any = useTheme();\n    const childrenRef = React.useRef<any>(null);\n    const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n    const handleRef = useForkRef(handleRefIntermediary, ref);\n\n    const normalizedTransitionCallback = (callback: any) => (isAppearing: boolean) => {\n        if (callback) {\n            // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n            if (isAppearing === undefined) {\n                callback(childrenRef.current);\n            } else {\n                callback(childrenRef.current, isAppearing);\n            }\n        }\n    };\n\n    const handleEnter = normalizedTransitionCallback((node: any) => {\n        setTranslateValue(node);\n        reflow(node);\n    });\n\n    const handleEntering = normalizedTransitionCallback((node: any) => {\n        const transitionProps = getTransitionProps(\n            { timeout },\n            {\n                mode: \"enter\"\n            }\n        );\n        node.style.webkitTransition = theme.transitions.create(\"-webkit-transform\", {\n            ...transitionProps,\n            easing: theme.transitions.easing.easeOut\n        });\n\n        node.style.transition = theme.transitions.create(\"transform\", {\n            ...transitionProps,\n            easing: theme.transitions.easing.easeOut\n        });\n\n        node.style.webkitTransform = \"none\";\n        node.style.transform = \"none\";\n        node.style.opacity = 1;\n    });\n\n\n    const handleExit: any = normalizedTransitionCallback((node: any) => {\n        const transitionProps = getTransitionProps(\n            { timeout },\n            {\n                mode: \"exit\"\n            }\n        );\n\n        node.style.opacity = 0.5;\n        node.style.webkitTransition = theme.transitions.create([\"-webkit-transform\", \"opacity\"], {\n            ...transitionProps,\n            easing: theme.transitions.easing.sharp\n        });\n\n        node.style.transition = theme.transitions.create([\"transform\", \"opacity\"], {\n            ...transitionProps,\n            easing: theme.transitions.easing.sharp\n        });\n\n        setTranslateValue(node);\n    });\n\n    const handleExited: any = normalizedTransitionCallback((node: any) => {\n        // No need for transitions when the component is hidden\n        node.style.webkitTransition = \"\";\n        node.style.transition = \"\";\n\n    });\n\n    const updatePosition = React.useCallback(() => {\n        if (childrenRef.current) {\n            setTranslateValue(childrenRef.current);\n        }\n    }, []);\n\n    React.useEffect(() => {\n        // Skip configuration where the position is screen size invariant.\n        if (inProp) {\n            return undefined;\n        }\n\n        const handleResize = debounce(() => {\n            if (childrenRef.current) {\n                setTranslateValue(childrenRef.current);\n            }\n        });\n\n        const containerWindow = ownerWindow(childrenRef.current);\n        containerWindow.addEventListener(\"resize\", handleResize);\n        return () => {\n            handleResize.clear();\n            containerWindow.removeEventListener(\"resize\", handleResize);\n        };\n    }, [inProp]);\n\n    React.useEffect(() => {\n        if (!inProp) {\n            // We need to update the position of the drawer when the direction change and\n            // when it's hidden.d\n            updatePosition();\n        }\n    }, [inProp, updatePosition]);\n\n    return (\n        <Transition\n            nodeRef={childrenRef}\n            onEnter={handleEnter}\n            onEntering={handleEntering}\n            onExit={handleExit}\n            onExited={handleExited}\n            appear={true}\n            in={inProp}\n            timeout={timeout}\n            {...other}\n        >\n            {(state: any, childProps: any) => {\n                return React.cloneElement(children, {\n                    ref: handleRef,\n                    style: {\n                        visibility: state === \"exited\" && !inProp ? \"hidden\" : undefined,\n                        ...children.props.style\n                    },\n                    ...childProps\n                });\n            }}\n        </Transition>\n    );\n});\n\n\ninterface SlideProps {\n    /**\n     * A single child content element.\n     */\n    children: any;\n    /**\n     * If `true`, the component will transition in.\n     */\n    in: boolean;\n    /**\n     * The duration for the transition, in milliseconds.\n     * You may specify a single timeout for all transitions, or individually with an object.\n     * @default {\n     *   enter: duration.enteringScreen,\n     *   exit: duration.leavingScreen,\n     * }\n     */\n    timeout: { enter: number, exit: number };\n\n    onExitAnimation?: () => void;\n}\n\nconst reflow = (node: any) => node.scrollTop;\n\nfunction getTransitionProps(props: any, options: any) {\n    const { timeout } = props;\n\n    return {\n        duration:\n            typeof timeout === \"number\"\n                ? timeout\n                : timeout[options.mode] || 0\n    };\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { Backdrop, Modal, Paper, Theme } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { SlideFade } from \"./SlideFadeTransition\";\n\nexport interface EntityDrawerProps {\n\n    /**\n     * The contents of the drawer.\n     */\n    children: React.ReactNode,\n\n    /**\n     * Callback fired when the component requests to be closed.\n     *\n     * @param {object} event The event source of the callback.\n     */\n    onClose?: () => void,\n\n    /**\n     * If `true`, the drawer is open.\n     */\n    open: boolean,\n\n    /**\n     * The offset position of this view determines if it needs to be translated\n     * when nested\n     */\n    offsetPosition: number;\n\n    onExitAnimation?: () => void;\n\n}\n\nexport interface StyleProps {\n    offsetPosition: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => createStyles({\n    /* Styles applied to the root element. */\n    root: {},\n    /* Styles applied to the `Paper` component. */\n    paper: {\n        height: \"100%\",\n        WebkitOverflowScrolling: \"touch\", // Add iOS momentum scrolling.\n        position: \"fixed\",\n        outline: 0\n    },\n    paperAnchorRight: ({ offsetPosition }) => ({\n        left: \"auto\",\n        right: 0\n    }),\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n}));\n\n\nconst defaultTransitionDuration = {\n    enter: 225,\n    exit: 175\n};\n\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\nexport const SideDialogDrawer = React.forwardRef<HTMLDivElement, EntityDrawerProps>(function EntityDrawer(props, ref) {\n\n    const {\n        children,\n        onClose,\n        open,\n        offsetPosition,\n        onExitAnimation\n    } = props;\n\n    const classes = useStyles({ offsetPosition });\n\n    const drawer = (\n        <Paper\n            elevation={1}\n            square\n            style={{\n                transition: \"transform 1000ms cubic-bezier(0.33, 1, 0.68, 1)\",\n                transform: `translateX(-${(offsetPosition) * 240}px)`\n            }}\n            className={clsx(\n                classes.paper,\n                classes.paperAnchorRight\n            )}\n        >\n            {children}\n        </Paper>\n    );\n\n\n    const slidingDrawer = (\n        <SlideFade\n            in={open}\n            timeout={defaultTransitionDuration}\n            onExitAnimation={onExitAnimation}\n        >\n            {drawer}\n        </SlideFade>\n    );\n\n    return (\n        <Modal\n            BackdropProps={{\n                transitionDuration: defaultTransitionDuration\n            }}\n            BackdropComponent={Backdrop}\n            className={clsx(classes.root, classes.modal)}\n            open={open}\n            onClose={onClose}\n            ref={ref}\n            keepMounted={true}\n            // disableEnforceFocus related to https://github.com/Camberi/firecms/issues/50\n            disableEnforceFocus={true}\n        >\n            {slidingDrawer}\n        </Modal>\n    );\n});\n\n\n","export const CONTAINER_WIDTH = \"560px\";\nexport const CONTAINER_FULL_WIDTH = \"100vw\";\n\nexport const TAB_WIDTH = \"55vw\";\n","import React, {\n    lazy,\n    Suspense,\n    useCallback,\n    useEffect,\n    useMemo,\n    useState\n} from \"react\";\nimport {\n    Box,\n    CircularProgress,\n    Divider,\n    IconButton,\n    Tab,\n    Tabs,\n    Theme,\n    useMediaQuery,\n    useTheme\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport clsx from \"clsx\";\nimport {\n    Entity,\n    EntityCallbacks,\n    EntityCollection,\n    EntitySchema,\n    EntitySchemaResolver,\n    EntityStatus,\n    EntityValues,\n    PermissionsBuilder,\n    ResolvedEntitySchema\n} from \"../../models\";\nimport { CircularProgressCenter } from \"../components\";\nimport { removeInitialAndTrailingSlashes } from \"../util/navigation_utils\";\n\nimport { CONTAINER_FULL_WIDTH, CONTAINER_WIDTH, TAB_WIDTH } from \"./common\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport {\n    saveEntityWithCallbacks,\n    useAuthController,\n    useDataSource,\n    useEntityFetch,\n    useFireCMSContext,\n    useSideEntityController,\n    useSnackbarController\n} from \"../../hooks\";\nimport { canEdit } from \"../util/permissions\";\nimport { computeSchema } from \"../utils\";\n\nconst EntityCollectionView = lazy(() => import(\"../components/EntityCollectionView\")) as any;\nconst EntityForm = lazy(() => import(\"../../form/EntityForm\")) as any;\nconst EntityPreview = lazy(() => import(\"../components/EntityPreview\")) as any;\n\nconst useStylesSide = makeStyles<Theme, { containerWidth?: string }>((theme: Theme) =>\n    createStyles({\n        container: ({ containerWidth }) => ({\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: containerWidth,\n            height: \"100%\",\n            [theme.breakpoints.down(\"sm\")]: {\n                width: CONTAINER_FULL_WIDTH\n            },\n            transition: \"width 250ms ease-in-out\"\n        }),\n        containerWide: ({ containerWidth }) => ({\n            width: `calc(${TAB_WIDTH} + ${containerWidth})`,\n            [theme.breakpoints.down(\"lg\")]: {\n                width: CONTAINER_FULL_WIDTH\n            }\n        }),\n        subcollectionPanel: {\n            width: TAB_WIDTH,\n            height: \"100%\",\n            overflow: \"auto\",\n            borderLeft: `1px solid ${theme.palette.divider}`,\n            [theme.breakpoints.down(\"lg\")]: {\n                borderLeft: \"inherit\",\n                width: CONTAINER_FULL_WIDTH\n            }\n        },\n        tabsContainer: ({ containerWidth }) => ({\n            flexGrow: 1,\n            height: \"100%\",\n            width: `calc(${TAB_WIDTH} + ${containerWidth})`,\n            [theme.breakpoints.down(\"lg\")]: {\n                width: CONTAINER_FULL_WIDTH\n            },\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"row\"\n        }),\n        form: ({ containerWidth }) => ({\n            width: containerWidth,\n            maxWidth: \"100%\",\n            height: \"100%\",\n            overflow: \"auto\",\n            [theme.breakpoints.down(\"sm\")]: {\n                maxWidth: CONTAINER_FULL_WIDTH,\n                width: CONTAINER_FULL_WIDTH\n            }\n        }),\n        tabBar: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1),\n            paddingTop: theme.spacing(0)\n        },\n        tab: {\n            fontSize: \"0.875rem\",\n            minWidth: \"140px\"\n        }\n    })\n);\n\n\nexport interface EntityViewProps<M, UserType> {\n    path: string;\n    schema: EntitySchema<M> | EntitySchemaResolver<M>;\n    entityId?: string;\n    copy?: boolean;\n    selectedSubpath?: string;\n    permissions?: PermissionsBuilder<M, UserType>;\n    callbacks?: EntityCallbacks<M>;\n    subcollections?: EntityCollection[];\n    width?: number | string;\n    onModifiedValues: (modified: boolean) => void;\n}\n\n\nexport function EntityView<M extends { [Key: string]: any }, UserType>({\n                                                                           path,\n                                                                           entityId,\n                                                                           callbacks,\n                                                                           selectedSubpath,\n                                                                           copy,\n                                                                           permissions,\n                                                                           schema: schemaOrResolver,\n                                                                           subcollections,\n                                                                           onModifiedValues,\n                                                                           width\n                                                                       }: EntityViewProps<M, UserType>) {\n\n    const resolvedWidth: string | undefined = typeof width === \"number\" ? `${width}px` : width;\n    const classes = useStylesSide({ containerWidth: resolvedWidth ?? CONTAINER_WIDTH });\n\n    const dataSource = useDataSource();\n    const sideEntityController = useSideEntityController();\n    const snackbarContext = useSnackbarController();\n    const context = useFireCMSContext();\n    const authController = useAuthController<UserType>();\n\n    const [status, setStatus] = useState<EntityStatus>(copy ? \"copy\" : (entityId ? \"existing\" : \"new\"));\n    const [currentEntityId, setCurrentEntityId] = useState<string | undefined>(entityId);\n    const [readOnly, setReadOnly] = useState<boolean>(false);\n    const [tabsPosition, setTabsPosition] = React.useState(-1);\n\n    const [modifiedValues, setModifiedValues] = useState<EntityValues<any> | undefined>();\n\n    const {\n        entity,\n        dataLoading,\n        // eslint-disable-next-line no-unused-vars\n        dataLoadingError\n    } = useEntityFetch({\n        path,\n        entityId: currentEntityId,\n        schema: schemaOrResolver,\n        useCache: false\n    });\n\n    const resolvedSchema:ResolvedEntitySchema<M> = useMemo(() => computeSchema({\n        schemaOrResolver,\n        path,\n        entityId,\n        values: modifiedValues,\n        previousValues: entity?.values\n    }), [schemaOrResolver, path, entityId, modifiedValues]);\n\n    useEffect(() => {\n        function beforeunload(e: any) {\n            if (modifiedValues) {\n                e.preventDefault();\n                e.returnValue = `You have unsaved changes in this ${resolvedSchema.name}. Are you sure you want to leave this page?`;\n            }\n        }\n\n        if (typeof window !== \"undefined\")\n            window.addEventListener(\"beforeunload\", beforeunload);\n\n        return () => {\n            if (typeof window !== \"undefined\")\n                window.removeEventListener(\"beforeunload\", beforeunload);\n        };\n\n    }, [modifiedValues, window]);\n\n    const customViews = resolvedSchema.views;\n    const customViewsCount = customViews?.length ?? 0;\n\n    useEffect(() => {\n        if (entity)\n            setReadOnly(!canEdit(permissions, entity, authController, path, context));\n    }, [entity, permissions]);\n\n    const theme = useTheme();\n    const largeLayout = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n    useEffect(() => {\n        if (!selectedSubpath)\n            setTabsPosition(-1);\n\n        if (customViews) {\n            const index = customViews\n                .map((c) => c.path)\n                .findIndex((p) => p === selectedSubpath);\n            setTabsPosition(index);\n        }\n\n        if (subcollections && selectedSubpath) {\n            const index = subcollections\n                .map((c) => c.path)\n                .findIndex((p) => p === selectedSubpath);\n            setTabsPosition(index + customViewsCount);\n        }\n    }, [selectedSubpath]);\n\n\n    const onPreSaveHookError = useCallback((e: Error) => {\n        snackbarContext.open({\n            type: \"error\",\n            title: \"Error before saving\",\n            message: e?.message\n        });\n        console.error(e);\n    }, []);\n\n    const onSaveSuccessHookError = useCallback((e: Error) => {\n        snackbarContext.open({\n            type: \"error\",\n            title: `${resolvedSchema.name}: Error after saving (entity is saved)`,\n            message: e?.message\n        });\n        console.error(e);\n    }, []);\n\n    const onSaveSuccess = useCallback((updatedEntity: Entity<M>) => {\n\n        setCurrentEntityId(updatedEntity.id);\n\n        snackbarContext.open({\n            type: \"success\",\n            message: `${resolvedSchema.name}: Saved correctly`\n        });\n\n        setStatus(\"existing\");\n        onModifiedValues(false);\n\n        if (tabsPosition === -1)\n            sideEntityController.close();\n\n    }, []);\n\n    const onSaveFailure = useCallback((e: Error) => {\n\n        snackbarContext.open({\n            type: \"error\",\n            title: `${resolvedSchema.name}: Error saving`,\n            message: e?.message\n        });\n\n        console.error(\"Error saving entity\", path, entityId);\n        console.error(e);\n    }, []);\n\n    const onEntitySave = useCallback(async ({\n                                                schema,\n                                                path,\n                                                entityId,\n                                                values,\n                                                previousValues\n                                            }: {\n        schema: EntitySchema<M>,\n        path: string,\n        entityId: string | undefined,\n        values: EntityValues<M>,\n        previousValues?: EntityValues<M>,\n    }): Promise<void> => {\n\n        if (!status)\n            return;\n\n        return saveEntityWithCallbacks({\n            path,\n            entityId,\n            callbacks,\n            values,\n            previousValues,\n            schema,\n            status,\n            dataSource,\n            context,\n            onSaveSuccess,\n            onSaveFailure,\n            onPreSaveHookError,\n            onSaveSuccessHookError\n        });\n    }, [status, callbacks, dataSource, context, onSaveSuccess, onSaveFailure, onPreSaveHookError, onSaveSuccessHookError]);\n\n    const onDiscard = useCallback(() => {\n        if (tabsPosition === -1)\n            sideEntityController.close();\n    }, [sideEntityController, tabsPosition]);\n\n    const body = !readOnly\n? (\n            <Suspense fallback={<CircularProgressCenter/>}>\n                <EntityForm\n                    key={`form_${path}_${entity?.id ?? \"new\"}`}\n                    status={status}\n                    path={path}\n                    schemaOrResolver={schemaOrResolver}\n                    onEntitySave={onEntitySave as any}\n                    onDiscard={onDiscard}\n                    onValuesChanged={setModifiedValues}\n                    onModified={onModifiedValues}\n                    entity={entity}/>\n            </Suspense>\n    )\n: (\n        <Suspense fallback={<CircularProgressCenter/>}>\n            <EntityPreview\n                entity={entity}\n                path={path}\n                schema={resolvedSchema}/>\n        </Suspense>\n    );\n\n    const customViewsView: JSX.Element[] | undefined = customViews && customViews.map(\n        (customView, colIndex) => {\n            return (\n                <Box\n                    className={classes.subcollectionPanel}\n                    key={`custom_view_${customView.path}_${colIndex}`}\n                    role=\"tabpanel\"\n                    flexGrow={1}\n                    height={\"100%\"}\n                    width={\"100%\"}\n                    hidden={tabsPosition !== colIndex}>\n                    <ErrorBoundary>\n                        {customView.builder({\n                            schema: resolvedSchema,\n                            entity,\n                            modifiedValues: modifiedValues ?? entity?.values\n                        })}\n                    </ErrorBoundary>\n                </Box>\n            );\n        }\n    );\n\n    const subCollectionsViews = subcollections && subcollections.map(\n        (subcollection, colIndex) => {\n            const absolutePath = entity ? `${entity?.path}/${entity?.id}/${removeInitialAndTrailingSlashes(subcollection.path)}` : undefined;\n\n            return (\n                <Box\n                    className={classes.subcollectionPanel}\n                    key={`subcol_${subcollection.name}_${colIndex}`}\n                    role=\"tabpanel\"\n                    flexGrow={1}\n                    hidden={tabsPosition !== colIndex + customViewsCount}>\n                    {entity && absolutePath\n                        ? <Suspense fallback={<CircularProgressCenter/>}>\n                            <EntityCollectionView\n                                path={absolutePath}\n                                collection={subcollection}/>\n                        </Suspense>\n                        : <Box m={3}\n                             display={\"flex\"}\n                             alignItems={\"center\"}\n                             justifyContent={\"center\"}>\n                            <Box>\n                                You need to save your entity before\n                                adding additional collections\n                            </Box>\n                        </Box>\n                    }\n                </Box>\n            );\n        }\n    );\n\n    const getSelectedSubpath = useCallback((value: number) => {\n        if (value === -1) return undefined;\n\n        if (customViews && value < customViewsCount) {\n            return customViews[value].path;\n        }\n\n        if (subcollections) {\n            return subcollections[value - customViewsCount].path;\n        }\n\n        throw Error(\"Something is wrong in getSelectedSubpath\");\n    }, [customViews]);\n\n    const onSideTabClick = useCallback((value: number) => {\n        setTabsPosition(value);\n        if (entityId) {\n            sideEntityController.open({\n                path,\n                entityId,\n                selectedSubpath: getSelectedSubpath(value),\n                overrideSchemaRegistry: false\n            });\n        }\n    }, []);\n\n    const header = (\n        <Box sx={{\n            paddingLeft: 2,\n            paddingRight: 2,\n            paddingTop: 2,\n            display: \"flex\",\n            alignItems: \"center\",\n            backgroundColor: theme.palette.mode === \"light\" ? theme.palette.background.default : theme.palette.background.paper\n        }}\n        >\n\n            <IconButton onClick={(e) => sideEntityController.close()}\n                        size=\"large\">\n                <CloseIcon/>\n            </IconButton>\n\n            <Tabs\n                value={tabsPosition === -1 ? 0 : false}\n                indicatorColor=\"secondary\"\n                textColor=\"inherit\"\n                scrollButtons=\"auto\"\n            >\n                <Tab\n                    label={resolvedSchema.name}\n                    classes={{\n                        root: classes.tab\n                    }}\n                    wrapped={true}\n                    onClick={() => {\n                        onSideTabClick(-1);\n                    }}/>\n            </Tabs>\n\n            <Box flexGrow={1}/>\n\n            {dataLoading &&\n            <CircularProgress size={16} thickness={8}/>}\n\n            <Tabs\n                value={tabsPosition >= 0 ? tabsPosition : false}\n                indicatorColor=\"secondary\"\n                textColor=\"inherit\"\n                onChange={(ev, value) => {\n                    onSideTabClick(value);\n                }}\n                className={classes.tabBar}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n            >\n\n                {customViews && customViews.map(\n                    (view) =>\n                        <Tab\n                            classes={{\n                                root: classes.tab\n                            }}\n                            wrapped={true}\n                            key={`entity_detail_custom_tab_${view.name}`}\n                            label={view.name}/>\n                )}\n\n                {subcollections && subcollections.map(\n                    (subcollection) =>\n                        <Tab\n                            classes={{\n                                root: classes.tab\n                            }}\n                            wrapped={true}\n                            key={`entity_detail_collection_tab_${subcollection.name}`}\n                            label={subcollection.name}/>\n                )}\n\n            </Tabs>\n        </Box>\n\n    );\n\n    return <div\n        className={clsx(classes.container, { [classes.containerWide]: tabsPosition !== -1 })}>\n        {\n            dataLoading\n                ? <CircularProgressCenter/>\n                : <>\n\n                    {header}\n\n                    <Divider/>\n\n                    <div className={classes.tabsContainer}>\n\n                        <Box\n                            role=\"tabpanel\"\n                            hidden={!largeLayout && tabsPosition !== -1}\n                            className={classes.form}>\n                            {body}\n                        </Box>\n\n                        {customViewsView}\n\n                        {subCollectionsViews}\n\n                    </div>\n\n                </>\n        }\n\n    </div>;\n}\n\n","import React, { useCallback } from \"react\";\nimport { Blocker, Transition } from \"history\";\nimport { UNSAFE_NavigationContext, useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nexport function useNavigationUnsavedChangesDialog(when: boolean, onSuccess: () => void):\n    {\n        navigationWasBlocked: boolean,\n        handleCancel: () => void,\n        handleOk: () => void\n    } {\n\n    const [nextLocation, setNextLocation] = React.useState<any | undefined>();\n    const { navigator } = React.useContext(UNSAFE_NavigationContext);\n\n    const navigate = useNavigate();\n\n    const handleCancel = () => {\n        setNextLocation(undefined);\n    };\n\n    const handleOk = () => {\n        onSuccess();\n        setNextLocation(undefined);\n        navigate(-1);\n    };\n\n    const blocker: Blocker = useCallback(({ action, location: nextLocation, retry }) => {\n        switch (action) {\n            case \"REPLACE\": {\n                retry();\n                return;\n            }\n            case \"POP\": {\n                setNextLocation(nextLocation);\n\n            }\n        }\n    }, []);\n\n    React.useEffect(() => {\n        if (!when) return;\n        if (nextLocation) return;\n        if (!(\"block\" in navigator)) return;\n        const unblock = (navigator as any).block((tx: Transition) => {\n            const autoUnblockingTx = {\n                ...tx,\n                retry() {\n                    unblock();\n                    tx.retry();\n                }\n            };\n            blocker(autoUnblockingTx);\n        });\n\n        return unblock;\n    }, [navigator, blocker, when, nextLocation]);\n\n    return { navigationWasBlocked: Boolean(nextLocation), handleCancel, handleOk };\n}\n\nexport interface UnsavedChangesDialogProps {\n    open: boolean;\n    schemaName: string;\n    handleOk: () => void;\n    handleCancel: () => void;\n}\n\nexport function UnsavedChangesDialog({\n                                         open,\n                                         handleOk,\n                                         handleCancel,\n                                         schemaName\n                                     }: UnsavedChangesDialogProps) {\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleCancel}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {\"Unsaved changes\"}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    You have unsaved changes in this <b>{schemaName}</b>.\n                </DialogContentText>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Are you sure you want to leave this page?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCancel} autoFocus> Cancel </Button>\n                <Button onClick={handleOk}> Ok </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useMemo, useState } from \"react\";\nimport { EntityCollectionResolver, SideEntityPanelProps } from \"../models\";\nimport { SideDialogDrawer } from \"./internal/SideDialogDrawer\";\nimport { EntityView } from \"./internal/EntityView\";\nimport { CONTAINER_WIDTH } from \"./internal/common\";\nimport { useNavigation, useSideEntityController } from \"../hooks\";\nimport { ErrorBoundary } from \"./internal/ErrorBoundary\";\nimport {\n    UnsavedChangesDialog,\n    useNavigationUnsavedChangesDialog\n} from \"./internal/useUnsavedChangesDialog\";\nimport { computeSchema } from \"./utils\";\n\n/**\n * This is the component in charge of rendering the side dialogs used\n * for editing entities. Use the {@link useSideEntityController} to open\n * and control the dialogs.\n * This component needs a parent {@link FireCMS}\n * {@see useSideEntityController}\n * @category Components\n */\nexport function SideEntityDialogs() {\n\n    const sideEntityController = useSideEntityController();\n\n    const sidePanels = sideEntityController.sidePanels;\n\n    //  we add an extra closed drawer, that it is used to maintain the transition when a drawer is removed\n    const allPanels = [...sidePanels, undefined];\n\n    return <>\n        {\n            allPanels.map((panel: SideEntityPanelProps | undefined, index) =>\n                (\n                    <SideEntityDialog\n                        key={`side_entity_dialog_${index}`}\n                        panel={panel}\n                        offsetPosition={sidePanels.length - index - 1}/>\n\n                ))\n        }\n    </>;\n}\n\nfunction SideEntityDialog({\n                              panel,\n                              offsetPosition\n                          }: { panel?: SideEntityPanelProps, offsetPosition: number }) {\n\n    // have the original values of the form changed?\n    const [modifiedValues, setModifiedValues] = useState(false);\n    // was the closing of the dialog requested by the drawer\n    const [drawerCloseRequested, setDrawerCloseRequested] = useState(false);\n\n    const {\n        navigationWasBlocked,\n        handleOk: handleNavigationOk,\n        handleCancel: handleNavigationCancel\n    } = useNavigationUnsavedChangesDialog(\n        modifiedValues && !drawerCloseRequested,\n        () => setModifiedValues(false)\n    );\n\n    const handleDrawerCloseOk = () => {\n        setModifiedValues(false);\n        setDrawerCloseRequested(false);\n        sideEntityController.close();\n    };\n    const handleDrawerCloseCancel = () => {\n        setDrawerCloseRequested(false);\n    };\n\n    const sideEntityController = useSideEntityController();\n    const navigationContext = useNavigation();\n\n\n    const schemaProps: EntityCollectionResolver | undefined = !panel ? undefined : navigationContext.getCollectionResolver(panel.path, panel.entityId);\n    if (panel && !schemaProps) {\n        throw Error(\"ERROR: You are trying to open an entity with no schema defined.\");\n    }\n\n    const schema = useMemo(() => {\n        if (!panel) return undefined;\n        return computeSchema({\n            schemaOrResolver: schemaProps!.schemaResolver,\n            path: panel.path,\n            entityId: panel.entityId\n        });\n    }, [panel, schemaProps]);\n\n\n    if (!panel || !schema) {\n        return <SideDialogDrawer\n            open={false}\n            offsetPosition={offsetPosition}>\n            <div style={{ width: CONTAINER_WIDTH }}/>\n        </SideDialogDrawer>;\n    }\n\n    return (\n        <>\n\n            <SideDialogDrawer\n                open={Boolean(panel)}\n                onClose={() => {\n                    if (modifiedValues) {\n                        setDrawerCloseRequested(true);\n                    } else {\n                        sideEntityController.close();\n                    }\n                }}\n                offsetPosition={offsetPosition}\n            >\n                 <ErrorBoundary>\n                    <EntityView\n                        {...schemaProps}\n                        {...panel}\n                        schema={schemaProps!.schemaResolver}\n                        onModifiedValues={setModifiedValues}\n                    />\n                </ErrorBoundary>\n            </SideDialogDrawer>\n\n            <UnsavedChangesDialog\n                open={navigationWasBlocked || drawerCloseRequested}\n                handleOk={drawerCloseRequested ? handleDrawerCloseOk : handleNavigationOk}\n                handleCancel={drawerCloseRequested ? handleDrawerCloseCancel : handleNavigationCancel}\n                schemaName={schema.name}/>\n\n        </>\n    );\n}\n\n","import { pink, red } from \"@mui/material/colors\";\nimport { createTheme, Theme } from \"@mui/material\";\n\n/**\n * Use this function to build the default FireCMS MUI5 theme,\n * with some overrides.\n * @category Hooks and utilities\n */\nexport const createCMSDefaultTheme = (\n    { mode, primaryColor, secondaryColor, fontFamily }: {\n        mode: \"light\" | \"dark\";\n        primaryColor?: string;\n        secondaryColor?: string;\n        fontFamily?: string;\n    }): Theme => {\n\n    const original = createTheme({\n        palette: {\n            mode: mode,\n            background: {\n                default: mode === \"dark\" ? \"#242424\" : \"#f6f7f8\"\n                // default: mode === \"dark\" ? \"#242424\" : \"rgb(240 240 240)\"\n            },\n            primary: {\n                main: primaryColor || \"#0070f4\"\n            },\n            secondary: {\n                main: secondaryColor || pink[\"400\"]\n            },\n            error: {\n                main: red.A400\n            }\n        },\n        typography: {\n            fontFamily: fontFamily || \"\\\"Rubik\\\", \\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n            fontWeightMedium: 500,\n            h6: {\n                fontWeight: 500,\n                fontSize: \"1.15rem\"\n            }\n        },\n        components: {\n            MuiButton: {\n                styleOverrides: {\n                    root: {\n                        borderRadius: 4\n                    }\n                }\n            },\n            MuiTableRow: {\n                styleOverrides: {\n                    root: {\n                        \"&:last-child td\": {\n                            borderBottom: 0\n                        }\n                    }\n                }\n            },\n            MuiTypography: {\n                styleOverrides: {\n                    root: {\n                        \"&.mono\": {\n                            fontFamily: \"'Space Mono', 'Lucida Console', monospace\"\n                        },\n                        \"&.weight-500\": {\n                            fontWeight: 500\n                        }\n                    }\n                }\n            },\n            MuiInputBase: {\n                styleOverrides: {\n                    root: {\n                        \"&.mono\": {\n                            fontFamily: \"'Space Mono', 'Lucida Console', monospace\"\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    return {\n        ...original\n        // shadows: original.shadows.map((value, index) => {\n        //     if (index == 1) return \"0 1px 1px 0 rgb(0 0 0 / 16%)\";\n        //     else return value;\n        // })\n    };\n};\n","import {\n    AdditionalColumnDelegate,\n    ArrayProperty,\n    BooleanProperty,\n    CMSType,\n    EntityCallbacks,\n    EntityCollection,\n    EntitySchema,\n    EnumValueConfig,\n    EnumValues,\n    GeopointProperty,\n    MapProperty,\n    Navigation,\n    NavigationBuilder,\n    NumberProperty,\n    Properties,\n    PropertiesOrBuilder,\n    PropertyBuilder,\n    PropertyOrBuilder,\n    ReferenceProperty,\n    StringProperty,\n    TimestampProperty,\n    User\n} from \"../models\";\n\n\n/**\n * Identity function we use to defeat the type system of Typescript and build\n * navigation objects with all its properties\n * @param navigation\n * @category Builder\n */\nexport function buildNavigation<UserType>(\n    navigation: Navigation | NavigationBuilder<UserType>\n): Navigation | NavigationBuilder<UserType> {\n    return navigation;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and build\n * collection views with all its properties\n * @param collectionView\n * @category Builder\n */\nexport function buildCollection<M extends { [Key: string]: any },\n    AdditionalKey extends string = string>(\n    collectionView: EntityCollection<M, AdditionalKey>\n): EntityCollection<M, AdditionalKey> {\n    return collectionView;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the schema keys\n * @param schema\n * @category Builder\n */\nexport function buildSchema<M extends { [Key: string]: any }>(\n    schema: EntitySchema<M>\n): EntitySchema<M> {\n    return schema;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the property keys.\n * @param property\n * @category Builder\n */\nexport function buildProperty<T extends CMSType, P extends PropertyOrBuilder<T, any> = PropertyOrBuilder<T, any>>(\n    property: P\n): P extends StringProperty ? StringProperty :\n    P extends NumberProperty ? NumberProperty :\n        P extends BooleanProperty ? BooleanProperty :\n            P extends TimestampProperty ? TimestampProperty :\n                P extends GeopointProperty ? GeopointProperty :\n                    P extends ReferenceProperty ? ReferenceProperty :\n                        P extends ArrayProperty ? ArrayProperty :\n                            P extends MapProperty ? MapProperty :\n                                P extends PropertyBuilder<T, any> ? PropertyBuilder<T, any> : any {\n    return property as any;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the properties keys.\n * @param properties\n * @category Builder\n */\nexport function buildProperties<M>(\n    properties: Properties<M>\n): Properties<M> {\n    return properties;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the properties keys.\n * @param propertiesOrBuilder\n * @category Builder\n */\nexport function buildPropertiesOrBuilder<M>(\n    propertiesOrBuilder: PropertiesOrBuilder<M>\n): PropertiesOrBuilder<M> {\n    return propertiesOrBuilder;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the properties keys.\n * @param enumValues\n * @category Builder\n */\nexport function buildEnumValues(\n    enumValues: EnumValues\n): EnumValues {\n    return enumValues;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the properties keys.\n * @param enumValueConfig\n * @category Builder\n */\nexport function buildEnumValueConfig(\n    enumValueConfig: EnumValueConfig\n): EnumValueConfig {\n    return enumValueConfig;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and preserve\n * the properties keys.\n * @param callbacks\n * @category Builder\n */\nexport function buildEntityCallbacks<M>(\n    callbacks: EntityCallbacks<M>\n): EntityCallbacks<M> {\n    return callbacks;\n}\n\n/**\n * Identity function we use to defeat the type system of Typescript and build\n * additional column delegates views with all its properties\n * @param additionalColumnDelegate\n * @category Builder\n */\nexport function buildAdditionalColumnDelegate<M extends { [Key: string]: any }, AdditionalKey extends string = string, UserType = User>(\n    additionalColumnDelegate: AdditionalColumnDelegate<M, AdditionalKey, UserType>\n): AdditionalColumnDelegate<M, AdditionalKey, UserType> {\n    return additionalColumnDelegate;\n}\n","import { useEffect, useState } from \"react\";\n\nimport {\n    Auth,\n    FacebookAuthProvider,\n    fetchSignInMethodsForEmail,\n    getAuth,\n    GithubAuthProvider,\n    GoogleAuthProvider,\n    OAuthProvider,\n    onAuthStateChanged,\n    signInWithEmailAndPassword,\n    signInWithPopup,\n    signOut,\n    TwitterAuthProvider,\n    User as FirebaseUser\n} from \"firebase/auth\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { AuthDelegate } from \"../../models\";\nimport {\n    FirebaseAuthDelegate,\n    FirebaseSignInOption,\n    FirebaseSignInProvider\n} from \"../models/auth\";\nimport {\n    createUserWithEmailAndPassword,\n    signInAnonymously\n} from \"@firebase/auth\";\n\ninterface FirebaseAuthHandlerProps {\n    firebaseApp?: FirebaseApp;\n    signInOptions: Array<FirebaseSignInProvider | FirebaseSignInOption>;\n}\n\n/**\n * Use this hook to build an {@link AuthDelegate} based on Firebase Auth\n * @category Firebase\n */\nexport const useFirebaseAuthDelegate = (\n    {\n        firebaseApp,\n        signInOptions\n    }: FirebaseAuthHandlerProps): FirebaseAuthDelegate => {\n\n    const [loggedUser, setLoggedUser] = useState<FirebaseUser | null | undefined>(undefined); // logged user, anonymous or logged out\n    const [authProviderError, setAuthProviderError] = useState<any>();\n    const [initialLoading, setInitialLoading] = useState(true);\n    const [authLoading, setAuthLoading] = useState(true);\n    const [loginSkipped, setLoginSkipped] = useState<boolean>(false);\n\n    function skipLogin() {\n        setLoginSkipped(true);\n        setLoggedUser(null);\n    }\n\n    useEffect(() => {\n        if (!firebaseApp) return;\n        const auth = getAuth(firebaseApp);\n        setLoggedUser(auth.currentUser)\n        return onAuthStateChanged(\n            auth,\n            updateFirebaseUser,\n            error => setAuthProviderError(error)\n        );\n    }, [firebaseApp]);\n\n    const updateFirebaseUser = async (firebaseUser: FirebaseUser | null) => {\n        setLoggedUser(firebaseUser);\n        setInitialLoading(false);\n        setAuthLoading(false);\n    };\n\n    function onSignOut() {\n        const auth = getAuth(firebaseApp);\n        signOut(auth)\n            .then(_ => {\n                setLoggedUser(null);\n                setAuthProviderError(null);\n            });\n        setLoginSkipped(false);\n    }\n\n    const getProviderOptions = (providerId: FirebaseSignInProvider): FirebaseSignInOption | undefined => {\n        return signInOptions.find((option) => {\n            if (option === null) throw Error(\"useFirebaseAuthDelegate\");\n            if (typeof option === \"object\" && option.provider === providerId)\n                return option as FirebaseSignInOption;\n            return undefined;\n        }) as FirebaseSignInOption | undefined;\n    }\n\n    const googleLogin = () => {\n        const provider = new GoogleAuthProvider();\n        const options = getProviderOptions(\"google.com\");\n        if (options?.scopes)\n            options.scopes.forEach((scope) => provider.addScope(scope));\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        signInWithPopup(auth, provider).catch(setAuthProviderError);\n    }\n\n    function doOauthLogin(auth: Auth, provider: OAuthProvider | FacebookAuthProvider | GithubAuthProvider | TwitterAuthProvider) {\n        setAuthLoading(true);\n        signInWithPopup(auth, provider)\n            .catch(setAuthProviderError)\n            .then(() => setAuthLoading(false));\n    }\n\n    const anonymousLogin = () => {\n        const auth = getAuth();\n        setAuthLoading(true);\n        signInAnonymously(auth)\n            .catch(setAuthProviderError)\n            .then(() => setAuthLoading(false));\n    }\n\n    const appleLogin = () => {\n        const provider = new OAuthProvider(\"apple.com\");\n        const options = getProviderOptions(\"apple.com\");\n        if (options?.scopes)\n            options.scopes.forEach((scope) => provider.addScope(scope));\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        doOauthLogin(auth, provider);\n    }\n\n    const facebookLogin = () => {\n        const provider = new FacebookAuthProvider();\n        const options = getProviderOptions(\"facebook.com\");\n        if (options?.scopes)\n            options.scopes.forEach((scope) => provider.addScope(scope));\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        doOauthLogin(auth, provider);\n    }\n\n    const githubLogin = () => {\n        const provider = new GithubAuthProvider();\n        const options = getProviderOptions(\"github.com\");\n        if (options?.scopes)\n            options.scopes.forEach((scope) => provider.addScope(scope));\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        doOauthLogin(auth, provider);\n    }\n\n    const microsoftLogin = () => {\n        const provider = new OAuthProvider(\"microsoft.com\");\n        const options = getProviderOptions(\"microsoft.com\");\n        if (options?.scopes)\n            options.scopes.forEach((scope) => provider.addScope(scope));\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        doOauthLogin(auth, provider);\n    }\n\n    const twitterLogin = () => {\n        const provider = new TwitterAuthProvider();\n        const options = getProviderOptions(\"twitter.com\");\n        if (options?.customParameters)\n            provider.setCustomParameters(options.customParameters);\n        const auth = getAuth();\n        doOauthLogin(auth, provider);\n    }\n\n    const emailPasswordLogin = (email: string, password: string) => {\n        const auth = getAuth();\n        setAuthLoading(true);\n        signInWithEmailAndPassword(auth, email, password)\n            .catch(setAuthProviderError)\n            .then(() => setAuthLoading(false));\n    }\n\n    const registerWithPasswordEmail = (email: string, password: string) => {\n        const auth = getAuth();\n        setAuthLoading(true);\n        createUserWithEmailAndPassword(auth, email, password)\n            .catch(setAuthProviderError)\n            .then(() => setAuthLoading(false));\n    }\n\n    const getSignInMethodsForEmail = (email: string): Promise<string[]> => {\n        const auth = getAuth();\n        setAuthLoading(true);\n        return fetchSignInMethodsForEmail(auth, email)\n            .then((res) => {\n                setAuthLoading(false);\n                return res;\n            });\n    }\n\n    return {\n        user: loggedUser ?? null,\n        authError: authProviderError,\n        authLoading,\n        initialLoading,\n        signOut: onSignOut,\n        loginSkipped,\n        skipLogin,\n        googleLogin,\n        anonymousLogin,\n        appleLogin,\n        facebookLogin,\n        githubLogin,\n        microsoftLogin,\n        twitterLogin,\n        emailPasswordLogin,\n        fetchSignInMethodsForEmail: getSignInMethodsForEmail,\n        createUserWithEmailAndPassword: registerWithPasswordEmail\n    };\n};\n","import {\n    DataSource,\n    DeleteEntityProps,\n    Entity,\n    EntityReference,\n    EntitySchema,\n    EntitySchemaResolver,\n    EntityValues,\n    FetchCollectionProps,\n    FetchEntityProps,\n    FilterValues,\n    GeoPoint,\n    ListenCollectionProps,\n    ListenEntityProps,\n    Properties,\n    Property,\n    ResolvedEntitySchema,\n    SaveEntityProps,\n    WhereFilterOp\n} from \"../../models\";\nimport {\n    computeSchema,\n    sanitizeData,\n    updateAutoValues\n} from \"../../core/utils\";\nimport {\n    collection,\n    CollectionReference,\n    deleteDoc,\n    doc,\n    DocumentReference,\n    DocumentSnapshot,\n    Firestore,\n    GeoPoint as FirestoreGeoPoint,\n    getDoc,\n    getDocs,\n    getFirestore,\n    limit as limitClause,\n    onSnapshot,\n    orderBy as orderByClause,\n    Query,\n    query,\n    serverTimestamp,\n    setDoc,\n    startAfter as startAfterClause,\n    Timestamp,\n    where as whereClause\n} from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { FirestoreTextSearchController } from \"../models/text_search\";\nimport { useEffect, useRef } from \"react\";\n\n/**\n * @category Firebase\n */\nexport interface FirestoreDataSourceProps {\n    firebaseApp?: FirebaseApp,\n    textSearchController?: FirestoreTextSearchController,\n}\n\n/**\n * Use this hook to build a {@link DataSource} based on Firestore\n * @param firebaseApp\n * @param textSearchController\n * @category Firebase\n */\nexport function useFirestoreDataSource({\n                                           firebaseApp,\n                                           textSearchController\n                                       }: FirestoreDataSourceProps): DataSource {\n\n    const firestoreRef = useRef<Firestore>();\n    const firestore = firestoreRef.current;\n\n    useEffect(() => {\n        if (!firebaseApp) return;\n        firestoreRef.current = getFirestore(firebaseApp);\n    }, [firebaseApp]);\n\n\n    /**\n     *\n     * @param doc\n     * @param path\n     * @param resolvedSchema\n     * @category Firestore\n     */\n    function createEntityFromSchema<M extends { [Key: string]: any }>\n    (\n        doc: DocumentSnapshot,\n        path: string,\n        resolvedSchema: ResolvedEntitySchema<M>\n    ): Entity<M> {\n\n        const values = firestoreToCMSModel(doc.data());\n        const data = doc.data()\n            ? resolvedSchema.properties\n                ? sanitizeData(values as EntityValues<M>, resolvedSchema.properties)\n                : doc.data()\n            : undefined;\n        return {\n            id: doc.id,\n            path: getCMSPathFromFirestorePath(doc.ref.path),\n            values: data\n        };\n    }\n\n    function buildQuery<M>(path: string, filter: FilterValues<M> | undefined, orderBy: string | undefined, order: \"desc\" | \"asc\" | undefined, startAfter: any[] | undefined, limit: number | undefined) {\n\n        if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n\n        const collectionReference: Query = collection(firestore, path);\n\n        const queryParams = [];\n        if (filter) {\n            Object.entries(filter)\n                .filter(([_, entry]) => !!entry)\n                .forEach(([key, filterParameter]) => {\n                    const [op, value] = filterParameter as [WhereFilterOp, any];\n                    queryParams.push(whereClause(key, op, cmsToFirestoreModel(value, firestore)));\n                });\n        }\n\n        if (filter && orderBy && order) {\n            Object.entries(filter).forEach(([key, value]) => {\n                if (key !== orderBy) {\n                    queryParams.push(orderByClause(key, \"asc\"));\n                }\n            });\n        }\n\n        if (orderBy && order) {\n            queryParams.push(orderByClause(orderBy, order));\n        }\n\n        if (startAfter) {\n            queryParams.push(startAfterClause(startAfter));\n        }\n\n        if (limit) {\n            queryParams.push(limitClause(limit));\n        }\n\n        return query(collectionReference, ...queryParams);\n    }\n\n    function getAndBuildEntity<M>(path: string,\n                                  entityId: string,\n                                  schema: EntitySchema<M> | EntitySchemaResolver<M>) {\n        if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n\n        return getDoc(doc(firestore, path, entityId))\n            .then((docSnapshot) => {\n                const resolvedSchema = computeSchema({\n                    schemaOrResolver: schema,\n                    entityId: docSnapshot.id,\n                    path\n                });\n                return createEntityFromSchema(docSnapshot, path, resolvedSchema);\n            });\n    }\n\n    async function performTextSearch<M>(path: string,\n                                        searchString: string,\n                                        schema: EntitySchema<M> | EntitySchemaResolver<M>): Promise<Entity<M>[]> {\n        if (!textSearchController)\n            throw Error(\"Trying to make text search without specifying a FirestoreTextSearchController\");\n        const ids = await textSearchController({ path, searchString });\n        if (ids === undefined)\n            throw Error(\"The current path is not supported by the specified FirestoreTextSearchController\");\n        const promises: Promise<Entity<M> | null>[] = ids\n            .map(async (entityId) => {\n                    try {\n                        return await getAndBuildEntity(path, entityId, schema);\n                    } catch (e) {\n                        console.error(e);\n                        return null;\n                    }\n                }\n            );\n        return Promise.all(promises)\n            .then((res) => res.filter((e) => e !== null && e.values) as Entity<M>[]);\n    }\n\n    return {\n\n        /**\n         * Fetch entities in a Firestore path\n         * @param path\n         * @param schema\n         * @param filter\n         * @param limit\n         * @param startAfter\n         * @param searchString\n         * @param orderBy\n         * @param order\n         * @return Function to cancel subscription\n         * @see useCollectionFetch if you need this functionality implemented as a hook\n         * @category Firestore\n         */\n        fetchCollection<M extends { [Key: string]: any }>({\n                                                              path,\n                                                              schema,\n                                                              filter,\n                                                              limit,\n                                                              startAfter,\n                                                              searchString,\n                                                              orderBy,\n                                                              order\n                                                          }: FetchCollectionProps<M>\n        ): Promise<Entity<M>[]> {\n\n            if (searchString) {\n                return performTextSearch(path, searchString, schema);\n            }\n\n            console.debug(\"Fetching collection\", path, limit, filter, startAfter, orderBy, order);\n            const query = buildQuery(path, filter, orderBy, order, startAfter, limit);\n\n            const resolvedSchema = computeSchema({\n                schemaOrResolver: schema,\n                path\n            });\n            return getDocs(query)\n                .then((snapshot) =>\n                    snapshot.docs.map((doc) => createEntityFromSchema(doc, path, resolvedSchema)));\n        },\n\n\n        /**\n         * Listen to a entities in a given path\n         * @param path\n         * @param schema\n         * @param onSnapshot\n         * @param onError\n         * @param filter\n         * @param limit\n         * @param startAfter\n         * @param orderBy\n         * @param order\n         * @return Function to cancel subscription\n         * @see useCollectionFetch if you need this functionality implemented as a hook\n         * @category Firestore\n         */\n        listenCollection<M extends { [Key: string]: any }>(\n            {\n                path,\n                schema,\n                filter,\n                limit,\n                startAfter,\n                searchString,\n                orderBy,\n                order,\n                onUpdate,\n                onError\n            }: ListenCollectionProps<M>\n        ): () => void {\n\n            console.debug(\"Listening collection\", path, limit, filter, startAfter, orderBy, order);\n\n            const query = buildQuery(path, filter, orderBy, order, startAfter, limit);\n\n            if (searchString) {\n                performTextSearch(path, searchString, schema)\n                    .then(onUpdate)\n                    .catch((e) => {\n                        if (onError) onError(e);\n                    });\n                return () => {\n                };\n            }\n\n            const resolvedSchema = computeSchema({\n                schemaOrResolver: schema,\n                path\n            });\n\n            return onSnapshot(query,\n                {\n                    next: (snapshot) => {\n                        onUpdate(snapshot.docs.map((doc) => createEntityFromSchema(doc, path, resolvedSchema)));\n                    },\n                    error: onError\n                }\n            );\n        },\n\n\n        /**\n         * Retrieve an entity given a path and a schema\n         * @param path\n         * @param entityId\n         * @param schema\n         * @category Firestore\n         */\n        fetchEntity<M extends { [Key: string]: any }>({\n                                                          path,\n                                                          entityId,\n                                                          schema\n                                                      }: FetchEntityProps<M>\n        ): Promise<Entity<M>> {\n            return getAndBuildEntity(path, entityId, schema);\n        },\n\n        /**\n         *\n         * @param path\n         * @param entityId\n         * @param schema\n         * @param onUpdate\n         * @param onError\n         * @return Function to cancel subscription\n         * @category Firestore\n         */\n        listenEntity<M extends { [Key: string]: any }>(\n            {\n                path,\n                entityId,\n                schema,\n                onUpdate,\n                onError\n            }: ListenEntityProps<M>): () => void {\n            if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n            // console.debug(\"Listening entity\", path, entityId);\n            return onSnapshot(\n                doc(firestore, path, entityId),\n                {\n                    next: (docSnapshot) => {\n                        const resolvedSchema = computeSchema({\n                            schemaOrResolver: schema,\n                            entityId: docSnapshot.id,\n                            path\n                        });\n                        onUpdate(createEntityFromSchema(docSnapshot, path, resolvedSchema));\n                    },\n                    error: onError\n                }\n            );\n        },\n\n\n        /**\n         * Save entity to the specified path. Note that Firestore does not allow\n         * undefined values.\n         * @param path\n         * @param entityId\n         * @param values\n         * @param schema\n         * @param status\n         * @category Firestore\n         */\n        saveEntity: async function <M extends { [Key: string]: any }>(\n            {\n                path,\n                entityId,\n                values,\n                schema,\n                status\n            }: SaveEntityProps<M>): Promise<Entity<M>> {\n\n            if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n            const resolvedSchema = computeSchema({\n                schemaOrResolver: schema,\n                entityId,\n                path\n            });\n            const properties: Properties<M> = resolvedSchema.properties;\n            const collectionReference: CollectionReference = collection(firestore, path);\n\n            const updatedFirestoreValues: EntityValues<M> = updateAutoValues(\n                {\n                    inputValues: values,\n                    properties,\n                    status,\n                    timestampNowValue: serverTimestamp(),\n                    referenceConverter: (value: EntityReference) => doc(firestore, value.path, value.id),\n                    geopointConverter: (value: GeoPoint) => new FirestoreGeoPoint(value.latitude, value.longitude)\n                });\n\n            console.debug(\"Saving entity\", path, entityId, updatedFirestoreValues);\n\n            let documentReference: DocumentReference;\n            if (entityId)\n                documentReference = doc(collectionReference, entityId);\n            else\n                documentReference = doc(collectionReference);\n\n            return setDoc(documentReference, updatedFirestoreValues, { merge: true }).then(() => ({\n                id: documentReference.id,\n                path: documentReference.path,\n                values: firestoreToCMSModel(updatedFirestoreValues) as EntityValues<M>\n            }));\n        },\n\n        /**\n         * Delete an entity\n         * @param entity\n         * @param schema\n         * @category Firestore\n         */\n        async deleteEntity<M extends { [Key: string]: any }>(\n            {\n                entity\n            }: DeleteEntityProps<M>\n        ): Promise<void> {\n            if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n            return deleteDoc(doc(firestore, entity.path, entity.id));\n        },\n\n        /**\n         * Check if the given property is unique in the given collection\n         * @param path Collection path\n         * @param name of the property\n         * @param value\n         * @param property\n         * @param entityId\n         * @return `true` if there are no other fields besides the given entity\n         * @category Firestore\n         */\n        checkUniqueField(\n            path: string,\n            name: string,\n            value: any,\n            property: Property,\n            entityId?: string\n        ): Promise<boolean> {\n\n            if (!firestore) throw Error(\"useFirestoreDataSource Firestore not initialised\");\n\n            console.debug(\"Check unique field entity\", path, name, value, entityId);\n\n            if (property.dataType === \"array\") {\n                console.error(\"checkUniqueField received an array\");\n            }\n\n            if (value === undefined || value === null) {\n                return Promise.resolve(true);\n            }\n            const q = query(collection(firestore, path), whereClause(name, \"==\", value));\n            return getDocs(q)\n                .then((snapshots) =>\n                    snapshots.docs.filter(doc => doc.id !== entityId).length === 0\n                );\n\n        }\n    };\n\n}\n\n\n/**\n * Recursive function that converts Firestore data types into CMS or plain\n * JS types.\n * FireCMS uses Javascript dates internally instead of Firestore timestamps.\n * This makes it easier to interact with the rest of the libraries and\n * bindings.\n * Also, Firestore references are replaced with {@link EntityReference}\n * @param data\n * @category Firestore\n */\nexport function firestoreToCMSModel<M>(data: any): any {\n    const traverse = (input: any): any => {\n        if (input == null) return input;\n        if (serverTimestamp().isEqual(input)) {\n            return null;\n        }\n        if (input instanceof Timestamp) {\n            return input.toDate();\n        }\n        if (input instanceof GeoPoint) {\n            return new GeoPoint(input.latitude, input.longitude);\n        }\n        if (input instanceof DocumentReference) {\n            return new EntityReference(input.id, getCMSPathFromFirestorePath(input.path));\n        }\n        if (Array.isArray(input)) {\n            return input.map(traverse);\n        }\n        if (typeof input === \"object\") {\n            const result = {}\n            for (const key of Object.keys(input)) {\n                result[key] = traverse(input[key]);\n            }\n            return result;\n        }\n        return input;\n    }\n    return traverse(data)\n}\n\nexport function cmsToFirestoreModel(data: any, firestore: Firestore): any {\n    if (Array.isArray(data)) {\n        return data.map(v => cmsToFirestoreModel(v, firestore));\n    } else if (data instanceof EntityReference) {\n        return doc(firestore, data.path, data.id);\n    } else if (data instanceof GeoPoint) {\n        return new FirestoreGeoPoint(data.latitude, data.longitude);\n    } else if (typeof data === \"object\") {\n        return Object.entries(data)\n            .map(([key, v]) => ({ [key]: cmsToFirestoreModel(v, firestore) }))\n            .reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    return data;\n}\n\n/**\n * Remove id from Firestore path\n * @param fsPath\n */\nfunction getCMSPathFromFirestorePath(fsPath: string): string {\n    let to = fsPath.lastIndexOf(\"/\");\n    to = to === -1 ? fsPath.length : to;\n    return fsPath.substring(0, to);\n}\n","import { FirebaseApp } from \"firebase/app\";\nimport {\n    FirebaseStorage,\n    getDownloadURL,\n    getStorage,\n    ref,\n    uploadBytes\n} from \"firebase/storage\";\nimport { StorageSource, UploadFileProps } from \"../../models\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * @category Firebase\n */\nexport interface FirebaseStorageSourceProps {\n    firebaseApp?: FirebaseApp\n}\n\n/**\n * Use this hook to build an {@link StorageSource} based on Firebase storage\n * @category Firebase\n */\nexport function useFirebaseStorageSource({ firebaseApp }: FirebaseStorageSourceProps): StorageSource {\n\n    const [storage, setStorage] = useState<FirebaseStorage>();\n\n    useEffect(() => {\n        if (!firebaseApp) return;\n        setStorage(getStorage(firebaseApp));\n    }, [firebaseApp]);\n\n    const urlsCache: any = {};\n\n    return {\n        uploadFile({ file, fileName, path, metadata }: UploadFileProps)\n            : Promise<any> {\n            if (!storage) throw Error(\"useFirebaseStorageSource Firebase not initialised\");\n            const usedFilename = fileName ?? file.name;\n            console.debug(\"Uploading file\", usedFilename, file, path, metadata);\n            return uploadBytes(ref(storage, `${path}/${usedFilename}`), file, metadata).then(snapshot => ({\n                path: snapshot.ref.fullPath\n            }));\n        },\n\n        getDownloadURL(storagePath: string): Promise<string> {\n            if (!storage) throw Error(\"useFirebaseStorageSource Firebase not initialised\");\n            if (urlsCache[storagePath])\n                return urlsCache[storagePath];\n            const downloadURL = getDownloadURL(ref(storage, storagePath));\n            urlsCache[storagePath] = downloadURL;\n            return downloadURL;\n        }\n    };\n}\n","import React, { useCallback, useEffect } from \"react\";\n\nimport { FirebaseApp, initializeApp } from \"firebase/app\";\n\n/**\n * @category Firebase\n */\nexport interface InitialiseFirebaseResult {\n    firebaseConfigLoading: boolean,\n    firebaseApp?: FirebaseApp;\n    configError?: string,\n    firebaseConfigError?: Error\n}\n\n/**\n * Function used to initialise Firebase, either by using the provided config,\n * or by fetching it by Firebase Hosting, if not specified.\n *\n * It works as a hook that gives you the loading state and the used\n * configuration.\n *\n * You most likely only need to use this if you are developing a custom app\n * that is not using {@link FirebaseCMSApp}. You can also not use this component\n * and initialise Firebase yourself.\n *\n * @param onFirebaseInit\n * @param firebaseConfig\n * @category Firebase\n */\nexport function useInitialiseFirebase({ firebaseConfig, onFirebaseInit }: {\n    onFirebaseInit?: ((config: object) => void) | undefined,\n    firebaseConfig: Object | undefined\n}): InitialiseFirebaseResult {\n\n    const [firebaseApp, setFirebaseApp] = React.useState<FirebaseApp | undefined>();\n    const [firebaseConfigLoading, setFirebaseConfigLoading] = React.useState<boolean>(false);\n    const [configError, setConfigError] = React.useState<string>();\n    const [firebaseConfigError, setFirebaseConfigError] = React.useState<Error | undefined>();\n\n    const initFirebase = useCallback((config: Object) => {\n        try {\n            const initialisedFirebaseApp = initializeApp(config);\n            setFirebaseConfigError(undefined);\n            setFirebaseConfigLoading(false);\n            if (onFirebaseInit)\n                onFirebaseInit(config);\n            setFirebaseApp(initialisedFirebaseApp);\n        } catch (e: any) {\n            console.error(e);\n            setFirebaseConfigError(e);\n        }\n    }, [onFirebaseInit]);\n\n    useEffect(() => {\n\n        setFirebaseConfigLoading(true);\n\n        if (firebaseConfig) {\n            console.log(\"Using specified config\", firebaseConfig);\n            initFirebase(firebaseConfig);\n        } else if (process.env.NODE_ENV === \"production\") {\n            fetch(\"/__/firebase/init.json\")\n                .then(async response => {\n                    console.debug(\"Firebase init response\", response.status);\n                    if (response && response.status < 300) {\n                        const config = await response.json();\n                        console.log(\"Using configuration fetched from Firebase Hosting\", config);\n                        initFirebase(config);\n                    }\n                })\n                .catch(e => {\n                        setFirebaseConfigLoading(false);\n                        setConfigError(\n                            \"Could not load Firebase configuration from Firebase hosting. \" +\n                            \"If the app is not deployed in Firebase hosting, you need to specify the configuration manually\" +\n                            e.toString()\n                        );\n                    }\n                );\n        } else {\n            setFirebaseConfigLoading(false);\n            setConfigError(\n                \"You need to deploy the app to Firebase hosting or specify a Firebase configuration object\"\n            );\n        }\n    }, [firebaseConfig, initFirebase]);\n\n    return {\n        firebaseApp,\n        firebaseConfigLoading,\n        configError,\n        firebaseConfigError\n    };\n}\n","export const googleIcon = (mode: \"light\" | \"dark\") => <>\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 64 64\"\n        width={32}\n        height={32}\n    >\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJb\"\n            x1=\"29.401\"\n            x2=\"29.401\"\n            y1=\"4.064\"\n            y2=\"106.734\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#ff5840\"/>\n            <stop offset=\".007\" stopColor=\"#ff5840\"/>\n            <stop offset=\".989\" stopColor=\"#fa528c\"/>\n            <stop offset=\"1\" stopColor=\"#fa528c\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJb)\"\n            d=\"M47.46,15.5l-1.37,1.48c-1.34,1.44-3.5,1.67-5.15,0.6c-2.71-1.75-6.43-3.13-11-2.37 c-4.94,0.83-9.17,3.85-11.64, 7.97l-8.03-6.08C14.99,9.82,23.2,5,32.5,5c5,0,9.94,1.56,14.27,4.46 C48.81,10.83,49.13,13.71,47.46,15.5z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJc\"\n            x1=\"12.148\"\n            x2=\"12.148\"\n            y1=\".872\"\n            y2=\"47.812\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#feaa53\"/>\n            <stop offset=\".612\" stopColor=\"#ffcd49\"/>\n            <stop offset=\"1\" stopColor=\"#ffde44\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJc)\"\n            d=\"M16.01,30.91c-0.09,2.47,0.37,4.83,1.27,6.96l-8.21,6.05c-1.35-2.51-2.3-5.28-2.75-8.22 c-1.06-6.88,0.54-13.38, 3.95-18.6l8.03,6.08C16.93,25.47,16.1,28.11,16.01,30.91z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJd\"\n            x1=\"29.76\"\n            x2=\"29.76\"\n            y1=\"32.149\"\n            y2=\"-6.939\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#42d778\"/>\n            <stop offset=\".428\" stopColor=\"#3dca76\"/>\n            <stop offset=\"1\" stopColor=\"#34b171\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJd)\"\n            d=\"M50.45,51.28c-4.55,4.07-10.61,6.57-17.36,6.71C22.91,58.2,13.66,52.53,9.07,43.92l8.21-6.05 C19.78,43.81, 25.67,48,32.5,48c3.94,0,7.52-1.28,10.33-3.44L50.45,51.28z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJe\"\n            x1=\"46\"\n            x2=\"46\"\n            y1=\"3.638\"\n            y2=\"35.593\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#155cde\"/>\n            <stop offset=\".278\" stopColor=\"#1f7fe5\"/>\n            <stop offset=\".569\" stopColor=\"#279ceb\"/>\n            <stop offset=\".82\" stopColor=\"#2cafef\"/>\n            <stop offset=\"1\" stopColor=\"#2eb5f0\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJe)\"\n            d=\"M59,31.97c0.01,7.73-3.26,14.58-8.55,19.31l-7.62-6.72c2.1-1.61,3.77-3.71,4.84-6.15\n        c0.29-0.66-0.2-1.41-0.92-1.41H37c-2.21,0-4-1.79-4-4v-2c0-2.21,1.79-4,4-4h17C56.75,27,59,29.22,59,31.97z\"\n        />\n    </svg>\n</>;\n\nexport const appleIcon = (mode: \"light\" | \"dark\") => <svg width={32} height={32}\n                                                          viewBox=\"0 0 56 56\"\n                                                          style={{ transform: \"scale(2.8)\" }}\n                                                          version=\"1.1\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke={mode === \"light\" ? \"#424245\" : \"white\"} strokeWidth=\"0.5\"\n       fillRule=\"evenodd\">\n        <path\n            d=\"M28.2226562,20.3846154 C29.0546875,20.3846154 30.0976562,19.8048315 30.71875,19.0317864 C31.28125,18.3312142 31.6914062,17.352829 31.6914062,16.3744437 C31.6914062,16.2415766 31.6796875,16.1087095 31.65625,16 C30.7304687,16.0362365 29.6171875,16.640178 28.9492187,17.4494596 C28.421875,18.06548 27.9414062,19.0317864 27.9414062,20.0222505 C27.9414062,20.1671964 27.9648438,20.3121424 27.9765625,20.3604577 C28.0351562,20.3725366 28.1289062,20.3846154 28.2226562,20.3846154 Z M25.2929688,35 C26.4296875,35 26.9335938,34.214876 28.3515625,34.214876 C29.7929688,34.214876 30.109375,34.9758423 31.375,34.9758423 C32.6171875,34.9758423 33.4492188,33.792117 34.234375,32.6325493 C35.1132812,31.3038779 35.4765625,29.9993643 35.5,29.9389701 C35.4179688,29.9148125 33.0390625,28.9122695 33.0390625,26.0979021 C33.0390625,23.6579784 34.9140625,22.5588048 35.0195312,22.474253 C33.7773438,20.6382708 31.890625,20.5899555 31.375,20.5899555 C29.9804688,20.5899555 28.84375,21.4596313 28.1289062,21.4596313 C27.3554688,21.4596313 26.3359375,20.6382708 25.1289062,20.6382708 C22.8320312,20.6382708 20.5,22.5950413 20.5,26.2911634 C20.5,28.5861411 21.3671875,31.013986 22.4335938,32.5842339 C23.3476562,33.9129053 24.1445312,35 25.2929688,35 Z\"\n            fill={mode === \"light\" ? \"#424245\" : \"white\"} fillRule=\"nonzero\"/>\n    </g>\n</svg>;\n\nexport const githubIcon = (mode: \"light\" | \"dark\") => <svg\n    fill={mode === \"light\" ? \"#1c1e21\" : \"white\"}\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    width={28}\n    height={28}\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n</svg>;\n\n\nexport const facebookIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={28} height={28}\n    viewBox=\"0 0 90 90\">\n    <g>\n        <path\n            d=\"M90,15.001C90,7.119,82.884,0,75,0H15C7.116,0,0,7.119,0,15.001v59.998   C0,82.881,7.116,90,15.001,90H45V56H34V41h11v-5.844C45,25.077,52.568,16,61.875,16H74v15H61.875C60.548,31,59,32.611,59,35.024V41   h15v15H59v34h16c7.884,0,15-7.119,15-15.001V15.001z\"\n            fill={mode === \"light\" ? \"#39569c\" : \"white\"}/>\n    </g>\n</svg>;\n\nexport const microsoftIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\" width={28} height={28}\n    viewBox=\"0 0 480 480\">\n    <g>\n        <path\n            d=\"M0.176,224L0.001,67.963l192-26.072V224H0.176z M224.001,37.241L479.937,0v224H224.001V37.241z M479.999,256l-0.062,224   l-255.936-36.008V256H479.999z M192.001,439.918L0.157,413.621L0.147,256h191.854V439.918z\"\n            fill={mode === \"light\" ? \"#00a2ed\" : \"white\"}/>\n    </g>\n</svg>;\n\nexport const twitterIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\" width={28} height={28}\n    viewBox=\"0 0 24 24\">\n    <path fill={mode === \"light\" ? \"#00acee\" : \"white\"}\n          d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n</svg>;\n\n","import React, { ReactNode, useEffect, useRef, useState } from \"react\";\n\nimport {\n    Box,\n    Button,\n    CircularProgress,\n    Fade,\n    Grid,\n    IconButton,\n    Slide,\n    TextField,\n    Theme,\n    Typography\n} from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { FirebaseApp } from \"firebase/app\";\nimport { FireCMSLogo } from \"../../core/components/FireCMSLogo\";\nimport { useAuthController, useModeState } from \"../../hooks\";\nimport {\n    FirebaseAuthDelegate,\n    FirebaseSignInOption,\n    FirebaseSignInProvider\n} from \"../models/auth\";\nimport {\n    appleIcon,\n    facebookIcon,\n    githubIcon,\n    googleIcon,\n    microsoftIcon,\n    twitterIcon\n} from \"./social_icons\";\nimport { ErrorView } from \"../../core\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        logo: {\n            padding: theme.spacing(3),\n            width: 260,\n            height: 260\n        }\n    })\n);\n\n/**\n * @category Firebase\n */\nexport interface FirebaseLoginViewProps {\n    logo?: string;\n    allowSkipLogin?: boolean;\n    signInOptions: Array<FirebaseSignInProvider | FirebaseSignInOption>;\n    firebaseApp: FirebaseApp;\n    authDelegate: FirebaseAuthDelegate;\n    /**\n     * Prevent users from creating new users in when the `signInOptions` value\n     * is `password`. This does not apply to the rest of login providers.\n     */\n    disableSignupScreen?: boolean;\n    /**\n     * Display this component when no user is found a user tries to log in\n     * when the `signInOptions` value is `password`.\n     */\n    NoUserComponent?: ReactNode;\n}\n\n/**\n * Use this component to render a login view, that updates\n * the state of the {@link AuthController} based on the result\n * @constructor\n * @category Firebase\n */\nexport function FirebaseLoginView({\n                                      allowSkipLogin,\n                                      logo,\n                                      signInOptions,\n                                      firebaseApp,\n                                      authDelegate,\n                                      NoUserComponent,\n                                      disableSignupScreen = false\n                                  }: FirebaseLoginViewProps) {\n    const classes = useStyles();\n    const authController = useAuthController();\n    const modeState = useModeState();\n\n    const [passwordLoginSelected, setPasswordLoginSelected] = useState(false);\n\n    const resolvedSignInOptions: FirebaseSignInProvider[] = signInOptions.map((o) => {\n        if (typeof o === \"object\") {\n            return o.provider;\n        } else return o as FirebaseSignInProvider;\n    })\n\n    function buildErrorView() {\n        let errorView: any;\n        const ignoredCodes = [\"auth/popup-closed-by-user\", \"auth/cancelled-popup-request\"];\n        if (authDelegate.authError) {\n            if (authDelegate.authError.code === \"auth/operation-not-allowed\") {\n                errorView =\n                    <>\n                        <Box p={1}>\n                            <ErrorView\n                                error={\"You need to enable the corresponding login provider in your Firebase project\"}/>\n                        </Box>\n\n                        {firebaseApp &&\n                        <Box p={1}>\n                            <a href={`https://console.firebase.google.com/project/${firebaseApp.options.projectId}/authentication/providers`}\n                               rel=\"noopener noreferrer\"\n                               target=\"_blank\">\n                                <Button variant=\"text\"\n                                        color=\"primary\">\n                                    Open Firebase configuration\n                                </Button>\n                            </a>\n                        </Box>}\n                    </>;\n            } else if (!ignoredCodes.includes(authDelegate.authError.code)) {\n                console.error(authDelegate.authError);\n                errorView =\n                    <Box p={1}>\n                        <ErrorView error={authDelegate.authError.message}/>\n                    </Box>;\n            }\n        }\n        return errorView;\n    }\n\n    let logoComponent;\n    if (logo) {\n        logoComponent = <img className={classes.logo}\n                             src={logo}\n                             alt={\"Logo\"}/>;\n    } else {\n        logoComponent = <div className={classes.logo}>\n            <FireCMSLogo/>\n        </div>;\n    }\n\n    let notAllowedMessage: string | undefined;\n    if (authController.notAllowedError) {\n        if (typeof authController.notAllowedError === \"string\") {\n            notAllowedMessage = authController.notAllowedError;\n        } else if (authController.notAllowedError instanceof Error) {\n            notAllowedMessage = authController.notAllowedError.message;\n        } else {\n            notAllowedMessage = \"It looks like you don't have access to the CMS, based on the specified Authenticator configuration\";\n        }\n    }\n\n\n    return (\n        <Fade\n            in={true}\n            timeout={500}\n            mountOnEnter\n            unmountOnExit>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                minHeight: \"100vh\",\n                p: 2\n            }}>\n                <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    maxWidth: 340\n                }}>\n\n                    <Box m={1}>\n                        {logoComponent}\n                    </Box>\n\n                    {notAllowedMessage &&\n                    <Box p={2}>\n                        <ErrorView\n                            error={notAllowedMessage}/>\n                    </Box>}\n\n                    {buildErrorView()}\n\n                    {!passwordLoginSelected && <>\n\n                        {buildOauthLoginButtons(authDelegate, resolvedSignInOptions, modeState.mode)}\n\n                        {resolvedSignInOptions.includes(\"password\") &&\n                        <LoginButton\n                            text={\"Email/password\"}\n                            icon={<EmailIcon fontSize={\"large\"}/>}\n                            onClick={() => setPasswordLoginSelected(true)}/>}\n\n\n                        {resolvedSignInOptions.includes(\"anonymous\") &&\n                        <LoginButton\n                            text={\"Log in anonymously\"}\n                            icon={<PersonOutlineIcon fontSize={\"large\"}/>}\n                            onClick={authDelegate.anonymousLogin}/>}\n\n                        {allowSkipLogin &&\n                        <Box m={1}>\n                            <Button onClick={authDelegate.skipLogin}>\n                                Skip login\n                            </Button>\n                        </Box>\n                        }\n\n                    </>}\n\n                    {passwordLoginSelected && <LoginForm\n                        authDelegate={authDelegate}\n                        onClose={() => setPasswordLoginSelected(false)}\n                        mode={modeState.mode}\n                        NoUserComponent={NoUserComponent}\n                        disableSignupScreen={disableSignupScreen}\n                    />}\n\n                </Box>\n            </Box>\n        </Fade>\n    );\n}\n\nfunction LoginButton({\n                         icon,\n                         onClick,\n                         text\n                     }: { icon: React.ReactNode, onClick: () => void, text: string }) {\n    return (\n        <Box m={0.5} width={\"100%\"}>\n            <Button fullWidth\n                    variant=\"outlined\"\n                    onClick={onClick}>\n                <Box sx={{\n                    p: \"1\",\n                    display: \"flex\",\n                    width: \"240px\",\n                    height: \"32px\",\n                    alignItems: \"center\",\n                    justifyItems: \"center\"\n                }}>\n                    <Box sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        width: \"32px\",\n                        alignItems: \"center\",\n                        justifyItems: \"center\"\n                    }}>\n                        {icon}\n                    </Box>\n                    <Box sx={{\n                        flexGrow: 1,\n                        pl: 2,\n                        textAlign: \"center\"\n                    }}>{text}</Box>\n                </Box>\n            </Button>\n        </Box>\n    )\n}\n\nfunction LoginForm({\n                       onClose,\n                       authDelegate,\n                       mode,\n                       NoUserComponent,\n                       disableSignupScreen\n                   }: {\n    onClose: () => void,\n    authDelegate: FirebaseAuthDelegate,\n    mode: \"light\" | \"dark\",\n    NoUserComponent?: ReactNode,\n    disableSignupScreen: boolean\n}) {\n\n    const passwordRef = useRef<HTMLInputElement | null>(null);\n\n    const [email, setEmail] = useState<string>();\n    const [availableProviders, setAvailableProviders] = useState<string[] | undefined>();\n    const [password, setPassword] = useState<string>();\n\n    const shouldShowEmail = availableProviders === undefined;\n    const loginMode = availableProviders && availableProviders.includes(\"password\");\n    const otherProvidersMode = availableProviders && !availableProviders.includes(\"password\") && availableProviders.length > 0;\n    const registrationMode = availableProviders && !availableProviders.includes(\"password\");\n\n    useEffect(() => {\n        console.log(\"loginMode\", loginMode);\n        if ((loginMode || registrationMode) && passwordRef.current) {\n            passwordRef.current.focus()\n        }\n    }, [loginMode, registrationMode]);\n\n    useEffect(() => {\n        if (!document) return;\n        const escFunction = (event: any) => {\n            if (event.keyCode === 27) {\n                onClose();\n            }\n        };\n        document.addEventListener(\"keydown\", escFunction, false);\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [document]);\n\n    function handleEnterEmail() {\n        if (email) {\n            authDelegate.fetchSignInMethodsForEmail(email).then((availableProviders) => {\n                console.log(availableProviders);\n                setAvailableProviders(availableProviders)\n            });\n        }\n    }\n\n    function handleEnterPassword() {\n        if (email && password) {\n            authDelegate.emailPasswordLogin(email, password);\n        }\n    }\n\n    function handleRegistration() {\n        if (email && password) {\n            authDelegate.createUserWithEmailAndPassword(email, password);\n        }\n    }\n\n    const onBackPressed = () => {\n        if (shouldShowEmail) {\n            onClose();\n        } else {\n            setAvailableProviders(undefined);\n        }\n    }\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        if (shouldShowEmail) {\n            handleEnterEmail();\n        } else if (loginMode) {\n            handleEnterPassword();\n        } else if (registrationMode) {\n            handleRegistration();\n        }\n    }\n\n    const label = registrationMode\n        ? \"No user found with that email. Pick a password to create a new account\"\n        : (loginMode ? \"Please enter your password\" : \"Please enter your email\");\n    const button = registrationMode ? \"Create account\" : (loginMode ? \"Login\" : \"Ok\");\n\n    if (otherProvidersMode) {\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <IconButton\n                        onClick={onBackPressed}>\n                        <ArrowBackIcon sx={{ width: 20, height: 20 }}/>\n                    </IconButton>\n                </Grid>\n\n                <Grid item xs={12} sx={{ p: 1 }}>\n                    <Typography align={\"center\"} variant={\"subtitle2\"}>\n                        You already have an account\n                    </Typography>\n                    <Typography align={\"center\"} variant={\"body2\"}>\n                        You can use one of these\n                        methods to login with {email}\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    {availableProviders && buildOauthLoginButtons(authDelegate, availableProviders, mode)}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        <Slide\n            direction=\"up\"\n            in={true}\n            mountOnEnter\n            unmountOnExit>\n            <form onSubmit={handleSubmit}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <IconButton\n                            onClick={onBackPressed}>\n                            <ArrowBackIcon sx={{ width: 20, height: 20 }}/>\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={12} sx={{\n                        p: 1,\n                        display: (registrationMode && disableSignupScreen) ? \"none\" : \"flex\"\n                    }}>\n                        <Typography align={\"center\"}\n                                    variant={\"subtitle2\"}>{label}</Typography>\n                    </Grid>\n\n                    <Grid item xs={12}\n                          sx={{ display: shouldShowEmail ? \"inherit\" : \"none\" }}>\n                        <TextField placeholder=\"Email\" fullWidth autoFocus\n                                   value={email}\n                                   disabled={authDelegate.authLoading}\n                                   type=\"email\"\n                                   onChange={(event) => setEmail(event.target.value)}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        {registrationMode && NoUserComponent}\n                    </Grid>\n\n                    <Grid item xs={12}\n                          sx={{ display: loginMode || (registrationMode && !disableSignupScreen) ? \"inherit\" : \"none\" }}>\n                        <TextField placeholder=\"Password\" fullWidth\n                                   value={password}\n                                   disabled={authDelegate.authLoading}\n                                   inputRef={passwordRef}\n                                   type=\"password\"\n                                   onChange={(event) => setPassword(event.target.value)}/>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Box sx={{\n                            display: (registrationMode && disableSignupScreen) ? \"none\" : \"flex\",\n                            justifyContent: \"end\",\n                            alignItems: \"center\",\n                            width: \"100%\"\n                        }}>\n\n                            {authDelegate.authLoading &&\n                            <CircularProgress sx={{ p: 1 }} size={16}\n                                              thickness={8}/>\n                            }\n\n                            <Button type=\"submit\">\n                                {button}\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </form>\n        </Slide>\n    );\n\n}\n\nfunction buildOauthLoginButtons(authDelegate: FirebaseAuthDelegate, providers: string[], mode: \"light\" | \"dark\") {\n    return <>\n        {providers.includes(\"google.com\") && <LoginButton\n            text={\"Sign in with Google\"}\n            icon={googleIcon(mode)}\n            onClick={authDelegate.googleLogin}/>}\n\n        {providers.includes(\"microsoft.com\") && <LoginButton\n            text={\"Sign in with Microsoft\"}\n            icon={microsoftIcon(mode)}\n            onClick={authDelegate.microsoftLogin}/>}\n\n        {providers.includes(\"apple.com\") && <LoginButton\n            text={\"Sign in with Apple\"}\n            icon={appleIcon(mode)}\n            onClick={authDelegate.appleLogin}/>}\n\n        {providers.includes(\"github.com\") && <LoginButton\n            text={\"Sign in with Github\"}\n            icon={githubIcon(mode)}\n            onClick={authDelegate.githubLogin}/>}\n\n        {providers.includes(\"facebook.com\") && <LoginButton\n            text={\"Sign in with Facebook\"}\n            icon={facebookIcon(mode)}\n            onClick={authDelegate.facebookLogin}/>}\n\n        {providers.includes(\"twitter.com\") && <LoginButton\n            text={\"Sign in with Twitter\"}\n            icon={twitterIcon(mode)}\n            onClick={authDelegate.twitterLogin}/>}\n    </>\n}\n","import React from \"react\";\n\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport {\n    CircularProgressCenter,\n    createCMSDefaultTheme,\n    FireCMS,\n    NavigationRoutes,\n    Scaffold,\n    SideEntityDialogs\n} from \"../core\";\n\nimport { FirebaseCMSAppProps } from \"./FirebaseCMSAppProps\";\nimport { useFirebaseAuthDelegate } from \"./hooks/useFirebaseAuthDelegate\";\nimport { useFirestoreDataSource } from \"./hooks/useFirestoreDataSource\";\nimport { useFirebaseStorageSource } from \"./hooks/useFirebaseStorageSource\";\nimport { useInitialiseFirebase } from \"./hooks/useInitialiseFirebase\";\nimport { FirebaseLoginView } from \"./components/FirebaseLoginView\";\nimport { FirebaseAuthDelegate } from \"./models/auth\";\n\nconst DEFAULT_SIGN_IN_OPTIONS = [\n    GoogleAuthProvider.PROVIDER_ID\n];\n\n/**\n * This is the default implementation of a FireCMS app using the Firebase services\n * as a backend.\n * You can use this component as a full app, by specifying collections and\n * entity schemas.\n *\n * This component is in charge of initialising Firebase, with the given\n * configuration object.\n *\n * If you are building a larger app and need finer control, you can use\n * {@link FireCMS}, {@link Scaffold}, {@link SideEntityDialogs}\n * and {@link NavigationRoutes} instead.\n *\n * @param props\n * @constructor\n * @category Firebase\n */\nexport function FirebaseCMSApp({\n                                   name,\n                                   logo,\n                                   toolbarExtraWidget,\n                                   authentication,\n                                   schemaOverrideHandler,\n                                   navigation,\n                                   textSearchController,\n                                   allowSkipLogin,\n                                   signInOptions = DEFAULT_SIGN_IN_OPTIONS,\n                                   firebaseConfig,\n                                   onFirebaseInit,\n                                   primaryColor,\n                                   secondaryColor,\n                                   fontFamily,\n                                   dateTimeFormat,\n                                   locale,\n                                   HomePage,\n                                   basePath,\n                                   baseCollectionPath,\n                                   LoginViewProps\n                               }: FirebaseCMSAppProps) {\n\n    const {\n        firebaseApp,\n        firebaseConfigLoading,\n        configError,\n        firebaseConfigError\n    } = useInitialiseFirebase({ onFirebaseInit, firebaseConfig });\n\n    const authDelegate: FirebaseAuthDelegate = useFirebaseAuthDelegate({\n        firebaseApp,\n        signInOptions\n    });\n\n    const dataSource = useFirestoreDataSource({\n        firebaseApp: firebaseApp,\n        textSearchController\n    });\n    const storageSource = useFirebaseStorageSource({ firebaseApp: firebaseApp });\n\n    if (configError) {\n        return <div> {configError} </div>;\n    }\n\n    if (firebaseConfigError) {\n        return <div>\n            It seems like the provided Firebase config is not correct. If you\n            are using the credentials provided automatically by Firebase\n            Hosting, make sure you link your Firebase app to Firebase\n            Hosting.\n        </div>;\n    }\n\n    if (firebaseConfigLoading || !firebaseApp) {\n    return <>\n        <CssBaseline/>\n        <CircularProgressCenter/>\n    </>;\n    }\n\n    return (\n        <BrowserRouter basename={basePath}>\n            <FireCMS navigation={navigation}\n                     authDelegate={authDelegate}\n                     authentication={authentication}\n                     schemaOverrideHandler={schemaOverrideHandler}\n                     dateTimeFormat={dateTimeFormat}\n                     dataSource={dataSource}\n                     storageSource={storageSource}\n                     entityLinkBuilder={({ entity }) => `https://console.firebase.google.com/project/${firebaseApp.options.projectId}/firestore/data/${entity.path}/${entity.id}`}\n                     locale={locale}\n                     basePath={basePath}\n                     baseCollectionPath={baseCollectionPath}>\n                {({ context, mode, loading }) => {\n\n                    const theme = createCMSDefaultTheme({\n                        mode,\n                        primaryColor,\n                        secondaryColor,\n                        fontFamily\n                    });\n\n                    let component;\n                    if (loading) {\n                        component = <CircularProgressCenter/>;\n                    } else if (!context.authController.canAccessMainView) {\n                        component = (\n                            <FirebaseLoginView\n                                logo={logo}\n                                allowSkipLogin={allowSkipLogin}\n                                signInOptions={signInOptions ?? DEFAULT_SIGN_IN_OPTIONS}\n                                firebaseApp={firebaseApp}\n                                authDelegate={authDelegate}\n                                {...LoginViewProps}\n                                />\n                        );\n                    } else {\n                        component = (\n                            <Scaffold name={name}\n                                      logo={logo}\n                                      toolbarExtraWidget={toolbarExtraWidget}>\n                                <NavigationRoutes HomePage={HomePage}/>\n                                <SideEntityDialogs/>\n                            </Scaffold>\n                        );\n                    }\n\n                    return (\n                        <ThemeProvider theme={theme}>\n                            <CssBaseline/>\n                            {component}\n                        </ThemeProvider>\n                    );\n                }}\n            </FireCMS>\n        </BrowserRouter>\n    );\n}\n","import { SearchIndex } from \"algoliasearch\";\n\n/**\n * Use this controller to return a list of ids from a search index, given a\n * `path` and a `searchString`.\n * Firestore does not support text search directly so we need to rely on an external\n * index, such as Algolia.\n * Note that you will get text search requests for collections that have the\n * `textSearchEnabled` flag set to `true`.\n * @see performAlgoliaTextSearch\n * @category Firebase\n */\nexport type FirestoreTextSearchController = (props: { path: string, searchString: string }) => Promise<readonly string[]> | undefined;\n\n/**\n * Utility function to perform a text search in an algolia index,\n * returning the ids of the entities.\n * @param index\n * @param query\n * @category Firebase\n */\nexport function performAlgoliaTextSearch(index: SearchIndex, query: string): Promise<readonly string[]> {\n\n    console.log(\"Performing Algolia query\", index, query);\n    return index\n        .search(query)\n        .then(({ hits }: any) => {\n            return hits.map((hit: any) => hit.objectID as string);\n        })\n        .catch((err: any) => {\n            console.log(err);\n            return [];\n        });\n}\n"],"names":["DEFAULT_STATE","isOpen","close","open","props","SnackbarContext","React","createContext","SnackbarProvider","children","setIsOpen","useState","title","setTitle","undefined","message","setMessage","type","setType","_jsxs","_jsx","Snackbar","_","Alert","FireCMSContextInstance","sideEntityController","navigationContext","dataSource","storageSource","authController","snackbarController","FireCMSContextProvider","context","DEFAULT_BREADCRUMBS_CONTROLLER","breadcrumbs","set","BreadcrumbContext","BreadcrumbsProvider","setBreadcrumbs","DEFAULT_MODE_STATE","mode","setMode","toggleMode","ModeStateContext","ModeProvider","prefersDarkModeQuery","useMediaQuery","prefersDarkMode","prefersDarkModeStorage","localStorage","getItem","useEffect","removeItem","setItem","s","removeInitialSlash","removeTrailingSlash","startsWith","slice","endsWith","path","collections","subpaths","removeInitialAndTrailingSlashes","split","length","Error","getCollectionFromCollectionsInternal","collectionViews","subpathCombinations","getCollectionPathsCombinations","result","i","subpathCombination","navigationEntry","find","entry","subcollections","newPath","replace","join","entries","splice","push","includeHiddenViews","navigation","navigationEntries","map","collection","url","buildUrlCollectionPath","name","description","group","views","view","hideFromNavigation","buildCMSUrlPath","Array","isArray","filter","groups","from","Set","Object","values","e","Boolean","currentFullPath","collectionPath","restOfThePath","nextSegments","entityId","fullPath","parentCollection","customViews","schema","customView","getNavigationEntriesFromPathInternal","NEW_URL_HASH","useBuildSideEntityController","location","useLocation","navigate","useNavigate","initialised","useRef","sidePanels","setSidePanels","state","baseLocation","base_location","updatePanels","useCallback","newPanels","removeAllOverridesExcept","panels","statePanel","current","isUrlCollectionPath","pathname","newFlag","hash","entityOrCollectionPath","urlPathToDataPath","buildSidePanelsFromUrl","lastSidePanel","locationPanels","selectedSubpath","copy","width","schemaProps","permissions","schemaOrResolver","overrideSchemaRegistry","setOverride","schemaConfig","schemaResolver","callbacks","cleanPath","updatedPanel","updatedPanels","newPanel","navigationViewsForPath","lastCollectionPath","previousEntry","EntityReference","id","constructor","pathWithId","GeoPoint","latitude","longitude","pick","obj","args","reduce","res","key","item","target","source","output","assign","isObject","keys","forEach","mergeDeep","o","includes","pathSegments","getValueInPath","v","Date","toLocaleString","ignoreUnknown","propertyOrBuilder","previousValues","propertyOverride","console","debug","property","readOnly","dataType","autoValue","disabled","hidden","properties","computeProperties","propertiesOrBuilder","originalSchema","buildPropertyFrom","a","b","defaultValues","propertyDefaultValue","value","initPropertyValue","defaultValue","initWithProperties","inputValues","status","timestampNowValue","referenceConverter","geopointConverter","traverseValues","inputValue","validation","required","entity","operation","updatedValues","updatedValue","traverseValue","of","oneOf","typeField","valueField","childProperty","basePath","baseCollectionPath","navigationOrBuilder","schemaOverrideHandler","dateTimeFormat","locale","userConfigPersistence","setNavigation","navigationLoading","setNavigationLoading","navigationLoadingError","setNavigationLoadingError","schemaConfigRecord","cleanBasePath","cleanBaseCollectionPath","homeUrl","fullCollectionPath","canAccessMainView","navigationOrCollections","user","then","catch","getSchemaOverride","collectionOverride","getCollectionConfig","buildSchemaResolver","schemaOverride","storedProperties","getCollectionOverride","dynamicCollectionConfig","getCollectionResolver","baseCollection","getCollectionByPath","log","resolvedCollection","sidePanelKey","getSidePanelKey","overriddenProps","resolvedProps","shouldOverrideRegistry","entityRefs","currentKey","onCollectionModifiedForUser","partialCollection","currentStoredConfig","onCollectionModified","loading","getNavigation","authDelegate","authentication","setUser","authLoading","setAuthLoading","notAllowedError","setNotAllowedError","extra","setExtra","loginSkipped","useMemo","initialLoading","signOut","checkAuthentication","delegateUser","Function","allowed","data","storageKey","stripCollectionPath","JSON","stringify","parse","saveStorageCollectionConfig","getStorageCollectionConfig","DEFAULT_COLLECTION_PATH","entityLinkBuilder","usedBasePath","usedBasedCollectionPath","dateUtilsLocale","locales","useBuildAuthController","useBuildStorageConfigurationPersistence","useBuildNavigationContext","LocalizationProvider","AdapterDateFns","DateFnsUtils","useStyles","makeStyles","theme","createStyles","flexCenter","display","alignItems","smallMargin","margin","spacing","text","paddingLeft","error","tooltip","classes","body","clsx","ErrorIcon","Tooltip","builder","setLoading","setResult","unmounted","Skeleton","AsyncPreviewComponent","memo","AsyncPreviewComponentInternal","ErrorBoundary","Component","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","Box","Typography","str","chr","charCodeAt","Math","abs","CHIP_COLORS","blueLighter","color","cyanLighter","tealLighter","greenLighter","yellowLighter","orangeLighter","redLighter","pinkLighter","purpleLighter","grayLighter","blueLight","cyanLight","tealLight","greenLight","yellowLight","orangeLight","redLight","pinkLight","purpleLight","grayLight","blueDark","cyanDark","tealDark","greenDark","yellowDark","orangeDark","redDark","pinkDark","purpleDark","grayDark","blueDarker","cyanDarker","tealDarker","greenDarker","yellowDarker","orangeDarker","redDarker","pinkDarker","purpleDarker","grayDarker","seed","hashString","colorKeys","index","enumValues","Map","get","labelOrConfig","getLabelOrConfigFrom","label","root","maxWidth","backgroundColor","fontWeight","typography","fontWeightRegular","enumKey","small","enumValue","toString","buildEnumLabel","colorSchemaKey","getColorSchemaKey","colorSeed","outlined","getColorSchemeForKey","getColorSchemeForSeed","Chip","size","config","previewAsTag","_Fragment","array","flexDirection","arrayWrap","flexWrap","arrayItem","stringProperty","ofProperty","CheckBox","CheckBoxOutlineBlank","MarkdownPreview","fontSize","lineHeight","fontFamily","stopPropagation","borderRadius","height","TINY_THUMBNAIL","SMALL_THUMBNAIL","REGULAR_THUMBNAIL","image","maxHeight","imageWrap","position","justifyContent","imageSize","imageTiny","objectFit","copyIcon","bottom","right","palette","common","white","previewIcon","onHover","setOnHover","getThumbnailMeasure","imageStyle","IconButton","clipboard","writeText","ContentPasteIcon","OpenInNewIcon","previewProperties","mapProperties","Table","TableBody","TableRow","borderBottom","TableCell","defaultDateFormat","useFireCMSContext","useContext","filterValues","sortBy","itemCount","searchString","entitiesDisplayedFirst","sortByProperty","currentSort","useDataSource","initialEntities","setData","dataLoading","setDataLoading","dataLoadingError","setDataLoadingError","noMoreToLoad","setNoMoreToLoad","updateData","entities","displayedFirstId","has","onEntitiesUpdate","onError","listenCollection","onUpdate","limit","startAfter","orderBy","order","fetchCollection","CACHE","useCache","setEntity","onEntityUpdate","updatedEntity","listenEntity","fetchEntity","onSaveSuccess","onSaveFailure","onPreSaveHookError","onSaveSuccessHookError","onPreSave","resolvedSchema","computeSchema","saveEntity","onDeleteSuccess","onDeleteFailure","onPreDeleteHookError","onDeleteSuccessHookError","entityDeleteProps","onPreDelete","deleteEntity","onDelete","setValue","clearedValueRef","clearOnDisabled","resultPromises","Promise","resolve","entityCollectionResolver","all","finally","useSnackbarController","useModeState","useClipboard","options","onSuccess","disableClipboardAPI","copiedDuration","ref","isCoppied","setIsCoppied","setClipbaord","setTimeout","isSupported","navigator","handleError","handleSuccess","copyToClipboard","err","clearClipboard","action","cut","element","isInput","tagName","input","innerText","appConfig","dateFormat","formattedDate","format","arrayItemBig","link","wordBreak","fontWeightMedium","Link","preventDefault","marginRight","mediaType","storageMeta","CardMedia","DescriptionOutlinedIcon","content","renderUrlComponent","renderSkeletonImageThumbnail","renderSkeletonText","arrayProperty","renderArrayOfMaps","renderArrayEnumTableCell","renderGenericArrayCell","renderArrayOfStrings","renderMap","renderReference","List","ListItem","tableProperties","Grid","renderSkeletonIcon","renderUrlAudioComponent","renderUrlVideo","renderUrlFile","StorageThumbnail","StorageThumbnailInternal","areEqual","prevProps","nextProps","URL_CACHE","storage","useStorageSource","storagePathOrDownloadUrl","setUrl","storeUrl","getDownloadURL","downloadURL","childSize","ReferencePreview","ReferencePreviewComponent","onClick","reference","useNavigation","useSideEntityController","collectionResolver","useEntityFetch","listProperties","buildError","flexGrow","whiteSpace","overflow","textOverflow","KeyboardTabIcon","Paper","clickableStyles","tabindex","lighten","background","default","darken","transition","boxShadow","cursor","padding","itemsAlign","tableNoBottomBorder","verticalAlignTop","verticalAlign","mapProperty","mapPropertyKeys","Divider","fieldProps","Preview","createElement","customProps","markdown","buildWrongValueType","AdjustIcon","multiline","SubjectIcon","PhotoIcon","AttachmentIcon","HttpIcon","ListIcon","ShortTextIcon","EqualizerIcon","RoomIcon","ViewListIcon","ListAltIcon","getIconForProperty","FlagIcon","ScheduleIcon","LinkIcon","Crop75Icon","valuePreview","iconCell","paddingTop","titleCell","TableContainer","getIdIcon","columnWidth","email","getPropertyColumnWidth","includeSubcollections","initialDisplayedProperties","excludedProperties","additionalColumns","subCollections","hiddenColumnIds","propertyKey","columnIds","column","p","c","columnId","subCollectionIds","getSubcollectionColumnId","subColId","search","shape","alpha","black","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","minHeight","inputInput","transitions","create","inputActive","onTextSearch","searchText","setSearchText","active","setActive","handler","clearTimeout","clearText","FormControl","SearchIcon","InputBase","event","ClearIcon","toolbar","down","paddingRight","divider","actions","selectRoot","marginTop","paddingBottom","primary","useTheme","largeLayout","filterView","filterIsSet","clearFilter","sizeSelect","Select","evt","onSizeChanged","MenuListProps","disablePadding","style","elevation","toUpperCase","MenuItem","Hidden","CircularProgress","useTableStyles","tableContainer","headerTypography","textTransform","header","secondary","tableRow","tableRowClickable","cellButtonsWrap","cellButtons","minWidth","cellButtonsId","textAlign","selectContainer","verticalLine","top","opacity","isSelected","isAllSelected","selectionEnabled","toggleEntitySelection","selectAll","onCopyClicked","onEditClicked","onDeleteClicked","editEnabled","deleteEnabled","anchorEl","setAnchorEl","currentTarget","onCheckboxChange","onCheckboxChange1","KeyboardTab","Checkbox","useCellStyles","tableCell","border","contain","removePadding","paper","align","fullWidth","fullHeight","light","selected","saved","success","iconsTop","arrow","centered","faded","maskImage","scrollable","TableCellInternal","focused","disabledTooltip","allowScroll","openPopup","select","showExpandIcon","createRef","isOverflowing","setIsOverflowing","getRowHeight","internalSaved","setInternalSaved","iconRef","focus","preventScroll","doOpenPopup","cellRect","getBoundingClientRect","detail","onSelect","onFocus","onMeasure","contentRect","bounds","newOverflowingValue","cellClasses","measuredDiv","Measure","measureRef","RemoveCircleIcon","ErrorOutlineIcon","isEqual","yup","addMethod","mapper","test","customFieldValidator","objectSchema","mapPropertyToYup","object","propertyContext","getYupStringSchema","getYupNumberSchema","getYupBooleanSchema","getYupMapObjectSchema","getYupArraySchema","getYupDateSchema","getYupGeoPointSchema","getYupReferenceSchema","parentProperty","childName","string","requiredMessage","enumToObjectEntries","nullable","notRequired","unique","min","max","matches","matchesMessage","trim","lowercase","uppercase","number","typeError","lessThan","moreThan","positive","negative","integer","date","boolean","uniqueInArray","arrayUniqueFields","hasUniqueInArrayModifier","useInputStyles","resize","outline","updateValue","internalValue","setInternalValue","focusedState","emptyInitialValue","selectionStart","selectionEnd","TextareaAutosize","newValue","multiple","setPreventOutsideClick","valueType","setOpen","handleOpen","handleClose","validValue","parseFloat","chip","isEnumValueDisabled","ListItemText","numberInput","onBlur","propStringValue","numberValue","isNaN","regexp","Input","Switch","checked","DateTimePicker","dateValue","params","MuiTextField","InputProps","disableUnderline","usedProperty","multiselect","onSingleValueSet","getReferenceFrom","onMultipleEntitiesSelected","selectedIds","valueNotSet","getPreviewSizeFrom","m","buildSingleReferenceField","buildMultipleReferenceField","Button","dropZone","hasValue","activeDrop","borderColor","acceptDrop","rejectDrop","arrayEntry","arrayEntryHovered","boxSizing","thumbnailCloseIcon","zIndex","entityValues","previewSize","multipleFilesSupported","fileNameBuilder","file","fileName","storagePathBuilder","storagePath","warn","StorageUpload","onChange","previewSizeInput","autoFocus","metadata","internalInitialValue","getRandomId","initialValue","floor","random","Number","MAX_SAFE_INTEGER","items","indexOf","onExternalDrop","acceptedFiles","newInternalValue","removeDuplicates","onFileUploadComplete","uploadedPath","uploadPathOrDownloadUrl","postProcess","fieldValue","onClear","clearedStoragePathOrDownloadUrl","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useDropzone","accept","noClick","noKeyboard","onDrop","rootProps","helpText","renderProperty","child","StorageItemPreview","StorageUploadProgress","EditIcon","fill","snackbarContext","setError","mounted","upload","uploadFile","PropertyTableCellInternal","setFocused","onValueChange","setSaved","customField","Field","customPreview","isReadOnly","disabledMessage","validate","innerComponent","numberProperty","PropertyTableCell","containerRef","x","y","onMove","relX","relY","onMouseDown","button","screenX","screenY","addEventListener","onMouseMove","onMouseUp","removeEventListener","update","left","setSize","useLayoutEffect","window","innerWidth","innerHeight","updateSize","buildEntry","onInternalIdAdded","includeAddButton","internalIdsMap","getHashValue","internalIdsRef","internalIds","setInternalIds","newInternalIds","hashValue","newInternalId","FieldArray","arrayHelpers","insertInEnd","newIds","remove","onDragEnd","destination","sourceIndex","destinationIndex","temp","move","DragDropContext","Droppable","droppableProvided","droppableSnapshot","droppableProps","innerRef","internalId","Draggable","provided","snapshot","draggableProps","marginBottom","dragHandleProps","DragHandleIcon","placeholder","FormHelperText","longDescription","InfoIcon","formStyles","inputLabel","shrinkInputLabel","showError","touched","includeDescription","shouldAlwaysRerender","InputLabel","shrink","MuiSelect","eventValue","borderTopLeftRadius","borderTopRightRadius","main","grey","nonActiveDrop","uploadItem","uploadItemSmall","tableMode","isSubmitting","isDraggingOver","noDragEventsBubbling","setInitialValue","moveItem","fromIndex","toIndex","allowInfinity","isMultiline","valueIsInfinity","Infinity","inputType","numValue","filledInput","FilledInput","rows","FormControlLabel","formControl","transform","SwitchFieldComponent","forwardRef","setFocus","SwitchField","sx","handleEntityClick","handleClickOpen","clearValue","seeEntityDetails","onClose","missingEntity","allProperties","buildEntityView","underlyingValueHasChanged","lastAddedId","setLastAddedId","buildPropertyField","partOfArray","typeInternal","setTypeInternal","typeFieldName","valueFieldName","FastField","field","form","setFieldTouched","setFieldValue","MDEditor","onEntryClick","entryValue","component","ReadOnlyField","ArrayEnumSelect","StorageUploadField","ArrayOfReferencesField","ArrayDefaultField","ArrayOneOfField","MapField","ReferenceField","DateTimeField","TextField","MarkdownField","componentProps","FieldComponent","customFieldProps","meta","getIn","errors","submitCount","cmsFieldProps","pickOnlySomeKeys","handleAddProperty","isHidden","entryKey","buildPickKeysSelect","ErrorFocus","isValidating","useFormikContext","errorElement","querySelector","scrollableParent","getScrollableParent","scrollTo","scrollTop","behavior","isScrollable","ele","hasScrollableContent","scrollHeight","clientHeight","overflowYStyle","getComputedStyle","overflowY","isOverflowHidden","document","parentNode","largePadding","buttons","oneOfInput","customId","idSetAutomatically","hasEnumValues","inputProps","className","endAdornment","InputAdornment","variant","ErrorMessage","stickyButtons","backdropFilter","borderTop","container","onEntitySave","onDiscard","onModified","onValuesChanged","initialResolvedSchema","baseDataSourceValues","formRef","setCustomId","customIdError","setCustomIdError","savingError","setSavingError","initialValuesRef","initialValues","mustSetCustomId","underlyingChanges","latestValue","saveValues","formikActions","setSubmitting","savedEntityId","setTouched","uniqueFieldValidator","checkUniqueField","validationSchema","getYupEntitySchema","Formik","handleSubmit","dirty","modified","formValue","formFields","cmsFormFieldProps","Container","Form","buildButtons","ElementResizeListener","onResize","rafRef","objectRef","onResizeRef","_onResize","cancelAnimationFrame","requestAnimationFrame","onLoad","contentDocument","defaultView","alignSelf","popup","userSelect","popupInner","visibility","tableKey","columnIndex","onCellValueChange","popupLocation","setPopupLocation","windowSize","useWindowSize","initialPositionSet","draggableBoundingRect","getInitialLocation","normalizePosition","updatePopupLocation","newPosition","adaptResize","saveValue","handleChange","draggable","Portal","inlineEditing","displayedProperties","selectedCell","setSelectedCell","popupCell","setPopupCell","preventOutsideClick","additionalColumnsMap","aC","escFunction","keyCode","cell","unselect","onPopupClose","buildFilterEnumValues","buildFilterableFromProperty","isGlobalAdmin","auth","useAuthController","admin","newProps","k","onlyForGlobalAdmin","propertyCellRenderer","rowData","rowIndex","dataKey","checkInlineEditing","isFocused","additionalCellRenderer","additionalColumn","dependencies","allColumns","getCellAlignment","icon","hoverOrOpen","sortable","cellRenderer","columns","popupFormField","DEFAULT_PAGE_SIZE","CollectionTable","CollectionTableInternal","toolbarActionsBuilder","tableRowActionsBuilder","onEntityClick","onColumnResize","hoverRow","initialFilter","initialSort","filterCombinations","textSearchEnabled","paginationEnabled","pagination","pageSize","setItemCount","setFilterValues","setSortBy","subcollectionColumns","subcollection","buttonContent","useColumnIds","onCellChanged","saveProps","saveEntityWithCallbacks","useBuildColumnsFromSchema","hideInTable","setSearchString","useCollectionFetch","loadNextPage","resetPagination","buildIdColumn","onRowClick","newSearchString","isFilterCombinationValid","indexes","sortKey","sortDirection","filterKeys","filtersCount","compositeIndex","every","dialogBody","onSingleEntitySelected","selectedEntityIds","selectedEntities","setSelectedEntities","Dialog","DialogActions","entityOrEntitiesToDelete","onEntityDelete","onMultipleEntitiesDelete","other","entityOrEntities","setUsedEntityOrEntities","multipleEntities","setMultipleEntities","revisedEntityOrEntities","handleCancel","performDelete","deleteEntityWithCallbacks","handleOk","results","some","EntityPreview","dialogTitle","DialogTitle","DialogContent","additionalData","exportConfig","headers","getExportHeaders","exportableData","getExportableData","headersData","entryToCSVRow","h","csvData","mergedData","processCSVValues","additional","childKey","getHeaders","flat","prefix","processCSVValue","getTime","String","replaceAll","filename","contentType","blob","Blob","URL","createObjectURL","pom","href","setAttribute","click","INITIAL_DOCUMENTS_LIMIT","dataRef","additionalDataRef","hasLargeAmountOfData","setHasLargeAmountOfData","fetchLargeDataAccepted","setFetchLargeDataAccepted","doDownload","downloadCSV","updateEntities","pendingDownload","additionalColumnsData","fetchAdditionalColumns","resolvedColumnsValues","onFetchError","needsToAcceptFetchAllData","onOkClicked","Upload","DialogContentText","DEFAULT_PERMISSIONS","edit","delete","permission","checkHasPermissionOnEntity","collectionData","d","new1","isEntitySelected","isAllEntitiesSelected","deleteEntityClicked","setDeleteEntityClicked","exportable","selectionController","useSelectionController","usedSelectionController","onNewClick","internalOnEntityDelete","_path","internalOnMultipleEntitiesDelete","canEdit","updatedFields","defaultSize","direction","Popover","vertical","horizontal","createEnabled","canCreate","canDelete","clickedEntity","addButton","Add","extraActions","exportButton","card","computeTopNavigation","allGroups","CardActionArea","ReactLink","CardContent","PlaylistPlayIcon","CardActions","ArrowForwardIcon","buildNavigationCard","baseTableCss","operationLabels","in","multipleSelectOperations","possibleOperations","fieldOperation","setOperation","op","val","prevOpIsArray","newOpIsArray","hasNewValue","OutlinedInput","updateFilter","parseInt","valueSetToTrue","valueSet","CalendarTodayIcon","headerInternal","headerTitle","flexShrink","headerTitleInternal","headerIcon","headerIconButton","TableHeader","TableHeaderInternal","sort","onColumnSort","onFilterUpdate","handleSettingsClick","filterForProperty","hideFilter","Badge","ArrowUpwardIcon","ArrowDownwardIcon","ArrowDropDownCircleIcon","filterInternal","setFilterInternal","submit","reset","filterConfig","filterValue","setFilterValue","createFilterField","PIXEL_NEXT_PAGE_OFFSET","alignText","idColumnBuilder","onResetPagination","onEndReached","frozenIdColumn","checkFilterCombination","emptyMessage","onSortByUpdate","tableSize","setTableSize","tableRef","scrollRef","endReachedTimestampRef","getClass","disableCustomStyles","scrollToTop","isDesc","newSort","isAsc","newSortProperty","newSortBy","setIsSelected","checkbox","querySelectorAll","getElementsByTagName","resetSort","onScroll","scrollUpdateWasRequested","prudentTime","now","onEndReachedInternal","clickRow","headerRenderer","filterForThisProperty","onInternalFilterUpdate","newFilterValue","isNewFilterCombinationValid","AssignmentIcon","onBaseTableColumnResize","BaseTable","buildErrorView","buildEmptyView","Column","textColor","useBreadcrumbsContext","HomePage","customRoutes","buildCMSViewRoute","cmsView","Route","collectionRoutes","urlPath","EntityCollectionView","homeRoute","notFoundRoute","Routes","breadcrumbsContext","logo","closeDrawer","ungroupedNavigationViews","createNavigationListItem","NavLink","isActive","py","logoComponent","appbar","menuButton","breadcrumb","shadows","handleDrawerToggle","toolbarExtraWidget","initial","displayName","Slide","AppBar","Toolbar","MenuIcon","Breadcrumbs","NavigateNextIcon","Brightness3Icon","Brightness5Icon","photoURL","Avatar","drawerPaper","Drawer","drawerOpen","setDrawerOpen","UsedDrawer","FireCMSDrawer","MuiDrawer","keepMounted","node","rect","containerWindow","ownerWindow","fakeTransform","computedStyle","getPropertyValue","offsetX","transformValues","getTranslateValue","webkitTransform","SlideFade","inProp","timeout","onExitAnimation","childrenRef","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","handleEnter","setTranslateValue","reflow","handleEntering","transitionProps","getTransitionProps","webkitTransition","easing","easeOut","handleExit","sharp","handleExited","updatePosition","handleResize","debounce","clear","Transition","childProps","cloneElement","duration","WebkitOverflowScrolling","paperAnchorRight","offsetPosition","modal","defaultTransitionDuration","enter","exit","SideDialogDrawer","drawer","slidingDrawer","Modal","transitionDuration","Backdrop","CONTAINER_WIDTH","CONTAINER_FULL_WIDTH","TAB_WIDTH","lazy","EntityForm","useStylesSide","containerWidth","containerWide","subcollectionPanel","borderLeft","tabsContainer","tabBar","tab","onModifiedValues","resolvedWidth","setStatus","currentEntityId","setCurrentEntityId","setReadOnly","tabsPosition","setTabsPosition","modifiedValues","setModifiedValues","returnValue","beforeunload","customViewsCount","findIndex","Suspense","customViewsView","colIndex","subCollectionsViews","absolutePath","getSelectedSubpath","onSideTabClick","CloseIcon","Tabs","Tab","ev","when","nextLocation","setNextLocation","UNSAFE_NavigationContext","blocker","retry","unblock","block","tx","autoUnblockingTx","navigationWasBlocked","schemaName","allPanels","panel","drawerCloseRequested","setDrawerCloseRequested","handleNavigationOk","handleNavigationCancel","useNavigationUnsavedChangesDialog","handleDrawerCloseOk","handleDrawerCloseCancel","createCMSDefaultTheme","primaryColor","secondaryColor","createTheme","pink","red","A400","h6","components","MuiButton","styleOverrides","MuiTableRow","MuiTypography","MuiInputBase","original","collectionView","enumValueConfig","additionalColumnDelegate","useFirebaseAuthDelegate","firebaseApp","signInOptions","loggedUser","setLoggedUser","authProviderError","setAuthProviderError","setInitialLoading","setLoginSkipped","getAuth","currentUser","onAuthStateChanged","updateFirebaseUser","firebaseUser","getProviderOptions","providerId","option","provider","googleLogin","GoogleAuthProvider","scopes","scope","addScope","customParameters","setCustomParameters","signInWithPopup","authError","onSignOut","skipLogin","anonymousLogin","appleLogin","OAuthProvider","doOauthLogin","facebookLogin","FacebookAuthProvider","githubLogin","GithubAuthProvider","microsoftLogin","twitterLogin","TwitterAuthProvider","emailPasswordLogin","password","fetchSignInMethodsForEmail","createUserWithEmailAndPassword","registerWithPasswordEmail","textSearchController","firestoreRef","firestore","getFirestore","doc","firestoreToCMSModel","sanitizeData","getCMSPathFromFirestorePath","collectionReference","queryParams","filterParameter","whereClause","cmsToFirestoreModel","orderByClause","startAfterClause","limitClause","query","getDoc","docSnapshot","createEntityFromSchema","ids","promises","getAndBuildEntity","performTextSearch","buildQuery","getDocs","docs","onSnapshot","next","updatedFirestoreValues","updateAutoValues","serverTimestamp","FirestoreGeoPoint","documentReference","setDoc","merge","deleteDoc","q","snapshots","traverse","Timestamp","toDate","DocumentReference","fsPath","to","lastIndexOf","substring","setStorage","getStorage","urlsCache","usedFilename","uploadBytes","firebaseConfig","onFirebaseInit","setFirebaseApp","firebaseConfigLoading","setFirebaseConfigLoading","configError","setConfigError","firebaseConfigError","setFirebaseConfigError","initFirebase","initialisedFirebaseApp","initializeApp","fetch","response","json","googleIcon","appleIcon","githubIcon","facebookIcon","microsoftIcon","twitterIcon","allowSkipLogin","NoUserComponent","disableSignupScreen","modeState","passwordLoginSelected","setPasswordLoginSelected","resolvedSignInOptions","errorView","ignoredCodes","code","projectId","notAllowedMessage","Fade","buildOauthLoginButtons","EmailIcon","PersonOutlineIcon","justifyItems","pl","passwordRef","setEmail","availableProviders","setAvailableProviders","setPassword","shouldShowEmail","loginMode","otherProvidersMode","registrationMode","onBackPressed","ArrowBackIcon","providers","DEFAULT_SIGN_IN_OPTIONS","PROVIDER_ID","LoginViewProps","useInitialiseFirebase","useFirestoreDataSource","useFirebaseStorageSource","CssBaseline","BrowserRouter","ThemeProvider","hits","hit","objectID"],"mappings":"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"}